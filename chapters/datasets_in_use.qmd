# Datasets in use

The following chart shows how many times we found a dataset being used in the papers we collected. It excludes custom edits to the datasets, which are discussed later in this document.

```{ojs}
//| echo: false
//| fig-cap: "This barchart shows, for the top 14 most used datasets, the number of times a dataset was used in collected papers. All the other datasets are used only once in the collection."
//| fig-alt: "A barchart showing the number of times a dataset was used in the papers in our survey. The most used dataset is Rome-Lib, followed by assorted collaboration networks (which in many cases refers to datasets of academic collaborations such as dblp or vispubdata). The third most used dataset is from C.Walshaw."
{ 
    let d = []
    let allbenchmarkdatasets = [...new Set(literature.map(l => l["Dataset tag relations"].split("(")[0].trim()))].filter(a => a != "")
  
    allbenchmarkdatasets = allbenchmarkdatasets.filter(b => !b.includes("Custom"))
    allbenchmarkdatasets = allbenchmarkdatasets.slice(0, 14)
    //console.log(allbenchmarkdatasets)

    for (let dataset of allbenchmarkdatasets){
        let literature_entries_with_this_dataset = literature.filter(l => l["Dataset tag relations"].includes(dataset))
        d.push({"dataset": dataset, "count": literature_entries_with_this_dataset.length})
    }
  
    return Plot.plot({
        color: {
      // legend: true,
      // type: "categorical",
      // domain: d3.range(10).map((d, i) => `Category ${i + 1}`),
        // range: ["steelblue"],
          scheme: "Tableau10" // use the "accent" scheme
        },
        y: {
      // tickFormat: "s"
        },
        marks: [
            Plot.barX(d, {x: "count", y: "dataset", fill: "dataset", inset: 2, sort: {y: "x", reverse: true}}),
            Plot.axisY({label: null, lineWidth: 12, marginLeft: 150}),
        ]
  })
}
```

In the data we collected, the most used dataset is 
<a href="#Rome-Lib" class="dataset-link">Rome-Lib</a>, followed by <a href="#Assorted_collaboration_networks" class="dataset-link">assorted collaboration networks</a> (which in many cases refers to datasets of academic collaborations such as dblp or vispubdata). The third most used dataset is from <a href="#Walshaw" class="dataset-link">C.Walshaw</a> - it is important to note that the Walshaw dataset is available as part of other collections - for instance, its graphs are found in <a href="#SNAP" class="dataset-link">SNAP</a>. However, during the collection process, we preferred giving precedence to how the authors reported their own information. Thus, if the authors claimed the data was from the Walshaw collection, we reported it as such.

In some cases, we grouped together datasets that share similar structural or contextual characteristics under a broader category — for example, Social Networks includes graphs from multiple sources such as Facebook, DBLP, and others. These graphs are often used interchangeably in layout evaluation papers, and while most papers only use one of them, we grouped them to reflect the broader trend of using social networks as a class of input graphs. We note, however, that this grouping may affect how the most-used datasets are ranked. In particular, counts for grouped categories like Social Networks reflect cumulative usage across all sources in the group, rather than implying that all papers used the full set.

For each of the datasets collected as part of our process, we conducted a brief analysis of their contents. Where possible, the analysis includes information about the number of nodes per graph, the source of the dataset, which papers have used the dataset and what graph features they took into account. 

In the following sections, the reader will find details about the classifications and datasets in detail. Each dataset gets a dedicated, collapsible section, that contains the following information:

- A brief summary description of the dataset, the reasons for its popularity, and notes about how it was created or collected.
- Metadata containing:
  - The original source of the dataset.
  - Links to download the dataset in different formats, provided from our OSF repository.
  - The size of the dataset.
  - The original paper where the dataset was first introduced.
  - A list of papers that have used the dataset, together with what features their graph layout algorithm handles.
- Charts illustrating node and edge count distribution through the dataset, mean and maximum distribution.
- Descriptions of the datasets lifted directly from the literature, which can help shine light on the content and properties of the dataset, how it was used in previous literature, or how it originated.
- Figures collected from the literature, such as visualizations of the graphs, or other relevant information. The visualizations can help a reader looking for a specific type of graph to quickly identify if the dataset is relevant to their research.

<a name="acyclic"></a>
<a name="bipartite"></a>
<a name="bundled_edges_generated"></a>
<a name="categorical_nodes"></a>
<a name="clusters"></a>
<a name="clusters_generated"></a>
<a name="dense"></a>
<a name="directed_edges"></a>
<a name="dynamic"></a>
<a name="dynamic_discrete"></a>
<a name="edge_weighted"></a>
<a name="generic"></a>
<a name="hierarchical"></a>
<a name="hypergraph"></a>
<a name="known_crossing_number"></a>
<a name="labeled_nodes"></a>
<a name="large"></a>
<a name="layered_graphs"></a>
<a name="many_layers"></a>
<a name="mesh"></a>
<a name="multigraph"></a>
<a name="node_weighted"></a>
<a name="nonplanar"></a>
<a name="partition"></a>
<a name="planar"></a>
<a name="signed"></a>
<a name="sparse"></a>
<a name="spatial"></a>
<a name="temporal"></a>
<a name="temporal_event_sequence"></a>
<a name="tree-like"></a>
<a name="trees"></a>


## Classification of the Datasets

The datasets we collected are divided in different categories: the categorization we used is the same as the one used in @dibartolomeo2024evaluating. The following is a brief explanation of the categories used, which are explained in deeper detail in each one of the corresponding chapters.

- **Uniform Benchmark (@sec-uniform-benchmark-datasets):** Datasets that are standalone widely used collections of graphs featuring uniform characteristics - usually simple, generic graphs, often used in evaluations that run over thousands of graphs to report average completion times, or other experiments where the reported metrics are usually aggregated.
- **Established Network Repository (@sec-established-network-repositories):** A collection of individual, or groups of graphs, part of a larger repository. These datasets are often used in evaluations that require a diverse set of graphs, or when the evaluation is focused on a specific type of graph. These collections usually also report on graphs with their own statistics or visualizations, providing a summary of the dataset. This category also includes **Subsets (@sec-subsets)**.
- **Single Graphs (@sec-single-graphs):** The data used is comprised of one individual graph, which often contains special characteristics making it particularly relevant for the evaluation at hand. 
- **Aggregate Collections (@sec-aggregate-collections):** Collections of graphs focusing on one specific context (such as forum posts, or airline routes) due to the given context having a special set of features that is relevant for a graph layout algorithm. 

The type of collection informs various aspects of an evaluation, such as which results are relevant to report. For this discussion, we refer to @dibartolomeo2024evaluating, where the authors link the type of collection in the context of graph layout evaluations.

The following visualization shows the amount of datasets we collected per category:

```{ojs}
//| echo: false
//| fig-cap: "Occurrences of datasets we collected per category. Unform benchmark datasets were the majority."
{ 
  let d = []
  
  let collection_type = benchmark_datasets.map(a => a["Type of Collection"]);

  for (let c of [... new Set(collection_type)]){
    if (c == "Skip" || c == "Missed it") continue;
    let count = collection_type.filter(a => a == c).length;
    if (c.includes("No report")) c = "Established Network Repository";
    if (c.includes("Lost")) continue;
    d.push({"collection_type": c, "count": count})
  }
  
  return Plot.plot({
    color: {
      scheme: "Tableau10" 
    },
    marks: [
      Plot.barX(d, {x: "count", y: "collection_type", fill: "collection_type", inset: 2, sort: {y: "x", reverse: true}}),
      Plot.axisY({label: null, lineWidth: 12, marginLeft: 150}),
    ]
  })
}
```

Unfortunately, some of the datasets used in layout algorithm evaluations are not accessible anymore. Where possible, we still collected and reported all the information contained in the papers about the datasets, so that we can conserve an idea of what they contained. This phenomenon, as well as the information we could collect, is discussed in **Lost and Unavailable Datasets (@sec-lost)**.

```{ojs}
//| echo: false
//| fig-cap: "Unfortunately, 9 of the datasets we found being used in the literature were either lost or no longer accessible."
{ 
  let d = []
  
  let collection_type = benchmark_datasets.map(a => a["Type of Collection"]);

  for (let c of [... new Set(collection_type)]){
    if (c == "Skip" || c == "Missed it") continue;
    let count = collection_type.filter(a => a == c).length;
    if (c.includes("No report")) c = "Established Network Repository";
    if (!c.includes("Lost")) continue;
    d.push({"collection_type": c, "count": count})
  }
  
  return Plot.plot({
    color: {
      scheme: "PiYg" 
    },
    marks: [
      Plot.barX(d, {x: "count", y: "collection_type", fill: "collection_type", inset: 2, sort: {y: "x", reverse: true}}),
      Plot.axisY({label: null, lineWidth: 12, marginLeft: 150}),
    ]
  })
}
```

Finally, we include a discussion on **Custom-made Datasets (@sec-custom-made-datasets)**, synthetically generated datasets for the purpose of an experiment. 

Each dataset also contains a number of graph features specific to the graphs contained in it. Authors might want to use a dataset that contains a specific feature, such as a graph with a high number of nodes, or a graph with a specific structure. The following interactive filtering systems allows for filtering of datasets (and papers) based on the features they contain.

{{< include /chapters/interactive_filtering.qmd >}}

### Uniform Benchmark datasets {#sec-uniform-benchmark-datasets}

**Uniform Benchmark** datasets are standalone, widely used collections of graphs that share consistent structural characteristics — typically simple, synthetic, or randomly generated graphs. These benchmarks are often used in large-scale evaluations where experiments are run on thousands of graphs, and results are reported as aggregated metrics such as average running time or layout quality scores.

What distinguishes these benchmarks is that they are designed to test the general performance of layout algorithms across a wide range of input sizes and densities, rather than being tied to a particular real-world context or graph semantics. This is different from other collections presented later in this section, which may focus on graphs with specific structural patterns (e.g., social networks, hierarchical trees, storyline structures) or graphs drawn from a single domain.

The first of these collapsible sections is shown already expanded, to give an example of the content that can be found in each of them. The content is generated dynamically based on the data we collected. 

<a name="Rome-Lib"></a>

::: {.callout-note title="Rome-Lib" collapse=false appearance="minimal"}

Rome-Lib is, as previously discussed, the most common benchmark dataset, due to its already established popularity, its ease of use and access, and the many properties that are already known about it. 
It was first introduced in [@DiBattista1997b] and presented in their paper ”An experimental comparison of four graph drawing algorithms”. Mostly “real” networks such as software companies, government, software engineering books, database design, and journal articles on visualization. Originally sent as an extended abstract to Computational Geometry in 1995 [@DiBattista1995]. 
It contains exclusively <a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a>graphs (e.g., undirected, non-layered, without pre-established clusters...), although some of the research that uses it enhances with additional attributes (such as performing a rank assignment step). 
Information about optimal crossings can be found as part of [WebCompute](#WebCompute).

<div><b>Originally found at: </b><a href="http://www.graphdrawing.org/data.html">http://www.graphdrawing.org/data.html</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d947f91101aa0dc66a0c4d" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96db0803e0c0cb7558c0f" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971aa4cf748115a055897" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ec4803e0c0b00558bc1" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>11534 graphs, 10 to 100 nodes, 9 to 158 edges </div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@DiBattista1997b]</div><div class="col-8">An experimental comparison of four graph drawing algorithms</div></div>
<div class="row"><div class="col-4">[@DiBattista1995]</div><div class="col-8">An experimental comparison of three graph drawing algorithms (extended abstract)</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Buchheim2008]</div><div class="col-4">A branch-and-cut approach to the crossing number problem</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@chimani2010]</div><div class="col-4">Layer-Free Upward Crossing Minimization</div><div class="col-4"><a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@chimani2006]</div><div class="col-4">Experiments on Exact Crossing Minimization Using Column Generation</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@diBartolomeo2022b]</div><div class="col-4">Stratisfimal Layout: A modular optimization model for laying out layered node-link network visualizations</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Other"><span class="pill-tag pill_color_other">Compound graphs</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@klammler2018]</div><div class="col-4">Aesthetic Discrimination of Graph Layouts</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Chimani2008]</div><div class="col-4">A New Approach to Exact Crossing Minimization</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Gansner2006]</div><div class="col-4">Improved circular layouts</div><div class="col-4"><a href="#Other"><span class="pill-tag pill_color_other">Circular</span></a></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">Deep Neural Network for Drawing Networks</div><div class="col-4"></div></div>
<div class="row"><div class="col-4">[@Gutwenger2004]</div><div class="col-4">An Experimental Study of Crossing Minimization Heuristics</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@DiBattista1997b]</div><div class="col-4">An experimental comparison of four graph drawing algorithms</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@chimani2016]</div><div class="col-4">A Note on the Practicality of Maximal Planar Subgraph Algorithms</div><div class="col-4"><a href="#Planar"><span class="pill-tag pill_color_Planar">Planar</span></a></div></div>
<div class="row"><div class="col-4">[@Kindermann2018]</div><div class="col-4">Experimental Analysis of the Accessibility of Drawings with Few Segments</div><div class="col-4"><a href="#Sparse"><span class="pill-tag pill_color_Sparse">Sparse</span></a><a href="#Trees"><span class="pill-tag pill_color_Trees">Trees</span></a></div></div>
<div class="row"><div class="col-4">[@Heinsohn2018]</div><div class="col-4">An Interactive Tool to Explore and Improve the Ply Number of Drawings</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Demel2018]</div><div class="col-4">A Greedy Heuristic for Crossing-Angle Maximization</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Bekos2018]</div><div class="col-4">A Heuristic Approach Towards Drawings of Graphs with High Crossing Resolution</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Niedermann2020]</div><div class="col-4">An Integer-Linear Program for Bend-Minimization in Ortho-Radial Drawings</div><div class="col-4"><a href="#Other"><span class="pill-tag pill_color_other">Ortho</span></a><a href="#Other"><span class="pill-tag pill_color_other">Ortho-radial</span></a></div></div>
<div class="row"><div class="col-4">[@Chimani2021]</div><div class="col-4">Star-Struck by Fixed Embeddings: Modern Crossing Number Heuristics</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Clancy2019]</div><div class="col-4">An effective crossing minimisation heuristic based on star insertion</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Chimani2012]</div><div class="col-4">Advances in the Planarization Method: Effective Multiple Edge Insertions</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@chimani2016b]</div><div class="col-4">An ILP-based Proof System for the Crossing
Number Problem</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/Rome-Lib%20c2f20984de724f4c89764b0bc494e99e/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From “[A branch-and-cut approach to the crossing number problem](https://doi.org/10.1016/j.disopt.2007.05.006)”:

> To test the performance of our new algorithm, we used a benchmark set of graphs of the University of Rome III, introduced in [11]. The set contains 11 389 graphs that consist of 10 to 100 nodes and 9 to 158 edges. These graphs were generated from a core set of 112 “real life” graphs used in database design and software engineering applications. Most of the graphs are sparse, which is a common property in most application areas of automatic graph drawing. The average ratio between the number of edges and the number of nodes of the graphs from the benchmark set is about 1.35.

From “[Layer-free upward crossing minimization](https://doi.org/10.1145/1671970.1671975)”:

> The Rome graphs [Di Battista et al. 1997] are a widely used benchmark set in graph drawing, obtained from a basic set of 112 real-world graphs. It contains 11,528 instances with 10 through 100 nodes and 9 through 158 edges. Although the graphs are originally undirected, they have been used as directed graphs—by artificially directing the edges according to the node order given in the input files—for showing the performance of the mixed-upward planarization approach [Eiglsperger et al. 2003]. In this case, all edges are directed and the graphs are acyclic; hence, the mixed-upward planarization approach turns into an upward planarization method.

From “[A New Approach to Exact Crossing Minimization](https://doi.org/10.1007/978-3-540-87744-8_24)”:

> We say graphs are trivial, if they are planar or if the heuristic achieves a planarization with only one crossing, as in these cases we need not prove optimality. The Rome library contains 7172 non-trivial graphs.

From “[An Experimental Comparison of Four Graph Drawing Algorithms](https://doi.org/10.1016/s0925-7721(96)00005-3)”

> Our test graph generation strategy is as follows. First, we have focused on the important application area of database and software visualization, where Entity-Relationship diagrams and Data-Flow diagrams are usually displayed with orthogonal drawings. Second, we have collected 112 "real life" graphs with number of vertices between 10 and 100, from now on called core graphs, from the following sources:

> • 54% of the graphs have been obtained from major Italian software companies (especially from Database Informatica) and large government organization (including the Italian Internal Revenue Service and the Italian National Advisory Council for Computer Applications in the Government (Autorita’ per l'Informatica nella Pubblica Amministrazione));
• 33% of the graphs were taken from well-known reference books in software engineering [18] and database design [1], and from journal articles on software visualization in the recent issues of Information Systems and the IEEE Transactions on Software Engineering;
• 13% of the graphs were extracted from theses in software and database visualization written by students at the University of Rome "La Sapienza".

> Our approach is based on the following scheme. We defined several primitive operations for updating graphs, which correspond to the typical operations performed by designers of Entity-Relationship and Data-Flow Diagrams, and attributed a certain probability to each of them. More specifically, the updating primitives we have used are the following: InsertEdge, which inserts a new edge between two existing vertices; DeleteEdge, which deletes an existing edge; InsertVertex, which splits an existing edge into two edges by inserting a new vertex; DeleteVertex, which deletes a vertex and all its incident edges; and MakeVertex, which creates a new vertex and connects it to a subset of vertices. The test graphs were then generated in several iterations starting from the core graphs by applying random sequences of operations with a "genetic" mechanism. Namely, at each iteration a new set of test graphs was obtained by applying a random sequence of operations to the current test set. Each new graph was then evaluated for "suitability", and those found not suitable were discarded. The probability of each primitive operation was varied at the end of each iteration. The evaluation of the suitability of the generated graphs was conducted using both objective and subjective analyses. The objective analysis consisted of determining whether the new graph had similar structural properties with respect to the core graph it was derived from. We have taken into account parameters like the average ratio between number of vertices and number of edges and the average number of biconnected components. The subjective analysis consisted in a visual inspection of the new graph and an assessment by expert users of Entity-Relationship and Data-Flow diagrams of its similarity to a "real-life" diagram. For obvious reasons, the subjective analysis has been done on a randomly selected subset of the graphs.

#### Example Figures

From ”[An Experimental Comparison of Four Graph Drawing Algorithms](https://doi.org/10.1016/s0925-7721(96)00005-3)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Rome-Lib%20c2f20984de724f4c89764b0bc494e99e/Untitled.png' width='80%'></div>

From “[Experimental Analysis of the Accessibility of Drawings with Few Segments](https://doi.org/10.1007/978-3-319-73915-1_5)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Rome-Lib%20c2f20984de724f4c89764b0bc494e99e/Untitled%201.png' width='80%'></div>

From: [Deep Neural Network for DrawiNg Networks, (DNN)2](https://link.springer.com/chapter/10.1007/978-3-030-92931-2_27):

<div style='text-align: center'><img src='data/Benchmark datasets/Rome-Lib%20c2f20984de724f4c89764b0bc494e99e/Untitled%202.png' width='80%'></div>

**Fig 5.**  Layout examples for (DNN)^2, (DNN)^2, tsNET∗ and S_GD^2.

::: 

The following collections, together with Rome-Lib, can be easily accessed from the homepage of the [Graph Drawing Conference](http://www.graphdrawing.org/data.html) website, and are therefore well known and widely used.

<a name="ATT"></a>

::: {.callout-note title="AT&T" collapse=true appearance="minimal"}

Originally collected by Stephen North at AT&amp;T Bell Labs (see the descriptions from literature section below for more information). The original link from 1995 is broken: <a href="ftp://ftp.research.att.com/dist/drawdag. ">ftp://ftp.research.att.com/dist/drawdag.</a>
Di Battista et al. modified the dataset by removing isomorphic graphs, connecting disconnected graphs, and removing cycles. Same as North DAG collection.
It contains <a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a>and <a href="#Acyclic"><span class="pill-tag pill_color_Acyclic">Acyclic<span></a> graphs.

<div><b>Originally found at: </b><a href="http://www.graphdrawing.org/data.html">http://www.graphdrawing.org/data.html</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d949574cf748107605564e" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96e3b1101aa0ea66a0c45" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970d31101aa0ea36a0cb0" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e87803e0c0b04558c1f" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>1277 graphs, 10 to 100 nodes, 9 to 241 edges</div><br>
<div><b>Origin paper: </b></div><div><a href="https://doi.org/10.1142/S0218195900000358">[@DIBATTISTA2000]</a> &nbsp; <a style="cursor: pointer; text-decoration: underline; color: rgba(var(--bs-link-color-rgb)" onclick="citation(8)"></a> &nbsp;Drawing Directed Acyclic Graphs: An Experimental Study</div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Hachul2005]</div><div class="col-4">Drawing Large Graphs with a Potential-Field-Based Multilevel Algorithm</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Hachul2006]</div><div class="col-4">An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">Large-Graph Layout with the Fast Multipole Multilevel Method</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Jabrayilov2016]</div><div class="col-4">Compact Layered Drawings of General Directed Graphs</div><div class="col-4"><a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Jnger2018]</div><div class="col-4">A Flow Formulation for Horizontal Coordinate Assignment with Prescribed Width</div><div class="col-4"><a href="#Other"><span class="pill-tag pill_color_other">DAG</span></a><a href="#Hierarchical"><span class="pill-tag pill_color_Hierarchical">Hierarchical</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Mallach2019]</div><div class="col-4">A Natural Quadratic Approach to the Generalized Graph Layering Problem</div><div class="col-4"><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Chimani2012]</div><div class="col-4">Advances in the Planarization Method: Effective Multiple Edge Insertions</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@barth2002]</div><div class="col-4">Simple and Efficient Bilayer Cross Counting</div><div class="col-4"><a href="#Bipartite"><span class="pill-tag pill_color_Bipartite">Bipartite</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a></div></div>
<div class="row"><div class="col-4">[@DIBATTISTA2000]</div><div class="col-4">Drawing Directed Acyclic Graphs: An Experimental Study</div><div class="col-4"><a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@welch2017]</div><div class="col-4">Measuring Symmetry in Drawings of Graphs</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div><br>


#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/AT&T%20e86f130c42344169a9d75a61abc7e487/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From “[Drawing Directed Acyclic Graphs: An Experimental Study](https://doi.org/10.1142/s0218195900000358)”:

> The experimental study was performed on two different sets of DAGs, both with a strong connection to "real-life" applications. We considered two typical contexts where DAGs play a fundamental role, namely software engineering and project planning.

> The first set of test DAGs are what we call the North DAGs. They are obtained from a collection of directed graphs [28], that North collected at AT\&T Bell Labs by running for two years *Draw DAG*, an e-mail graph drawing service that accepts directed graphs formatted as e-mail messages and returns messages with the corresponding drawings [27].

> Originally, the North DAGs consisted of 5114 directed graphs, whose number of vertices varied in the range *1 … 7602*. However, the density of the directed graphs with a number of vertices that did not fall in the range *10 … 100* was very low (see also the statistics in [28]); since such directed graphs represent a very sparse statistical population we decided to discard them. Then we noted that many directed graphs were isomorphic; since the vertices of the directed graphs have labels associated with them, the problem is tractable. For each isomorphism class, we kept only one representative directed graph. Also, we deleted the directed graphs where subgraphs were specified as clusters, to be drawn in their own distinct rectangular region of the layout, because constrained algorithms are beyond the scope of this study. This filtering left us with 1277 directed graphs.

> Still, 491 directed graphs were not connected and this was a problem for running algorithms implemented in *G D W* (they assume input directed graphs to be connected). Instead of discarding the directed graphs, we followed a more practical approach, by randomly adding a minimum set of directed edges that makes each directed graph connected. Finally, we made the directed graph acyclic, where necessary, by applying some heuristics for inverting the direction of a small subset of edges.

> We then ran a first set of experiments and produced the statistics by grouping the DAGs by number of vertices. Although the comparison among the algorithms looked consistent (the produced plots never oddly overlapped), each single plot was not satisfactory, because it showed peaks and valleys. We went back to study the test suite and observed that grouping them by number of vertices was not the best approach. In fact, the North DAGs come from very heterogeneous sources, mainly representing different phases of various software engineering projects; as a result, directed graphs with more or less the same number of vertices may be either very dense or very sparse.

> Since most of the analyzed quality measures strongly depend on the number of edges of the DAG (e.g. area, number of bends, and number of crossings), we decided that a better approach was to group the DAGs by number of edges. After some tests, we clustered the DAGs into nine groups, each with at least 40 DAGs, so that the number of edges in the DAGs belonging to group *i, 1 ≤ i ≤ 9*, is in the range *10 i … 10 i+9* (see Fig. 3). The resulting test suite consists of 1158 DAGs, each with edges in the range *10 … 99*.

From “[Layer-Free Upward Crossing Minimization](https://doi.org/10.1145/1671970.1671975)”:

> *North DAGs.* The North DAGs have been introduced in an experimental comparison of algorithms for drawing DAGs [Di Battista et al. 2000]. The benchmark set contains 1,158 DAGs collected by Stephen North, which were slightly modified by Di Battista et al. The graphs are grouped into nine sets, where set *i* contains graphs with *10 i* to *10 i+9* arcs for *i=1, …, 9*.

#### Example Figures

From “[Drawing Directed Acyclic Graphs: An Experimental Study](https://doi.org/10.1142/s0218195900000358)”:

<div style='text-align: center'><img src='data/Benchmark datasets/AT&T%20e86f130c42344169a9d75a61abc7e487/Untitled.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets/AT&T%20e86f130c42344169a9d75a61abc7e487/Untitled%201.png' width='80%'></div>

From “[A Natural Quadratic Approach to the Generalized Graph Layering Problem](https://doi.org/10.1007/978-3-030-35802-0_40)”:

<div style='text-align: center'><img src='data/Benchmark datasets/AT&T%20e86f130c42344169a9d75a61abc7e487/Screen_Shot_2023-08-09_at_4.26.57_PM.png' width='80%'></div>

From “[A Flow Formulation for Horizontal Coordinate Assignment with Prescribed Width](https://doi.org/10.1007/978-3-030-04414-5_13)”:

<div style='text-align: center'><img src='data/Benchmark datasets/AT&T%20e86f130c42344169a9d75a61abc7e487/Screen_Shot_2023-08-09_at_4.24.19_PM.png' width='80%'></div>

::: 

<a name="North_DAGs"></a>

::: {.callout-note title="North DAGs" collapse-id="North_DAGs" collapse=true appearance="minimal"}

This is the same collection as AT&amp;T, but referred to as North DAGs in the papers we analyzed. We kept the two collections separate, based on how they are referred to in the papers we collected.

<div><b>Originally found at: </b>See AT&amp;T</div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d949574cf748107605564e" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96e3b1101aa0ea66a0c45" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970d31101aa0ea36a0cb0" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e87803e0c0b04558c1f" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>See AT&amp;T</div><br>
<div><b>Origin paper: </b></div>

<div class="row"><div class="col-4">[@DIBATTISTA2000]</div><div class="col-8">Drawing Directed Acyclic Graphs: An Experimental Study</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@chimani2010]</div><div class="col-4">Layer-Free Upward Crossing Minimization</div><div class="col-4"><a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@chimani2016]</div><div class="col-4">A Note on the Practicality of Maximal Planar Subgraph Algorithms</div><div class="col-4"><a href="#Planar"><span class="pill-tag pill_color_Planar">Planar</span></a></div></div>
<div class="row"><div class="col-4">[@Regg2016]</div><div class="col-4">A Generalization of the Directed Graph Layering Problem</div><div class="col-4"><a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Demel2018]</div><div class="col-4">A Greedy Heuristic for Crossing-Angle Maximization</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Chimani2021]</div><div class="col-4">Star-Struck by Fixed Embeddings: Modern Crossing Number Heuristics</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@chimani2016b]</div><div class="col-4">An ILP-based Proof System for the Crossing Number Problem</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@DIBATTISTA2000]</div><div class="col-4">Drawing Directed Acyclic Graphs: An Experimental Study</div><div class="col-4"><a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Binucci2016]</div><div class="col-4">Placing Arrows in Directed Graph Drawings</div><div class="col-4"><a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a></div></div>
<div class="row"><div class="col-4">[@klammler2018]</div><div class="col-4">Aesthetic Discrimination of Graph Layouts</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@binucci2022]</div><div class="col-4">Placing Arrows in Directed Graph Layouts: Algorithms and Experiments</div><div class="col-4"><a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a></div></div><br>


#### Descriptions from Literature

From “[Layer-Free Upward Crossing Minimization](https://doi.org/10.1145/1671970.1671975)”:

**North DAGs.** The North DAGs have been introduced in an experimental comparison of algorithms for drawing DAGs [Di Battista et al. 2000]. The benchmark set contains 1,158 DAGs collected by Stephen North, which were slightly modified by Di Battista et al. The graphs are grouped into nine sets, where set $i$ contains graphs with $10 i$ to $10 i+9$ arcs for $i=1, \ldots, 9$.

::: 

::: {.callout-note title="RandDAG or DAGMar" collapse=true collapse-id="RandDAG" appearance="minimal"}

The randDAG collection concludes the collections that can be easily accessed from graphdrawing.org. http://[graphdrawing.org](http://graphdrawing.org) highlights the DAGmar graph generator, and provides a benchmark set of randomly generated directed acyclic graphs. While not explicit, it is implied this benchmark comes from the DAGmar generator. The collection is uniformly sampled from set of level graphs with certain graph parameters, such as number of nodes and number of edges. These graphs have no particular features, thus they are classified as <a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a>

<div><b>Originally found at: </b><a href="http://www.graphdrawing.org/data.html">http://www.graphdrawing.org/data.html</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948061101aa0dc66a0c55" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96dec94a6be112512e706" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d97088803e0c0cb6558d7e" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90eff803e0c0b04558ca3" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>10-100 nodes, 15-167 edges</div><br>
<div><b>Number of Graphs: </b>909</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Bachmaier_Gleißner_Hofmeier_2012]</div><div class="col-8">DAGmar: Library for DAGs</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@klammler2018]</div><div class="col-4">Aesthetic Discrimination of Graph Layouts</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/RandDAG%2054b6ed8fdecb4256b2cca6298f09965e/four_in_one.svg' width='80%'></div>

#### Descriptions from the Literature

From “[Aesthetic Discrimination of Graph Layouts](https://link.springer.com/chapter/10.1007/978-3-030-04414-5_12)”:

> We have assembled such a dataset using two types of sources. First, we used the collections of the well-known graph archives ROME, NORTH and RANDDAG which are published on [graphdrawing.org](http://www.graphdrawing.org/) as well as the NIST’s “Matrix Market” [[2](https://link.springer.com/chapter/10.1007/978-3-030-04414-5_12#ref-CR2)].

#### Example Figures

From “[Aesthetic Discrimination of Graph Layouts](https://link.springer.com/chapter/10.1007/978-3-030-04414-5_12) ([Appendix](https://arxiv.org/abs/1809.01017))”:

<div style='text-align: center'><img src='data/Benchmark datasets/RandDAG%2054b6ed8fdecb4256b2cca6298f09965e/Untitled.png' width='80%'></div>

**Fig. 5.** (cropped)… All graphs are visualized using the $FM^3$ algorithm. 

::: 

A very common problem in graph drawing is approximating or computing the exact **crossing number** of a graph. 
The datasets listed below are particularly useful for this task, as they contain graphs with <a href="#Known_crossing_number"><span class ="pill-tag pill_color_Known_crossing_number">Known crossing numbers</span></a>, so that other algorithms' results can be tested against them. 

<a name="KnownCR"></a>

::: {.callout-note title="KnownCR" collapse=true collapse-id="KnownCR" appearance="minimal"}

**KnownCR** is a collection of graphs with <a href="#Known_crossing_number"><span class ="pill-tag pill_color_Known_crossing_number">Known crossing numbers</span></a>, and it is used to test the performance of algorithms that approximate the crossing number of a graph. The dataset is used in papers that aim to approximate the crossing number of a graph, and it is used to compare the results of the approximation algorithms to the known crossing numbers of the graphs.
A good resource for this is also the survey provided by [@Clancy2019ASO].
The graphs themselves do not appear to exist online elsewhere, but the method by which they can be created is fully described in [@gutwenger_phd].

<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948121101aa0dc76a0c94" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96dce0c2b4d0f653862d7" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9715c0c2b4d0f65386577" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ef60c2b4d0d2e3862be" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>9-250 nodes, 18-750 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@gutwenger_phd]</div><div class="col-8">Application of SPQR-Trees in the Planarization Approach for Drawing Graphs</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Chimani2021]</div><div class="col-4">Star-Struck by Fixed Embeddings: Modern Crossing Number Heuristics</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Known_crossing_number"><span class="pill-tag pill_color_Known_crossing_number">Known crossing number</span></a></div></div>
<div class="row"><div class="col-4">[@Clancy2019]</div><div class="col-4">An effective crossing minimisation heuristic based on star insertion</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Known_crossing_number"><span class="pill-tag pill_color_Known_crossing_number">Known crossing number</span></a></div></div>
<div class="row"><div class="col-4">[@Chimani2012]</div><div class="col-4">Advances in the Planarization Method: Effective Multiple Edge Insertions</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Known_crossing_number"><span class="pill-tag pill_color_Known_crossing_number">Known crossing number</span></a></div></div><br>


#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/KnownCR%20ed33d600c65e4c52a1506a905b774335/four_in_one.svg' width='80%'></div>

#### Description from Literature

From “[An effective crossing minimisation heuristic based on star insertion](https://dx.doi.org/10.7155/jgaa.00487)”:

> KnownCR graphs- these are a set of instances containing between 9 and 250 vertices, first collected by Gutwenger [22], which can be further partitioned into four families of graphs as follows:
> $C_i \times C_j$: The Cartesian product of the cycle on $i$ vertices with the cycle on $j$ vertices. The instances contain graphs with $3 \leq i \leq 7$ and $j \geq i$ such that $ij \leq 250$.
> $G_i \times P_j$: The Cartesian product of the path on $j+1$ vertices with one of the 21 non-isomorphic connected graphs on 5 vertices, where $i$ denotes which of the 21. The instances contain graphs with $3 \leq j \leq 49$.
> $G_i \times C_j$: The Cartesian product of the cycle on $j$ vertices with one of the 21 non-isomorphic connected graphs on 5 vertices, where $i$ denotes which of the 21. The crossing number of these graphs is only known for some of the $G_i$ and only these cases are included. The instances contain graphs with $3 \leq j \leq 50$.
> The Generalised Petersen graphs $P(j,2)$ and $P(j,3)$, on $2j$ vertices. We shall only use those of type $P(j,3)$ as $P(j,2)$ (studied in [20]) are easy for heuristics to solve, as has already been observed in [9]. The instances contain graphs with $9 \leq j \leq 125$.

From “[Advances in the Planarization Method: Effective Multiple Edge Insertions](https://doi.org/10.1007/978-3-642-25878-7_10)”:

> Finally, the KnownCR graphs [11] are a collection of 1946 graphs with known crossing numbers (by proofs), consisting of generalized Petersen graphs (P(m, 2), P(m, 3)) and products of cycles $C_n$, paths $P_n$, and 5-vertex graphs $G_i (C_m \times C_n, G_i \times P_n, G_i \times C_n)$; these graphs have between 9 and 250 nodes.

#### Example Figures

From “[Application of SPQR-Trees in the Planarization Approach for Drawing Graphs](https://eldorado.tu-dortmund.de/handle/2003/27430)”:

<div style='text-align: center'><img src='data/Benchmark datasets/KnownCR%20ed33d600c65e4c52a1506a905b774335/Screen_Shot_2023-01-28_at_2.42.42_PM.png' width='80%'></div>

::: 

<a name="WebCompute"></a>

::: {.callout-note title="WebCompute" callout-id="WebCompute" collapse=true appearance="minimal"}

The dataset is comprised of instances of graphs uploaded to Crossing Number WebCompute, attributed to @chimani2016c.
Their website also features proofs of the crossing numbers of many of the Rome-Lib graphs. Newest version of database specifies non-planar graphs, but older versions do have some planar graphs.

<div><b>Originally found at: </b>[https://tcs.uos.de/doku.php?id=research/cr](https://tcs.uos.de/doku.php?id=research/cr)</div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94828803e0c0bf5558bab" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94d7d803e0c0c1f558c9c" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9709994a6be112912e9ec" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ea01101aa0c9e6a0c74" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>3-112 nodes, 3-366 edges</div><br>
<div><b>Number of Graphs: </b>507</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@chimani2016b]</div><div class="col-8">An ILP-based Proof System for the Crossing Number Problem</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@chimani2016b]</div><div class="col-4">An ILP-based Proof System for the Crossing Number Problem</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Known_crossing_number"><span class="pill-tag pill_color_Known_crossing_number">Known crossing number</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/WebCompute%207a10c41801914e6faa5a6cc1b1ef0b77/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From “[An ILP-based Proof System for the Crossing Number Problem](https://doi.org/10.4230/LIPIcs.ESA.2016.29)”:

> To determine the applicability of the proof system, we tested the algorithms on three
benchmark sets: the 3110 non-trivial Rome graphs [14], the 1277 North graphs [15], and the145 non-planar graphs ([http://crossings.uos.de/instances](http://crossings.uos.de/instances)) collected by our crossing
number web-service.

::: 

<a name="Complete_Graphs"></a>

::: {.callout-note title="Complete Graphs" callout-id="Complete_Graphs" collapse=true appearance="minimal"}

**Complete graphs** refers to a generic collection of graphs that are fully connected, i.e., each node is connected to every other node, up to any number of nodes that are needed for the purpose of the experiment. 
The linked dataset includes both the complete graphs $K_n$ for $5≤n≤50$ and the complete bipartite graphs $K_{n_1,n_2}$ for $5≤n1,n2≤40$. Crossing number is conjectured for most of these, and while not proven, we found these used in papers to validate minimum crossing numbers. We also note that the papers in our literature review did not provide example figures.

<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94965803e0c0c10558bc8" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94db50c2b4d0ea1386352" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d972030c2b4d0f5d3862dc" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ebb94a6be0ec012e7e6" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>5-80 nodes, 10-1600 edges</div><br>
<div><b>Number of Graphs: </b>1342</div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Clancy2019]</div><div class="col-4">An effective crossing minimisation heuristic based on star insertion</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/Complete%20Graphs%20202f26621cf34604935433a41b130f10/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From “[An effective crossing minimisation heuristic based on star insertion](https://doi.org/10.7155/jgaa.00487)”:

> **Complete graphs** - Although the crossing number of the complete graph $K_n$ is not known for for $n ≥ 13$, the value is conjectured, and typically assumed to be correct. We compare the nine combinations of schemes to see how close to the conjectured value each of them is able to get, for various sizes of complete graphs up to $n = 50$. We indicate how many crossings are obtained after the initial embedding, as well as at the conclusion of the heuristic. We also provide the runtimes, again separated into time spent producing the initial embedding, and time spent in the main loop of the heuristic.

> **Complete bipartite graphs** - Much like the complete graphs, the crossing number of the complete bipartite graph $K_{n1,n2}$ is only known in general for $n_1 ≤ 6$, but the value is conjectured and typically assumed to be correct. Again, we compare the nine combinations of schemes to see how close to the conjectured value they can get for values up to $n_1,n_2 = 40$, and report the same data as for the Complete graphs.

> The crossing number of the complete graph $K_n$ is conjectured (e.g. see Guy [25]) to be equal to
$H(n) := 1/4 \left\lfloor n/2\right\rfloor \left\lfloor (n − 1)/2\right\rfloor \left\lfloor(n − 2)/2\right\rfloor \left\lfloor (n − 3)/2\right\rfloor$.
Although this conjecture is widely believed to be correct, it has only been confirmed for $n ≤ 12$ despite considerable effort to extend the results further [30]. We ran the graphs $K_n$ for $5 ≤ n ≤ 50$. Each graph was run with 100 random permutations and the minimum found solution was compared to $H(n)$ by computing the percent relative deviation from $H(n)$…
For these graphs, we observe that when $n$ was odd, every scheme combination was able to obtain a drawing with $H(n)$ crossings. However, when $n$ was even, each scheme reached a value which was usually very close but not equal to $H(n)$.

> The crossing number of the complete bipartite graph $K_{n_1,n_2}$ is conjectured (e.g. see Zarankiewicz [35]) to be equal to $Z(n_1, n_2) := \left\lfloor n_1/2\right\rfloor \left\lfloor (n_1 − 1)/2\right\rfloor \left\lfloor n_2/2\right\rfloor \left\lfloor (n_2 − 1)/2\right\rfloor$.
We ran the graphs $K_{n_1,n_2}$ for $5 ≤ n1 ≤ n2 ≤ 40$. Each graph was run with 100 random permutations and the minimum found solution was compared to $Z(n_1,n_2)$… As can be seen in Table 6, QuickCross was successful in obtaining the conjectured optimum in all cases and for all scheme combinations, except $K_{30,30}$ and $K_{40,40}$

::: 

In some cases, authors of algorithms that deal with particular graph types might prefer to focus on collections with specific attributes, that might be attributes of the nodes, the edges or the entire graph. This is the case of <a href="#Storylines_Movie_Plots" class="dataset-link">Storylines (Movie_Plots)</a> and <a href="#Militarized_Interstate_Disputes_MID" class="dataset-link">Militarized Interstate_Disputes (MID)</a> for <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Temporal event sequences</span></a> and <a href="#World_Maps" class="dataset-link">World Maps</a> for <a href="#Spatial"><span class="pill-tag pill_color_spatial">Geographical</span></a>data:

<a name="Storylines_Movie_Plots"></a>

::: {.callout-note title="Storylines (Movie Plots)" collapse-id="Storylines_Movie_Plots" collapse=true appearance="minimal"}

The storylines dataset is particularly useful for <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Temporal event sequence</span></a>visualization because of its <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a>aspect and <a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters</span></a> (which also evolve through time). It is a collection of graphs that represent movie plots, and the nodes are the characters in the movie. The edges represent the interactions between the characters.
This dataset was initially collected by Yuzuru Tanahashi, then stored on his homepage at UC Davis, which, unfortunately, got taken down after some time from its publication. This caused the dataset to be lost for a period of time, as none of the papers that used it provided a link to the dataset or stored it as part of their supplemental material. The experiments contained in such papers were then rendered non-reproducible because of the missing dataset. 
Through the help of personal connections at UC Davis, we were luckily able to recover the dataset.

<div><b>Originally found at: </b>UC Davis’ website, personal page which is now unavailable. Currently distributed here.</div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948c6803e0c0bf6558be7" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96e0b1101aa0ea36a0bd4" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971960c2b4d0f64386417" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e9794a6be0ec012e7cb" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>698-24056 nodes, 357-23088 edges</div><br>
<div><b>Number of Graphs: </b>6</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Tanahashi2012]</div><div class="col-8">Design Considerations for Optimizing Storyline Visualizations</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Tanahashi2015]</div><div class="col-4">An Efficient Framework for Generating Storyline Visualizations from Streaming Data</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@ShixiaLiu2013]</div><div class="col-4">StoryFlow: Tracking the Evolution of Stories</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Tanahashi2012]</div><div class="col-4">Design Considerations for Optimizing Storyline Visualizations</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Gronemann2016b]</div><div class="col-4">Crossing Minimization in Storyline Visualization</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@vanDijk2018]</div><div class="col-4">Computing Storyline Visualizations with Few Block Crossings</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Bartolomeo2021]</div><div class="col-4">Sequence Braiding: Visual Overviews of Temporal Event Sequences and Attributes</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@diBartolomeo2022b]</div><div class="col-4">Stratisfimal Layout: A modular optimization model for laying out layered node-link network visualizations</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Other"><span class="pill-tag pill_color_other">Compound graphs</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/Storylines%20(Movie%20Plots)%205d9ea7cbfc2c4a6c88a7ca1bf32c67d7/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From “An efficient Framework for Generating Storyline Visualizations from Streaming Data”:

> The datasets we used for this study were the three movie datasets (Star Wars, The Matrix, and Inception) [25] which have been used in previous research as benchmark datasets for measuring layout legibilities. Star Wars consists of 14 entities and 200 time steps. The Matrix consists of 14 entities and 100 time steps. Inception consists of 8 entities and 490 time steps.

From “Design Considerations for Optimizing Storyline Visualizations” (origin paper):

> The basic form of the data applied in this visualization is simply a chronological list of interactions between various characters. These interactions between characters can be separated into a series of interaction sessions, each session representing the time span of a set of interacting characters.
More precisely, we define an interaction session as a unit which holds three attributes:
• initiation time,
• duration, and
• members.
Initiation time corresponds to the time when the interaction session begins. Duration corresponds to the duration of the interaction session. Members corresponds to the set of characters involved in the interaction session. Each interaction session represents a time slot in the data where its members are interacting. Note that any change in the formation of members (e.g., a character leaving or joining) indicates a separate interaction session.

#### Example Figures

From “[An Efficient Framework for Generating Storyline Visualizations from Streaming Data](https://doi.org/10.1109/TVCG.2015.2392771)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Storylines%20(Movie%20Plots)%205d9ea7cbfc2c4a6c88a7ca1bf32c67d7/Untitled.png' width='80%'></div>

From “[StoryFlow: Tracking the Evolution of Stories](https://doi.org/10.1109/TVCG.2013.196)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Storylines%20(Movie%20Plots)%205d9ea7cbfc2c4a6c88a7ca1bf32c67d7/Untitled%201.png' width='80%'></div>

From “[Crossing Minimization in Storyline Visualizations](https://doi.org/10.1007/978-3-319-50106-2_29)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Storylines%20(Movie%20Plots)%205d9ea7cbfc2c4a6c88a7ca1bf32c67d7/Untitled%202.png' width='80%'></div>

::: 

<a name="Militarized_Interstate_Disputes_MID"></a>

::: {.callout-note title="Militarized Interstate Disputes (MID)" callout-id="Militarized_Interstate_Disputes_MID" collapse=true appearance="minimal"}

Collected as part of the [Correlates Of War](https://correlatesofwar.org/data-sets/MIDs/) project, the dataset contains two disconnected <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Temporal event sequences</span></a>

<div><b>Originally found at: </b><a href="https://correlatesofwar.org/data-sets/MIDs/">https://correlatesofwar.org/data-sets/MIDs/</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9481e4cf7481059055704" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96e2a1101aa0e9f6a0bd5" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971de0c2b4d0f6438644d" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e8f0c2b4d0d2e38626d" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>The dataset consists of 2 disconnected temporal event sequence graphs, one with 11,766 nodes and 5,883 edges, and the other with 9,619 nodes and 8,017 edges.</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@palmer2022]</div><div class="col-8">The MID5 Dataset, 2011–2014: Procedures, coding rules, and description.</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Tanahashi2012]</div><div class="col-4">Design Considerations for Optimizing Storyline Visualizations</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@ShixiaLiu2013]</div><div class="col-4">StoryFlow: Tracking the Evolution of Stories</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div><br>

#### Description From Literature

From [Design Considerations for Optimizing Storyline Visualizations:](https://ieeexplore.ieee.org/document/6327274)

> For the time-varying network, we use the Militarized Interstate Dispute (MID) network dataset [19].

> For example, in the MID network dataset, which consists of 196 nations and 740 time steps, the genome length was reduced from 1714 to 432, allowing the algorithm to gain a considerable speedup.

From [StoryFlow: Tracking the Evolution of Stories](https://ieeexplore.ieee.org/document/6634164):

> We conducted the experiment based on three movie datasets and a network dataset: Star Wars, Inception, The Matrix, and the MID network dataset (from 1817 to 1947).

#### Example Figures

From [Design Considerations for Optimizing Storyline Visualization](https://ieeexplore.ieee.org/document/6327274):

<div style='text-align: center'><img src='data/Benchmark datasets/Militarized%20Interstate%20Disputes%20(MID)%2027d9df7d11e44a9596267bb930bc6f03/Screen_Shot_2023-01-21_at_2.41.34_PM.png' width='80%'></div>

::: 

<a name="World_Maps"></a>

::: {.callout-note title="World Maps" collapse=true collapse-id="World_Maps" appearance="minimal"}

Datasets contain various attributes for a few locations and their geographical adjacency, namely neighboring states, countries, and municipalities.
World Bank country information transformed into a weight-vectors dataset. Some of the incomplete data was filled from disparate sources mentioned in the paper’s supplemental materials: [https://doi.org/10.48550/arXiv.1908.07291](https://doi.org/10.48550/arXiv.1908.07291). The collection contains 14 graphs with <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a>and <a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a>attributes, <a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a> and <a href="#Weighted_nodes"><span class="pill-tag pill_color_Weighted_nodes">Weighted nodes</span></a>

<div><b>Originally found at: </b><a href="https://data.worldbank.org/indicator
">https://data.worldbank.org/indicator
</a><a href="https://github.com/loizuf/StableDemersLP/tree/main/code/StableDemers_TVCG/data">https://github.com/loizuf/StableDemersLP/tree/main/code/StableDemers_TVCG/data</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948f10c2b4d0e8d386217" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96dde0c2b4d0f653862e3" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971f194a6be112a12eaaa" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94aca94a6be102f12e736" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>48-514 nodes, 205-2428 edges</div><br>
<div><b>Number of Graphs: </b>14</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Nickel2019]</div><div class="col-8">Computing Stable Demers Cartograms</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Nickel2019]</div><div class="col-4">Computing Stable Demers Cartograms</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/World%20Maps%2099689f52cc854daba9c25be42de1cbe3/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From  [Computing Stable Demers Cartograms](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_4)”:

> We run experiments on real-world datasets. For time-series data, we expect a gradual change and strong correlation between the different values. For weight-vectors data, we expect more erratic changes and less correlation. We use two maps with rather different geographic structures: the first (**World**) is a map of world countries, having mixed region (country) sizes in a rather unstructured manner; the second (**US**) is a map of the 48 contiguous US states, having relatively high structure in sizes of its states, with large states in the middle and along the west coast and many smaller states along the east coast.

From Supplemental Materials, Appendix C of *[“Computing Stable Demers Cartograms*”:](https://doi.org/10.48550/arXiv.1908.07291)

<div style='text-align: center'><img src='data/Benchmark datasets/World%20Maps%2099689f52cc854daba9c25be42de1cbe3/Untitled.png' width='80%'></div>

#### Example Figures

From  [Computing Stable Demers Cartograms](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_4)”:

<div style='text-align: center'><img src='data/Benchmark datasets/World%20Maps%2099689f52cc854daba9c25be42de1cbe3/Untitled%201.png' width='80%'></div>

::: 

The collections presented here are particularly varied in features:

<a name="Graphviz_Examples"></a>

::: {.callout-note title="Graphviz Examples" collapse=true appearance="minimal"}

While graphviz is a graph visualization software, its example gallery has proven useful to many researchers as a source of benchmark datasets.
The graphs have various origins, most of which are described on the Graphviz https://www.graphviz.org/gallery/. Example graphs used to generate images with the https://www.graphviz.org for their https://www.graphviz.org/gallery/. These graphs are picked as graphviz examples because they are diverse in types of features they contain: together with generic graphs, there are also graphs with <a href="#clusters"><span class="pill-tag pill_color_clusters">clusters</span></a> <a href="#layered_graphs"><span class="pill-tag pill_color_layered_graphs">layers</span></a> <a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a>and <a href="#Labeled_nodes"><span class="pill-tag pill_color_Labeled_nodes">Labeled nodes</span></a>

<div><b>Originally found at: </b><a href="https://gitlab.com/graphviz/graphviz/-/tree/main/tests/graphs">https://gitlab.com/graphviz/graphviz/-/tree/main/tests/graphs</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948d60c2b4d0e8d38620a" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96ce394a6be111712e991" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970e60c2b4d0f65386519" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ea91101aa0c9e6a0c97" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>1-1464 nodes, 0-5806 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@gansner2000]</div><div class="col-8">An open graph visualization system and its applications to software engineering</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Gange2011]</div><div class="col-4">Optimal k-level planarization and crossing minimization</div><div class="col-4"><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Nachmanson2017]</div><div class="col-4">Node Overlap Removal by Growing a Tree</div><div class="col-4"><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@giovannangeli2023]</div><div class="col-4">FORBID: Fast Overlap Removal by&nbsp;Stochastic GradIent Descent for&nbsp;Graph Drawing</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div><br>


#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/Graphviz%20Examples%20e90aec42f02c4e8b8a6b8727fe2f86ae/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From “[Node Overlap Removal by Growing a Tree](https://doi.org/10.7155/jgaa.00442)”:

> Our data includes the same set of graphs that was used by the authors of PRISM to compare it with other algorithms [6]. The dataset is available in the Graphviz open source package.

From “[Optimal k-level planarization and crossing minimization](https://doi.org/10.1007/978-3-642-18469-7_22)”:

> The first set of graphs are all the hierarchical network diagrams appearing in the GraphViz gallery [3]… Table 1 shows the results of minimizing edge crossings and maximizing planar subgraphs with MIP and SAT solvers, as well as the crossings resulting in the Graphviz heuristic layout for graphs from the GraphViz gallery.

#### Example Figures

From “[Node Overlap Removal by Growing a Tree](https://doi.org/10.7155/jgaa.00442)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Graphviz%20Examples%20e90aec42f02c4e8b8a6b8727fe2f86ae/Screen_Shot_2023-08-16_at_3.44.08_PM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets/Graphviz%20Examples%20e90aec42f02c4e8b8a6b8727fe2f86ae/Screen_Shot_2023-08-16_at_3.44.43_PM.png' width='80%'></div>

From “[FORBID: Fast Overlap Removal by Stochastic GradIent Descent for Graph Drawing](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_6)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Graphviz%20Examples%20e90aec42f02c4e8b8a6b8727fe2f86ae/Screen_Shot_2023-08-16_at_3.50.39_PM.png' width='80%'></div>

From “[Optimal k-level planarization and crossing minimization](https://doi.org/10.1007/978-3-642-18469-7_22)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Graphviz%20Examples%20e90aec42f02c4e8b8a6b8727fe2f86ae/Screen_Shot_2023-08-16_at_3.35.58_PM.png' width='80%'></div>

::: 

<a name="Scotch_Graph_Collection"></a>

::: {.callout-note title="Scotch Graph Collection" callout-id="Scotch_GraphCollection" collapse=true appearance="minimal"}

Collection consisting of graphs from various sources including topological meshes, meshes related to physical problems (fluid dynamics, structural mechanics, combinatorial optimization), and interprocess communication graphs for a parallel computing implementation of a factorization solver.
The [SCOTCH software package](https://gitlab.inria.fr/scotch/scotch) is produced by the [SCOTCH project](https://www.labri.fr/perso/pelegrin/scotch/) whose goal is to study static mapping by the means of graph theory, using “divide and conquer'' graph bipartitioning heuristics. The original link to the data (http://www.labri.u-bordeaux.fr/Equipe/PARADIS/Member/pelegrin/graph) is broken.

 <div><b>Originally found at: </b><a href="https://wotug.org/parallel/libraries/communication/scotch/Graphs/">https://wotug.org/parallel/libraries/communication/scotch/Graphs/</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94897803e0c0bfb558d06" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://osf.io/download/w37bv/" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971ca94a6be112a12ea97" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90eda803e0c0b00558bc8" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>The graphs range from 7 to 144649 nodes, and 10 to 1074393 edges.</div><br>
<div><b>Origin Notes: </b>The <a href="https://gitlab.inria.fr/scotch/scotch ">https://gitlab.inria.fr/scotch/scotch </a>is produced by the <a href="https://www.labri.fr/perso/pelegrin/scotch/ ">https://www.labri.fr/perso/pelegrin/scotch/ </a>whose goal is to study static mapping by the means of graph theory, using “divide and conquer'' graph bipartitioning heuristics. The original link to the data <a href="http://www.labri.u-bordeaux.fr/Equipe/PARADIS/Member/pelegrin/graph ">http://www.labri.u-bordeaux.fr/Equipe/PARADIS/Member/pelegrin/graph </a>is broken.</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@pellegrini:hal-00770422]</div><div class="col-8">Scotch and PT-Scotch Graph Partitioning Software: An Overview</div></div>
<div class="row"><div class="col-4">[@chevalier:hal-00402893]</div><div class="col-8">PT-Scotch: A tool for efficient parallel graph ordering</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@harel2001]</div><div class="col-4">A Fast Multi-Scale Method for Drawing Large Graphs</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@koren2002]</div><div class="col-4">ACE: A Fast Multiscale Eigenvectors Computation for Drawing Huge Graphs</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='./data/Benchmark datasets/Scotch%20Graph%20Collection%20cfe6f105da3a4c699fa3e02ca1f6e88a/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From “[ACE: A Fast Multiscale Eigenvectors Computation for Drawing Huge Graphs](https://doi.org/10.1109/INFVIS.2002.1173159)”:

> Figure 10c, the 4elt graph, is yet another example of a graph with inherent diversity of distance scales.

#### Example Figures

From “[A Fast Multi-Scale Method for Drawing Large Graphs](https://doi.org/10.1007/3-540-44541-2_18)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Scotch%20Graph%20Collection%20cfe6f105da3a4c699fa3e02ca1f6e88a/Screen_Shot_2023-08-04_at_8.14.10_AM.png' width='80%'></div>

<div style='text-align: center'><img src='./data/Benchmark datasets/Scotch%20Graph%20Collection%20cfe6f105da3a4c699fa3e02ca1f6e88a/Screen_Shot_2023-08-04_at_8.14.29_AM.png' width='80%'></div>

From “[ACE: A Fast Multiscale Eigenvectors Computation for Drawing Huge Graphs](https://doi.org/10.1109/INFVIS.2002.1173159)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Scotch%20Graph%20Collection%20cfe6f105da3a4c699fa3e02ca1f6e88a/Screen_Shot_2023-08-04_at_8.30.54_AM.png' width='80%'></div>

::: 

Otherwise, one might decide to focus on a particular domain:

<a name="Biological_Pathways_KEGG"></a>

::: {.callout-note title="Biological Pathways (KEGG)" collapse=true appearance="minimal"}

According to [kegg.jp](https://www.kegg.jp/kegg-bin/show_pathway?map01100), “the KEGG PATHWAY database is a collection of manually drawn graphical diagrams, called KEGG pathway maps, for metabolic pathways, signaling pathways, pathways involved in various cellular processes and organismal systems, and perturbed pathways associated with human diseases”. The pathway data is separated by module, but the individual modules can be combined into a large graph as visualized at <a href="https://www.kegg.jp/kegg-bin/show_pathway?map01100">https://www.kegg.jp/kegg-bin/show_pathway?map01100</a>

 <div><b>Originally found at: </b><a href="https://www.kegg.jp/kegg/pathway.html#global">https://www.kegg.jp/kegg/pathway.html#global</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948fe803e0c0c0c558b95" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96d6e1101aa0ea76a0be4" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970ab4cf748115a055802" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e80803e0c0b04558c14" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>47-292 nodes, 41-327 edges</div><br>
<div><b>Number of Graphs: </b>13</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@kegg]</div><div class="col-8">KEGG: Kyoto Encyclopedia of Genes and Genomes</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Wu2020]</div><div class="col-4">Multi-Level Area Balancing of Clustered Graphs</div><div class="col-4"><a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Labeled_nodes"><span class="pill-tag pill_color_Labeled_nodes">Labeled nodes</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='./data/Benchmark datasets/Biological%20Pathways%20(KEGG)%206d302b16e7af4982a57c5b9aeecfe3b8/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From “[Multi-Level Area Balancing of Clustered Graphs](https://doi.org/10.1109/TVCG.2020.3038154)”:

> KEGG Overview Pathway. Fig. 6 is the result of reproducing the KEGG overview pathway map using our approach. The color coding of the category here is directly retrieved from the original KEGG database [43], as similarly incorporated in Metabopolis [64] (see figures in supplementary materials, available online). We also set the same threshold for specifying unimportant vertices as in Metabopolis, so that readers can refer to the paper for comparison (Fig. 6). The advantage of this technique allows us to arrange the vertexts in a balanced fashion by pushing vertexts away from each other. This initially gives users an idea of how big each category is, and explicitly shows which reaction is classified under which category. Users can also identify sub-components effectively since those components with identical topological structures are aligned as neighbors. This also helps users to comprehend which structures are associated with certain types of pathways, such as small chains, stars, etc.

#### Example Figures

From “[Multi-Level Area Balancing of Clustered Graphs](https://doi.org/10.1109/TVCG.2020.3038154)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Biological%20Pathways%20(KEGG)%206d302b16e7af4982a57c5b9aeecfe3b8/Screen_Shot_2023-01-25_at_10.50.53_AM.png' width='80%'></div>

::: 

<a name="Co-Phylogenetic_Trees"></a>

::: {.callout-note title="Co-Phylogenetic Trees" collapse-id="Co-Phylogenetic_Trees" collapse=true appearance="minimal"}

Collected by the authors of “https://almob.biomedcentral.com/articles/10.1186/s13015-014-0031-3. Each element of the data set is two binary co-phylogentic trees. “Caryophyllaceae & Microbotryum” and “Stinkbugs & Bacteria” are missing but our dataset includes all other files from “https://doi.org/10.1007/978-3-319-73915-1_27”. An additional dataset from “https://almob.biomedcentral.com/articles/10.1186/s13015-014-0031-3”, called “Wolbachia”, is included. Naturally, the data contains <a href="#Trees"><span class="pill-tag pill_color_Trees">Trees</span></a> 

<div><b>Originally found at: </b><a href="https://gitlab.inria.fr/erable/eucalypt/-/blob/master/html/PaperDatasets.zip">https://gitlab.inria.fr/erable/eucalypt/-/blob/master/html/PaperDatasets.zip</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948a24cf748105905574b" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://osf.io/download/m9wf2/" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970c00c2b4d0f5d3862a4" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ee40c2b4d0d2e3862b7" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>13-773 nodes, 12-772 edges</div><br>
<div><b>Number of Graphs: </b>30</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Donati2015]</div><div class="col-8">EUCALYPT: efficient tree reconciliation enumerator</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Calamoneri2018]</div><div class="col-4">Visualizing Co-phylogenetic Reconciliations</div><div class="col-4"><a href="#Trees"><span class="pill-tag pill_color_Trees">Binary trees</span></a><a href="#Trees"><span class="pill-tag pill_color_Trees">Trees</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/Co-Phylogenetic%20Trees%202440f3927d254148abd93168c1399b43/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From “[EUCALYPT: efficient tree reconciliation enumerator](https://almob.biomedcentral.com/articles/10.1186/s13015-014-0031-3)”:

> To test EUCALYPT, we selected 12 datasets from the literature. As we are mostly interested in host-parasite systems, the first 10 datasets concern such relations: EC Encyrtidae & Coccidae [23], GL Gopher & Lice [24], SC Seabirds & Chewing Lice [25], RP Rodents & Pinworms [26], SCF Smut Fungi & Caryophillaceus plants [27], PLML Pelican Lice ML [28] (the trees are generated through a maximum likelihood approach), PLMP Pelican Lice MP [28] (the trees are generated through a maximum parsimony approach), RH Rodents & Hantaviruses [29], PP Primates & Pinworm [30], and FD Fishs and Dactylogyrus [31].

> In addition, we used a dataset of our own which corresponds to arthropod hosts and a bacterium genus, Wolbachia, living inside the cells of their hosts [32,33]. The datasets were chosen to provide a variety in terms of size of the host and parasite trees: those from the literature are relatively small (from 7 to 100 leaves), while our own data provide an example of much bigger host and parasite trees, each having 387 leaves. Moreover, we were careful that the selected datasets cover, as much as possible, a range of situations in terms of coevolution and of the expected frequencies of each event

#### Example Figures

From “[Visualizing Co-phylogenetic Reconciliations](https://doi.org/10.1007/978-3-319-73915-1_27)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Co-Phylogenetic%20Trees%202440f3927d254148abd93168c1399b43/Screen_Shot_2023-08-15_at_10.50.19_AM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets/Co-Phylogenetic%20Trees%202440f3927d254148abd93168c1399b43/Screen_Shot_2023-08-15_at_10.50.09_AM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets/Co-Phylogenetic%20Trees%202440f3927d254148abd93168c1399b43/Screen_Shot_2023-08-15_at_10.49.57_AM.png' width='80%'></div>

::: 

And finally, a collection of graph problems:

<a name="SteinLib"></a> 

::: {.callout-note title="SteinLib" collapse-id="SteinLib" collapse=true appearance="minimal"}

**SteinLib** is a collection of Steiner tree problems in graphs and variants. Their [website](https://steinlib.zib.de/steinlib.php) has additional information about each problem in the dataset, including whether or not it has been solved. We omit two sets, [Relay](https://steinlib.zib.de/showset.php?Relay) and [EFST](https://steinlib.zib.de/showset.php?EFST), from our provided data due to size constraints.

<div><b>Originally found at: </b><a href="https://steinlib.zib.de/steinlib.php">https://steinlib.zib.de/steinlib.php</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948684cf74810580556ac" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://osf.io/download/zbrf5/" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href=" https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970300c2b4d0f61386324" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e5e1101aa0c9f6a0c0f" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>6-38,418 nodes, 9-221,445 edges</div><br>
<div><b>Number of Graphs: </b>1207</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Koch2001]</div><div class="col-8">SteinLib: An Updated Library on Steiner Tree Problems in Graphs</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@chimani2016]</div><div class="col-4">A Note on the Practicality of Maximal Planar Subgraph Algorithms</div><div class="col-4"><a href="#Planar"><span class="pill-tag pill_color_Planar">Planar</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/SteinLib%204b766ffe22de40ecaa9307671862ea96/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From [A Note on the Practicality of Maximal Planar Subgraph Algorithms](https://doi.org/10.1007/978-3-319-50106-2_28):

> We use the non-planar graphs of the established benchmark sets North [12] (423 instances), Rome [11] (8249), and **SteinLib** [16] (586), all of which include real-world instances. In our plots, we group instances according to |V| rounded to the nearest multiple of 10; for Rome we only consider graph with ≥ 25 vertices.

#### Example Figures

From [SteinLib: An Updated Library on Steiner Tree Problems in Graphs](https://doi.org/10.1007/978-1-4613-0255-1_9):

<div style='text-align: center'><img src='data/Benchmark datasets/SteinLib%204b766ffe22de40ecaa9307671862ea96/Screen_Shot_2023-08-09_at_4.09.50_PM.png' width='80%'></div>

::: 

Additional interesting graphs can be found in the [Graph Drawing Contest website](https://mozart.diei.unipg.it/gdcontest/history/).

### Established Network Repositories {#sec-established-network-repositories}

A popular choice is to use datasets from **Established Network Repositories**. These are ample collections, often organized in dedicated websites which also offer a few stats about the contained graphs. These collections are particularly useful when trying to locate a graph with a specific structure or property. 

Because their hosts are already dedicated to the maintaining and reporting of information on these collections, we do not include here any storage of the data (which would be redundant) or report statistics on them. Rather, our analysis here is focused on highlighting their properties, origins, and ways in which they have been used. 

::: {.callout-note title="Matrix Market" collapse=true appearance="minimal"}

Compiled by the [Mathematical and Computational Sciences Division](https://math.nist.gov/mcsd/) of the [Information Technology Laboratory](http://www.itl.nist.gov/) of the [National Institute of Standards and Technology](http://www.nist.gov/), the **Matrix Market** is a repository of test data for use in comparative studies of algorithms for numerical linear algebra, featuring nearly 500 sparse matrices from a variety of applications, as well as matrix generation tools and services. It has been used for experiments with <a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a>graphs, <a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a>graphs, and graphs with <a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a> Each matrix entry is accompanied by metadata that includes the matrix name and identifier, dimensions (number of rows and columns), number of non-zero elements, symmetry type (symmetric, skew-symmetric, or general) and data type (real, complex, integer, or pattern). The website also provides visualizations of the matrices, helping users understand their structure and distribution of non-zero elements. Downloads are also provided in a variety of formats, including their own Matrix Market Exchange (MME) format, Harwell-Boeing, and MATLAB.

<div class="col"><div><b>Originally found at: </b><a href="https://math.nist.gov/MatrixMarket/index.html">https://math.nist.gov/MatrixMarket/index.html</a></div><br><div><b>Download formatted data: </b></div><br>
<div><b>Note: </b>A repository of test data for use in comparative studies of algorithms for numerical linear algebra, featuring nearly 500 sparse matrices from a variety of applications, as well as matrix generation tools and services.</div><br><br><div><b>Origin Notes: </b>Compiled by the <a href="https://math.nist.gov/mcsd/&nbsp;">https://math.nist.gov/mcsd/&nbsp;</a>of the&nbsp;<a href="http://www.itl.nist.gov/&nbsp;">http://www.itl.nist.gov/&nbsp;</a>of the&nbsp;<a href="http://www.nist.gov/">http://www.nist.gov/</a></div><br><div><b>Origin paper: </b></div><div>Matrix Market: a web resource for test matrix collections</div><br><div><b>Usage examples: </b></div>
<div class="row"><div class="col-8"><span class="citation" data-cites="klammler2018"><a href="#ref-klammler2018" role="doc-biblioref" aria-expanded="false">[link]</a></span> &nbsp; Aesthetic Discrimination of Graph Layouts</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-8"><span class="citation" data-cites="KOREN20051867"><a href="#ref-KOREN20051867" role="doc-biblioref" aria-expanded="false">[link]</a></span> &nbsp; Drawing graphs by eigenvectors: theory and practice</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-8"><span class="citation" data-cites="brandes2006"><a href="#ref-brandes2006" role="doc-biblioref" aria-expanded="false">[link]</a></span> &nbsp; Eigensolver methods for progressive multidimensional scaling of large data</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-8"><span class="citation" data-cites="Gansner2005"><a href="#ref-Gansner2005" role="doc-biblioref" aria-expanded="false">[link]</a></span> &nbsp; Graph Drawing by Stress Majorization</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a></div></div>
<div class="row"><div class="col-8"><span class="citation" data-cites="meidiana2020"><a href="#ref-meidiana2020" role="doc-biblioref" aria-expanded="false">[link]</a></span> &nbsp; Sublinear Time Force Computation for Big Complex Network Visualization</div><div class="col-4"><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div><br><div></div><div><h3 id="descriptionsfromliterature">Descriptions from Literature</h3></div><div></div><div><p>From “<a href="https://doi.org/10.1007/978-3-540-31843-9_25">Graph Drawing by Stress Majorization</a>”:</p></div><div></div><div><blockquote>
  <p>The first example is the 1138Bus graph (|V|=1138, |E|=1458) from the Matrix Market repository [1]. This graph models a network of high-voltage power distribution lines. Figure 4 shows two layouts of this graph.</p>
</blockquote></div><div></div><div><h3 id="examplefigures">Example Figures</h3></div><div></div><div><p>From “<a href="https://doi.org/10.1016/j.camwa.2004.08.015">Drawing graphs by eigenvectors: theory and practice</a>” (top two layouts are a Matrix Market graph):</p></div><div></div><div style="text-align: center;"><img src="data/Benchmark datasets/Matrix%20Market%2080bd4320417342458aefa031cf65db1f/Screen_Shot_2023-08-17_at_9.59.19_AM.png" width="80%"></div><div></div><div><p>From “<a href="https://doi.org/10.1007/978-3-540-31843-9_25">Graph Drawing by Stress Majorization</a>”:</p></div><div></div><div style="text-align: center;"><img src="data/Benchmark datasets/Matrix%20Market%2080bd4320417342458aefa031cf65db1f/Screen_Shot_2023-08-17_at_11.13.32_AM.png" width="80%"></div></div>

::: 

<a name="Network_Repository"></a>

::: {.callout-note title="Network Repository" collapse=true appearance="minimal"}

The **Network Repository** was proposed in 2015 by Rossi and Ahmed of Purdue University as a visually interactive real world graph tool and database. Graphs in this repository are tagged with their real-world source, have in-depth analysis, and even a preview visualization of each individual graph. Types of graphs include social networks, infrastructure networks, biological networks, and many others. The repository also offers sources for individual graphs. It contains many graphs from other benchmark sets described here.

<div><b>Originally found at: </b><a href="https://networkrepository.com/">https://networkrepository.com/</a></div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@nr]</div><div class="col-8">The Network Data Repository with Interactive Graph Analytics and Visualization</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Eades2018]</div><div class="col-4">Drawing Big Graphs Using Spectral
Sparsification</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Arleo2019]</div><div class="col-4">A Distributed Multilevel Force-Directed Algorithm</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div><br>

#### Descriptions from Literature

From “[A Distributed Multilevel Force-Directed Algorithm](https://doi.org/10.1109/TPDS.2018.2869805)”:

> To evaluate the running time of MULTI-GILA, we used the REALGRAPHS and BIGGRAPHS benchmarks, which contain larger graphs extracted from both real-world applications and synthetic generators; see Table 4. The REALGRAPHS set includes the 5 largest real-world graphs (mainly scale-free graphs) used in the experimental study of GILA [5]. These graphs are taken from the Stanford Large Networks Dataset Collection [3] and from the **Network Data Repository** [46], and their number of edges is between 121523 and 1541514.

From “[Drawing Big Graphs Using Spectral Sparsification](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_22)”:

> We used three data sets. The first set of graphs is taken from “defacto-benchmark” graphs, including the Hachul library, Walshaw’s Graph Partitioning Archive, the sparse matrices collection [[6](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_22#ref-CR6)] and the network repository [[24](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_22#ref-CR24)]. These include two types of graphs that have been extensively studied in graph drawing research: grid-like graphs and scale-free graphs.

::: 

<a name="Pajek"></a>

::: {.callout-note title="Pajek" collapse=true appearance="minimal"}

The **Pajek** Program for Large Network Analysis is a tool developed and hosted by Andrej Vlado and some of their colleagues. As part of this program, they later compiled relevant graphs and links to other datasets, which we call today the Pajek collection. As a curiosity, pajek means spider in Slovenian. Many of Pajek graphs have been included as part of the [SuiteSparse Matrix Collection](#SuiteSparse_Matrix_Collection).

<div><b>Originally found at: </b><a href="http://vlado.fmf.uni-lj.si/pub/networks/data/">http://vlado.fmf.uni-lj.si/pub/networks/data/</a></div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@pajek]</div><div class="col-8">Pajek datasets</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@noack2004]</div><div class="col-4">Energy Models for Graph Clustering</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Meidiana2019]</div><div class="col-4">A Quality Metric for Visualization of Clusters in Graphs</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a></div></div><br>

#### Descriptions from Literature

From “[Energy Models for Graph Clustering](https://doi.org/10.1007/978-3-540-24595-7_40)”:

> **Airline Routing (Figure 5):** The nodes of this graph represent US airports, and the (unweighted) edges represent direct flights. The probability that two airports are connected by a direct flight is strongly related to their geographical distance: Most direct flights are relatively short, and only few large hub airports are connected by direct long-range flights.
The distances in the edge-repulsion LinLog layout resemble the relative geographical distances of the airports remarkably closely, given that the graph does not contain any explicit information about geographical distances.

> **Dictionary (Figure 7):** The nodes represent terms in the Online Dictionary of Library and Information Science (ODLIS), and the edges represent hyperlinks. A hyperlink between two terms exists if one term is used to describe the meaning of the other term, and thus connects semantically related terms.
The edge-repulsion LinLog layout indeed groups semantically related terms, which is better reflected in the VRML file on the supplementary web page than in Figure 7(c). Such a grouping is useful, for example, for discovering the global topic areas (like publishing, printing, information technology, etc.), for identifying entry points for the exploration of topics, or for finding semantically
related terms even if they are not explicitly linked.

From “[A Quality Metric for Visualization of Clusters in Graphs](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10)”:

> We re-used some datasets from the validation experiments and created some new ones, listed in Table [2](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10#Tab2). We also selected real world graph datasets with existing vertex categorization, which are listed under the double line in Table [2](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10#Tab2). The datasets were taken from Pajek [[2](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10#ref-CR2)] and Stanford Network Analysis Project’s (SNAP) repository [[23](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10#ref-CR23), [40](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10#ref-CR40)].

#### Example Figures

From “[Energy Models for Graph Clustering](https://doi.org/10.1007/978-3-540-24595-7_40)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Pajek%20e323e05a735d4151a0bccfec08aa3bd6/Screen_Shot_2023-08-17_at_4.05.25_PM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets/Pajek%20e323e05a735d4151a0bccfec08aa3bd6/Screen_Shot_2023-08-17_at_4.06.19_PM.png' width='80%'></div>

::: 

<a name="SNAP"></a>

::: {.callout-note title="SNAP (Stanford Network Analysis Platform)" collapse-id="SNAP" collapse=true appearance="minimal"}

The **SNAP** repository is a collection of datasets assembled as part of the Stanford Network Analysis Platform, which started in 2004 and launched their website in 2009.
Well-known, widely used graph repository.
A number of graphs that became relevant individually are included in SNAP, such as <a href="#Enron" class="dataset-link">Enron</a>, [Amazon](#amazon), [Protein Interactions](#protein-interaction) datasets and various [Social Network](#social-network) graphs. SNAP contains <a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a>graphs, <a href="#directed_edges"><span class="pill-tag pill_color_directed_edges">directed</span></a>and <a href="#Other"><span class="pill-tag pill_color_other">Undirected</span></a>graphs, <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a>graphs and more. Graphs are presented with name and descriptions and a few statistics such as a general description, numbers of nodes and edges, source and reference information.

<div><b>Originally found at: </b><a href="http://snap.stanford.edu/data/index.html">http://snap.stanford.edu/data/index.html</a></div><br>
<div><b>Size: </b>1008 unique graphs (excluding graph classification tasks consisting of 352,536 graphs)</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@snapnets]</div><div class="col-8">SNAP Datasets: Stanford Large Network Dataset Collection</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Arleo2019]</div><div class="col-4">A Distributed Multilevel Force-Directed Algorithm</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Meidiana2019]</div><div class="col-4">A Quality Metric for Visualization of Clusters in Graphs</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">ForceAtlas2</div><div class="col-4"></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">a Continuous Graph Layout Algorithm for Handy Network Visualization Designed for the Gephi Software</div><div class="col-4"></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">A Random Sampling O</div><div class="col-4"></div></div>
<div class="row"><div class="col-4">[@zhong2023]</div><div class="col-4">Force-Directed Graph Layouts Revisited: A New Force Based on the T-Distribution</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@meidiana2023]</div><div class="col-4">Shape-Faithful Graph Drawings</div><div class="col-4"><a href="#Mesh"><span class="pill-tag pill_color_Mesh">Mesh</span></a></div></div><br>

#### Descriptions from Literature

From “[ForceAtlas2, a Continuous Graph Layout Algorithm for Handy Network Visualization Designed for the Gephi Software](https://doi.org/10.1371/journal.pone.0098679)”:

> We benchmarked our algorithm with a dataset of 68 networks from 5 to 23,133 nodes. We tried to gather varied networks corresponding to the actual use of Gephi (a lot of social networks, and scale-free networks in general). Most of these networks are from the Stanford Large Network Dataset Collection ([http://snap](http://snap/). [stanford.edu/data/](http://stanford.edu/data/)) and include social networks (Facebook and Twitter ego-networks), collaboration networks (from Arxiv) and autonomous systems (peering information inferred from Oregon route-views).

#### Example Figures

From “[ForceAtlas2, a Continuous Graph Layout Algorithm for Handy Network Visualization Designed for the Gephi Software](https://doi.org/10.1371/journal.pone.0098679)”:

<div style='text-align: center'><img src='data/Benchmark datasets/SNAP%20(Stanford%20Network%20Analysis%20Platform)%201cd77eaee57147ce8263b2f9eaa2589c/Screen_Shot_2023-08-02_at_11.20.12_AM.png' width='80%'></div>

::: 

<a name="Stanford_GraphBase"></a>

::: {.callout-note title="Stanford GraphBase" collapse=true appearance="minimal"}

Compiled by Donald Knuth, the **Stanford Graphbase** consists of programs and datasets for network analysis. The datasets accompany a textbook, “The Stanford GraphBase: A Platform for Combinatorial Computing”.

<div><b>Originally found at: </b><a href="https://www-cs-faculty.stanford.edu/~knuth/sgb.html">https://www-cs-faculty.stanford.edu/~knuth/sgb.html</a></div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Knuth_2009]</div><div class="col-8">The Stanford GraphBase: A Platform for Combinatorial Computing</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@kruiger2017]</div><div class="col-4">Graph Layouts by t-SNE</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Planar"><span class="pill-tag pill_color_Planar">Planar</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@Raj2018]</div><div class="col-4">Anisotropic Radial Layout for Visualizing Centrality and Structure in Graphs</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a></div></div>
<div class="row"><div class="col-4">[@Gronemann2016b]</div><div class="col-4">Crossing Minimization in Storyline Visualization</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@junger1997]</div><div class="col-4">2-Layer Straightline Crossing Minimization</div><div class="col-4"><a href="#Bipartite"><span class="pill-tag pill_color_Bipartite">Bipartite</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a></div></div>
<div class="row"><div class="col-4">[@barth2002]</div><div class="col-4">Simple and Efficient Bilayer Cross Counting</div><div class="col-4"><a href="#Bipartite"><span class="pill-tag pill_color_Bipartite">Bipartite</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">A Random Sampling O</div><div class="col-4"></div></div><br>


#### Descriptions from Literature

From “[Crossing Minimization in Storyline Visualizations](https://doi.org/10.1007/978-3-319-50106-2_29)”:

> Since the instances “Anna Karenina” and “Les Miserables” are very big, we have split them into chapters and sequences of chapters. The resulting test-bed is made of eight chapters, seven pairs of chapters, six triples of chapters and five quadruples of chapters from “Anna Karenina”, and five chapters, four pairs of chapters and three triples of chapters from “Les Mis ́erables”, plus the entire “Adventures of Huckleberry Finn”, “Inception-sf”, “Inception”, “Star Wars”, “The Matrix-sf”, and “The Matrix”.

From “[Anisotropic Radial Layout for Visualizing Centrality and Structure in Graphs](https://doi.org/10.1007/978-3-319-73915-1_28)”:

> The third dataset is a graph of character associations in the famous French novel Les Miserables (Fig. 5) [18]. This graph consists of 77 nodes, each representing a character in the novel, and 254 weighted edges where the weights represent the number of chapters that feature both characters associated with an edge.
We see the that the main protagonist Valjean (marked in red) is placed prominently in all three visualizations (Fig. 5). However, other key characters in the plot such as Inspector Javert (blue) and Cosett (orange), who do not appear often with characters other than the protagonist (and thus have low betweenness centrality) are treated differently. While the radial layout relegates them to the periphery (far from Valjean) (Fig. 5b), MDS (Fig. 5a) paints a conflicting picture with regard to their centrality, e.g., Cosett’s node almost overlaps with Valjean despite its low centrality. In contrast, the proposed ARL (Fig.5c) is able to coherently convey the low centrality of the Inspector Javert and Cosett, as well as, their closeness to Valjean. The above issue of distance distortion appears to be a frequent occurrence in the radial layout due to many characters who have a low centrality value causing them to end up being packed in the outer periphery. A case of contrast is that of the character Bishop Myriel (green) who despite being associated with several characters, is only seen with Valjean once.

#### Example Figures

From “[Crossing Minimization in Storyline Visualizations](https://doi.org/10.1007/978-3-319-50106-2_29)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Stanford%20GraphBase%20effff4b40e9d4a79b6f33825ccca7401/Screen_Shot_2023-08-17_at_4.29.43_PM.png' width='80%'></div>

From “[Graph Layouts by t-SNE](https://doi.org/10.1111/cgf.13187)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Stanford%20GraphBase%20effff4b40e9d4a79b6f33825ccca7401/Screen_Shot_2023-08-17_at_4.21.24_PM.png' width='80%'></div>

lesmis is the GraphBase Les Miserables graph

From “[Anisotropic Radial Layout for Visualizing Centrality and Structure in Graphs](https://doi.org/10.1007/978-3-319-73915-1_28)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Stanford%20GraphBase%20effff4b40e9d4a79b6f33825ccca7401/Screen_Shot_2023-08-17_at_4.23.56_PM.png' width='80%'></div>

::: 

<a name="SuiteSparse_Matrix_Collection"></a>

::: {.callout-note title="SuiteSparse Matrix Collection" collapse=true appearance="minimal"}

The **SuiteSparse Matrix Collection**, formerly known as the **University of Florida Sparse Matrix Collection**, is a comprehensive repository of 2893 sparse matrices. All graphs in SuiteSparse belong to groups which will have more information about the graphs and the sub-collections they belong to. In our Descriptions from the Literature section we also highlight a few tables with the specific graphs used in a couple of papers. From “The university of Florida Sparse Matrix Collection”, Davis and Hu describe the origin of this network repository. Namely they cite the Harwell-Boeing collection as the starting point for SuiteSparse, then called the University of Florida (UF) Sparse matrix collection, back in 1991. Other groups, or collections, have then been added to SuitseSparse through the years, mainly focusing on real-world matrices and other relevant problems related to them.

<div><b>Originally found at: </b><a href="https://sparse.tamu.edu/">https://sparse.tamu.edu/</a></div><br>
<div><b>Size: </b>2893</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@davis2011]</div><div class="col-8">The University of Florida Sparse Matrix Collection</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Gansner2013]</div><div class="col-4">A Maxent-Stress Model for Graph Layout</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Ortmann2017]</div><div class="col-4">A Sparse Stress Model</div><div class="col-4"><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a><a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a></div></div>
<div class="row"><div class="col-4">[@Eades2018]</div><div class="col-4">Drawing Big Graphs Using Spectral
Sparsification</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Hong2019]</div><div class="col-4">Multi-level Graph Drawing Using Infomap Clustering</div><div class="col-4"><a href="#Other"><span class="pill-tag pill_color_Other">Multilevel</span></a></div></div>
<div class="row"><div class="col-4">[@Brsig2020]</div><div class="col-4">Stochastic Gradient Descent Works Really Well for Stress Minimization</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@kruiger2017]</div><div class="col-4">Graph Layouts by t-SNE</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Planar"><span class="pill-tag pill_color_Planar">Planar</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@zheng2019]</div><div class="col-4">Graph Drawing by Stochastic Gradient Descent</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@DRGraph21]</div><div class="col-4">DRGraph: An Efficient Graph Layout Algorithm for Large-scale Graphs by Dimensionality Reduction</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@zhong2023]</div><div class="col-4">Force-Directed Graph Layouts Revisited: A New Force Based on the T-Distribution</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@miller2023]</div><div class="col-4">Spherical Graph Drawing by&nbsp;Multi-dimensional Scaling</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@meidiana2023]</div><div class="col-4">Shape-Faithful Graph Drawings</div><div class="col-4"><a href="#Mesh"><span class="pill-tag pill_color_Mesh">Mesh</span></a></div></div><br>


#### Descriptions From Literature

From “[A Sparse Stress Model](https://dx.doi.org/10.7155/jgaa.00440)”:

> We conducted our experiments on a series of different graphs, see Tab. 1, most of them taken from the sparse matrix collection [9]. We selected these graphs as they differ in their structure and size, and are large enough to compare the results of different techniques. Two of the graphs, LeHavre and commanche, have predefined edge lengths that were derived from the node coordinates. We did not modify the graphs in any way, except for those that were disconnected, in which case we only kept the largest component.

<div style='text-align: center'><img src='data/Benchmark datasets/SuiteSparse%20Matrix%20Collection%20b8772d6a2cbb456894b4673e32c6f956/Untitled.png' width='80%'></div>

From “[A Maxent-Stress Model for Graph Layout](https://doi.org/10.1109/TVCG.2012.299)”:

> With the exception of graph gd, which is an author collaboration graph of the International Symposium on Graph Drawing between 1994 and 2007, the graphs used are from the University of Florida Sparse Matrix Collection [9]. Our selection covers a range of graph sizes, and includes mesh-like and other nonmesh graphs, and graphs from Brandes and Pich's experimental study of distance scaling [5].

<div style='text-align: center'><img src='data/Benchmark datasets/SuiteSparse%20Matrix%20Collection%20b8772d6a2cbb456894b4673e32c6f956/Untitled%201.png' width='80%'></div>

**Table 2.** Test Graphs

From “[DRGraph: An Efficient Graph Layout Algorithm for Large-scale Graphs by Dimensionality Reduction](https://doi.org/10.1109/TVCG.2020.3030447)”:

> We perform experiments on a broad range of datasets selected from the University of Florida Sparse Matrix Collection [10] and tsNET [34] (Table 1).

<div style='text-align: center'><img src='data/Benchmark datasets/SuiteSparse%20Matrix%20Collection%20b8772d6a2cbb456894b4673e32c6f956/Untitled%202.png' width='80%'></div>

**Table 1.** Test Datasets

#### Example Figures

From “[The university of Florida sparse matrix collection](https://doi.org/10.1145/2049662.2049663)**”:**

<div style='text-align: center'><img src='data/Benchmark datasets/SuiteSparse%20Matrix%20Collection%20b8772d6a2cbb456894b4673e32c6f956/Untitled%203.png' width='80%'></div>

**Fig. 13.** A sample of matrices from the Collection, for the purpose of illustrating the complexity and diversity of matrices arising in real applications

From “[DRGraph: An Efficient Graph Layout Algorithm for Large-scale Graphs by Dimensionality Reduction](https://doi.org/10.1109/TVCG.2020.3030447)”:

<div style='text-align: center'><img src='data/Benchmark datasets/SuiteSparse%20Matrix%20Collection%20b8772d6a2cbb456894b4673e32c6f956/Untitled%204.png' width='80%'></div>

**Fig. 8.** Visualizations of selected graph datasets using FR, KK, S.M., FM3, SFDP, PMDS, tsNET and DRGraph.

::: 

<!--One more of such collections is [Konect](http://konect.cc/). At the time of writing, though, the website for Konect has been down for a while. Both the data and the website are still accessible through [web archive](https://web.archive.org/web/20231201123711/http://www.konect.cc/)---thus we do not consider this a lost collection.-->

<a name="KONECT"></a>

::: {.callout-note title="KONECT" collapse=true appearance="minimal"}

Contains a large amount of networks, classified under various categories (features, context) and reports a large amount of statistics for each individual network. Some of the datasets contained in Konect are also available as part of other network repositories.

The KONECT project is run at the University of Namur by Jérôme Kunegis.

<div><b>Originally found at: </b><a href="http://konect.cc/">http://konect.cc/</a>
</div><br>
<div><b>Size: </b>1326 graphs.</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@konect]</div><div class="col-8">KONECT: The Koblenz Network Collection</div></div><br>

:::

#### Subsets of other collections {#sec-subsets}

Some of the datasets mentioned in the papers have, after a certain time, been integrated into other, larger collections. 
This is a phenomenon that can happen through the years, through the redistribution and through the merging of different sources: the <a href="#Walshaw" class="dataset-link">Walshaw</a> dataset, for instance, was and still is distributed and cited as its own standalone dataset, but its graphs can be now found as part of many other larger collections. 
In order to keep precise records about the data, we kept these instances separated, in order to link papers to the individual dataset they used if they explicitly mention using one of these smaller collections.
We classified these datasets as **Subsets**.

<a name="Walshaw"></a>

::: {.callout-note title="Walshaw" collapse=true collapse-id="Walshaw" appearance="minimal"}

C. Walshaw, collected for an archive of graph partitions which has been maintained since 2000.  These are multilevel mesh partitions of heterogeneous networks from a variety of domains.

We do not provide the data ourselves. Walshaw requests to be emailed for the distribution of the data, and so we link to their site and to the graphs found in the [SuiteSparse Matrix Collection](#SuiteSparse_Matrix_Collection).

It has <a href="#Weighted_nodes"><span class="pill-tag pill_color_Weighted_nodes">Weighted nodes</span></a>and <a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a>graphs, and the partitions of the 34 graphs are given with various partition sizes and imbalance percentages.

<div><b>Originally found at: </b><a href="https://chriswalshaw.co.uk/partition/ ">https://chriswalshaw.co.uk/partition/ </a>where C. Walshaw requests to be emailed for the dataset at mailto:c.walshaw@gre.ac.uk. the individual graphs can also be found on the SuiteSparse Matrix Collection under different groups. 
</div><br>
<div><b>Size: </b>34 graphs, 2395-448695 nodes, 6837-3314611 edges. Node-weighted, edge-weighted. Partitions of the 34 graphs are given with various partition sizes and imbalance percentages.</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@soper_combined_2004]</div><div class="col-8">A Combined Evolutionary Search and Multilevel Optimisation Approach to Graph Partitioning</div></div>
<div class="row"><div class="col-4">[@walshaw2000]</div><div class="col-8">Mesh Partitioning: a Multilevel Balancing and Refinement Algorithm</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@walshaw2001]</div><div class="col-4">A Multilevel Algorithm for Force-Directed Graph Drawing</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@frishman2007]</div><div class="col-4">Multi-Level Graph Layout on the GPU</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@koren2002]</div><div class="col-4">ACE: A Fast Multiscale Eigenvectors Computation for Drawing Huge Graphs</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@KOREN20051867]</div><div class="col-4">Drawing graphs by eigenvectors: theory and practice</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@civril2006]</div><div class="col-4">SDE: Graph Drawing Using Spectral Distance Embedding</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">Efficient and High Quality Force-Directed Graph Drawing</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">Large-Graph Layout with the Fast Multipole Multilevel Method</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Hachul2005]</div><div class="col-4">Drawing Large Graphs with a Potential-Field-Based Multilevel Algorithm</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Eades2018]</div><div class="col-4">Drawing Big Graphs Using Spectral
Sparsification</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Hachul2006]</div><div class="col-4">An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@brandes2006]</div><div class="col-4">Eigensolver methods for progressive multidimensional scaling of large data</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Gansner2005b]</div><div class="col-4">Topological fisheye views for visualizing large graphs</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Other"><span class="pill-tag pill_color_Other">High degree</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Frishman2008]</div><div class="col-4">Online Dynamic Graph Drawing</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a></div></div>
<div class="row"><div class="col-4">[@Hong2019]</div><div class="col-4">Multi-level Graph Drawing Using Infomap Clustering</div><div class="col-4"><a href="#Other"><span class="pill-tag pill_color_Other">Multilevel</span></a></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">A Random Sampling O</div><div class="col-4"></div></div>
<div class="row"><div class="col-4">[@meidiana2020]</div><div class="col-4">Sublinear Time Force Computation for Big Complex Network Visualization</div><div class="col-4"><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div><br>


#### Descriptions from Literature

From “[An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs](https://link.springer.com/chapter/10.1007/11618058_22)”:

> The rest of the test graphs are taken from real-world applications. In particular, we selected graphs from the AT&T graph library [1], from C. Walshaw’s graph collection [20], and a graph that describes a social network of 2113 people that we obtained from C. Lipp.

From “[A Combined Evolutionary Search and Multilevel Optimisation Approach to Graph-Partitioning](https://doi.org/10.1023/B:JOGO.0000042115.44455.f3)”:

> The test graphs have been chosen to be a representative sample of small to medium scale real-life problems (mostly mesh-based) and include both 2D and 3D examples of nodal graphs (where the mesh nodes are partitioned) and dual graphs (where the mesh elements are partitioned). In addition there is a 3D semi-structured graph, cti, which is unstructured in the x−y plane but extended regularly along the z-axis. Finally the test suite includes three non mesh-based graphs (add32, vibrobox, bcsstk32) which arise from various scientific computing applications2. None of the graphs have either vertex or edge weights; such graphs are not widely available since most applications do not accurately instrument costs and it is difficult to draw meaningful conclusions from the few examples that we have access to.

<div style='text-align: center'><img src='data/Benchmark datasets/Walshaw%20e40b37a1147942d89ff1d8dfad285256/Untitled.png' width='80%'></div>

#### Example Figures

From “[An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs](https://link.springer.com/chapter/10.1007/11618058_22)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Walshaw%20e40b37a1147942d89ff1d8dfad285256/Untitled%201.png' width='80%'></div>

From “[Multi-Level Graph Layout on the GPU](https://doi.org/10.1109/TVCG.2007.70580)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Walshaw%20e40b37a1147942d89ff1d8dfad285256/Untitled%202.png' width='80%'></div>

**Fig. 11.** 4elt. Red: our layout, black: Kamada-Kawai layout

#### Other

From *[Group DIMACS10 in the SuiteSparse Matrix Collection](https://sparse.tamu.edu/DIMACS10)*:

```
Chris Walshaw's graph partitioning archive contains 34 graphs that
    have been very popular as benchmarks for graph partitioning algorithms
    ( http://staffweb.cms.gre.ac.uk/~wc06/partition/ ).

    17 of them are already in the UF Collection.  Only the 17 new graphs
    not yet in the collection are added here in the DIMACS10 set.

DIMACS10 graph:                 new?   UF matrix:
    ---------------                 ----   -------------
    walshaw/144                      *     DIMACS10/144
    walshaw/3elt                           AG-Monien/3elt
    walshaw/4elt                           Pothen/barth5
    walshaw/598a                     *     DIMACS10/598a
    walshaw/add20                          Hamm/add20
    walshaw/add32                          Hamm/add32
    walshaw/auto                     *     DIMACS10/auto
    walshaw/bcsstk29                       HB/bcsstk29
    walshaw/bcsstk30                       HB/bcsstk30
    walshaw/bcsstk31                       HB/bcsstk31
    walshaw/bcsstk32                       HB/bcsstk32
    walshaw/bcsstk33                       HB/bcsstk33
    walshaw/brack2                         AG-Monien/brack2
    walshaw/crack                          AG-Monient/crack
    walshaw/cs4                      *     DIMACS10/cs4
    walshaw/cti                      *     DIMACS10/cti
    walshaw/data                     *     DIMACS10/data
    walshaw/fe_4elt2                 *     DIMACS10/fe_4elt2
    walshaw/fe_body                  *     DIMACS10/fe_body
    walshaw/fe_ocean                 *     DIMACS10/fe_ocean
    walshaw/fe_pwt                         Pothen/pwt
    walshaw/fe_rotor                 *     DIMACS10/fe_rotor
    walshaw/fe_sphere                *     DIMACS10/fe_sphere
    walshaw/fe_tooth                 *     DIMACS10/fe_tooth
    walshaw/finan512                       Mulvey/finan512
    walshaw/m14b                     *     DIMACS10/m14b
    walshaw/memplus                        Hamm/memplus
    walshaw/t60k                     *     DIMACS10/t60k
    walshaw/uk                       *     DIMACS10/uk
    walshaw/vibrobox                       Cote/vibrobox
    walshaw/wave                           AG-Monien/wave
    walshaw/whitaker3                      AG-Monien/whitaker3
    walshaw/wing                     *     DIMACS10/wing
    walshaw/wing_nodal               *     DIMACS10/wing_nodal
```

::: 

<a name="amazon"></a>

::: {.callout-note title="Amazon" collapse=true appearance="minimal"} 

Wallinger et al. randomly filter data from the original dataset collected by Leskovec et al. in The dynamics of viral marketing. Leskovec et al. collected 15 million recommendations made from June 2001, to May 2003 by looking at the “Customers who Bought This Item Also Bought” feature in the Amazon online shopping platform. This dataset is a subset of SNAP and can be found there. It has <a href="#directed_edges"><span class="pill-tag pill_color_directed_edges">directed</span></a>edges and <a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a>graphs.

<div><b>Originally found at: </b> <a href="http://snap.stanford.edu/data/#amazon">http://snap.stanford.edu/data/#amazon</a></div><br>
<div><b>Size: </b>1 graph, 192k vertices and 269k edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@snapnets]</div><div class="col-8">SNAP Datasets: Stanford Large Network Dataset Collection</div></div>
<div class="row"><div class="col-4">[@leskovec2007]</div><div class="col-8">The dynamics of viral marketing</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Wallinger2022]</div><div class="col-4">Edge-Path Bundling: A Less Ambiguous Edge Bundling Approach</div><div class="col-4"><a href="#bundled_edges_generated"><span class="pill-tag pill_color_bundled_edges_generated">bundled edges (generated)</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div><br>

#### Description from Literature

From [Edge-Path Bundling: A Less Ambiguous Edge Bundling Approach:](https://ieeexplore.ieee.org/document/9552919)

> **Amazon Subset**
> This dataset consists of products with edges indicating that they are commonly co-purchased. We randomly filtered edges from the original graph [33], [34]. It has |V|=192k vertices and |E|=269k edges.

#### Example Figures

From [Edge-Path Bundling: A Less Ambiguous Edge Bundling Approach:](https://ieeexplore.ieee.org/document/9552919)

<div style='text-align: center'><img src='./data/Benchmark datasets/Amazon%201b39a766deb747b8a3b51fc41cfc2e20/Untitled.png' width='80%'></div>

::: 

<a name="Autonomous_System_Network"></a>

::: {.callout-note title="Autonomous System Network" collapse=true appearance="minimal"}

The 733-AS network is a subset of SNAP. We provide the link containing the original project, https://www.routeviews.org/routeviews/, and redirect to SNAP, <a href="https://snap.stanford.edu/data/as-733.html ">https://snap.stanford.edu/data/as-733.html </a>for the network data. In the dataset description they highlight how the graphs exhibit node and edge addition and deletion over time. 

The data was originally part of the University of Oregon’s RouteViews project. It was then used by Jure Leskovec et al. and eventually stored in SNAP. It contains <a href="#large"><span class="pill-tag pill_color_large">dynamic</span></a>graphs.

 <div><b>Originally found at: </b><a href="https://www.routeviews.org/routeviews/
">https://www.routeviews.org/routeviews/
</a><a href="https://snap.stanford.edu/data/as-733.html
">https://snap.stanford.edu/data/as-733.html
</a><a href="https://github.com/csuvis/MCGS/blob/master/dataset/AS-733_edge.csv">https://github.com/csuvis/MCGS/blob/master/dataset/AS-733_edge.csv</a></div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Zhao2021]</div><div class="col-8">Preserving Minority Structures in Graph Sampling</div></div>
<div class="row"><div class="col-4">[@leskovec2005]</div><div class="col-8">Graphs over Time: Densification Laws, Shrinking Diameters and Possible Explanations</div></div><br>
<div><b>Number of Graphs: </b>733</div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Zhao2021]</div><div class="col-4">Preserving Minority Structures in Graph Sampling</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div><br>

#### Descriptions from Literature

From “[Preserving Minority Structures in Graph Sampling](https://ieeexplore.ieee.org/document/9222065)”

> The AS-733 graph data set [48] is an autonomous systems network on the Internet with 6,474 nodes and 13,895 edges. The original graph and samples obtained by RDN, SST, MCGS are shown in Figure 5.

From “[Graphs over time: densification laws, shrinking diameters and possible explanations](https://dl.acm.org/doi/10.1145/1081870.1081893)”

> The graph of routers comprising the Internet can be organized into sub-graphs called Autonomous Systems (AS). Each AS exchanges traffic flows with some neighbors (peers).
We can construct a communication network of who-talks-towhom from the BGP (Border Gateway Protocol) logs. We use the the Autonomous Systems (AS) dataset from [26]. The dataset contains 735 daily instances which span an interval of 785 days from November 8 1997 to January 2 2000.In contrast to citation networks, where nodes and edges only get added (not deleted) over time, the AS dataset also exhibits both the addition and deletion of the nodes and edges over time.

#### Example Figures

From “[Preserving Minority Structures in Graph Sampling](https://ieeexplore.ieee.org/document/9222065)”

<div style='text-align: center'><img src='./data/Benchmark datasets/Autonomous%20System%20Network%2096d24eb9c7f94ab6a6b38e6a3af816ae/Untitled.png' width='80%'></div>

**Fig. 5.** Case analysis of the AS-733 graph data set (a) and three samples generated by RDN (b), SST(c), and MCGS (d) with a sampling rate of 30%.

::: 

<a name="Control_Flow_Graphs"></a>

::: {.callout-note title="Control Flow Graphs" collapse=true appearance="minimal"}

14 graphs from the GraphViz test suite collected by Gansner and Hu to evaluate their PRISM algorithm in ”https://dx.doi.org/10.7155/jgaa.00198”. This is just a subset of [GraphViz](#Graphviz_Examples), so we link to that dataset instead.

<div><b>Size: </b>14 graphs, from 36 to 1463 nodes</div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Nachmanson2017]</div><div class="col-4">Node Overlap Removal by Growing a Tree</div><div class="col-4"><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div><br>

#### Descriptions from Literature

From “[Node Overlap Removal by Growing a Tree](https://dx.doi.org/10.7155/jgaa.00442)”:

> Our data includes the same set of graphs that was used by the authors of
PRISM to compare it with other algorithms [6]. The set is available in the
Graphviz open source package.

#### Example Figures

From “[Node Overlap Removal by Growing a Tree](https://dx.doi.org/10.7155/jgaa.00442)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Control%20Flow%20Graphs%20af079f199a2c402d8633f6d41101934b/Untitled.png' width='80%'></div>

::: 

### Single Graphs {#sec-single-graphs}

A number of papers used individual, **Single Graphs** for their experiments instead of a collection. These graphs have become popular because of their properties as individual graphs - see, for example, the <a href="#Enron" class="dataset-link">Enron</a> dataset below, a huge individual graph that has a large variance in node degree distribution. Many of these graphs are also available in other repositories - their locations are noted wherever known.

<a name="Enron"></a>

::: {.callout-note title="Enron" collapse=true appearance="minimal"}

Data made public by the Federal Energy Regulatory Commission when investigating Enron. It has had a few changes over time documented in the link provided as its source. The data is currently hosted by William W. Cohen from CMU on a webiste, and it is also hosted on SNAP. SNAP asks to cite the paper linked in Origin paper. Very high variance in node degrees. Data can be considered threaded and directed, although <a href="#SNAP" class="dataset-link">SNAP</a> provides a version of the network that is explicitly undirected. This dataset proves useful for evaluating algorithms that work on very large graphs, due to its very large size.

<div><b>Originally found at: </b><a href="https://www.cs.cmu.edu/~enron/">https://www.cs.cmu.edu/~enron/</a></div><br>
<div><b>Size: </b>The data consists of 150 Enron executives, who sent 500,000 messages between themselves.</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Klimt2004IntroducingTE]</div><div class="col-8">Introducing the Enron Corpus</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Tanahashi2015]</div><div class="col-4">An Efficient Framework for Generating Storyline Visualizations from Streaming Data</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@vandenElzen2013]</div><div class="col-4">Reordering massive sequence views: Enabling temporal and structural analysis of dynamic networks</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div><br>


#### Descriptions from Literature

From “[Reordering massive sequence views: Enabling temporal and structural analysis of dynamic networks](https://doi.org/10.1109/PacificVis.2013.6596125)”:

> We cleaned the data set by removing duplicates, spam and only to contain internal communication between Enron employees annotated with employee function leaving us with 151 nodes (employees) and 21374 edges (emails). Visualization using a node-link diagram enables the identification of stronger connections (see Figure 9(a)). However, temporal patterns and the evolution of the network cannot be analysed. From the standard MSV (Figure 9(b)) it becomes somewhat clear that transaction density increases over time and we can distinguish between different phases. We cannot, however, see features and identify communities due to visual clutter

#### Example Figures

From “[An Efficient Framework for Generating Storyline Visualizations from Streaming Data](https://doi.org/10.1109/TVCG.2015.2392771)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Enron%20ed3c62b92cf14a7b86c691ac3651dab3/Untitled.png' width='80%'></div>

From “[Reordering massive sequence views: Enabling temporal and structural analysis of dynamic networks](https://doi.org/10.1109/PacificVis.2013.6596125)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Enron%20ed3c62b92cf14a7b86c691ac3651dab3/Untitled%201.png' width='80%'></div>

::: 

<a name="California"></a>

::: {.callout-note title="California" collapse=true appearance="minimal"}

Data contains links related to an online search of the word “California” as nodes - the edges are links between webpages. We found this dataset on the webpage of a 2002 computer science course at Cornell, instructed by Jon Kleinberg. The original name was Pages that match the word “California”. They mention how the data was queried from a search engine, and that many of the original links are broken. It is not clear whether Kleinberg collected the data, or compiled it for the course.

<div><b>Originally found at: </b><a href="https://www.cs.cornell.edu/courses/cs685/2002fa/data/gr0.California">https://www.cs.cornell.edu/courses/cs685/2002fa/data/gr0.California</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9492e803e0c0c0f558b9d" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94da70c2b4d0ea138634b" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9700094a6be112912e9a5" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e48803e0c0b00558baa" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>4772 nodes, 8965 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Kleinberg_2002]</div><div class="col-8">The Structure of Information Networks</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@muelder2008b]</div><div class="col-4">A Treemap Based Method for Rapid Layout of Large Graphs</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@muelder2008]</div><div class="col-4">Rapid Graph Layout Using Space Filling Curves</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/California%20e0a841bc57c045b5a8514110cfe85635/degree_distr.svg' width='80%'></div>

#### Descriptions from Literature

From [“A Treemap Based Method for Rapid Layout of Large Graphs](https://ieeexplore.ieee.org/document/4475481)”:

> This particular graph is a non-weighted graph of links between search results for the word “California” (also in Figures 6, 8, and 9, |V|=6107,|E|=15160).

From “[Rapid Graph Layout Using Space Filling Curves](https://ieeexplore.ieee.org/document/4658143)”:

> The “california” dataset (shown in Figures 5 and 8) consists of the links between the webpages found from a search for the word 'California' [4].

#### Example Figures

From [“A Treemap Based Method for Rapid Layout of Large Graphs](https://ieeexplore.ieee.org/document/4475481)”:

<div style='text-align: center'><img src='data/Benchmark datasets/California%20e0a841bc57c045b5a8514110cfe85635/Untitled.png' width='80%'></div>

**Fig. 1.** *A graph laid out using our treemap based approach*. This graph portrays the links between websites that came from a search on the word “California” [7]. Nodes are clustered into a hierarchy, and laid out by applying a treemap to this hierarchy. Levels of the hierarchy below a threshold are clustered together into larger nodes. It can very easily be seen that there are three primary groups of websites that link to each other, and a plethora of others that are not as tightly linked.

From “[Rapid Graph Layout Using Space Filling Curves](https://ieeexplore.ieee.org/document/4658143)”:

<div style='text-align: center'><img src='data/Benchmark datasets/California%20e0a841bc57c045b5a8514110cfe85635/Untitled%201.png' width='80%'></div>

**Fig. 5** *Separating clusters.* By adjusting the spacing between nodes according to the clustering information, clusters can be separated.

::: 

::: {.callout-note title="World Greenhouse Gas Emissions" collapse=true appearance="minimal"}

Data collected by the [WRI](https://www.wri.org/). Linked data is from a different year than the data used by [Optimal Sankey Diagrams Via Integer Programming](https://doi.org/10.1109/PacificVis.2018.00025), for which data could not be found. Contains <a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a> <a href="#Weighted_nodes"><span class="pill-tag pill_color_Weighted_nodes">Weighted nodes</span></a> <a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a> and <a href="#layered_graphs"><span class="pill-tag pill_color_layered_graphs">layers</span></a> 

<div><b>Originally found at: </b><a href="https://www.wri.org/data/world-greenhouse-gas-emissions-2005
">https://www.wri.org/data/world-greenhouse-gas-emissions-2005
</a><a href="https://www.wri.org/search?keys=world%20greenhouse%20gas%20emissions&amp;f%5B0%5D=content_type%3Adata
">https://www.wri.org/search?keys=world%20greenhouse%20gas%20emissions&amp;f%5B0%5D=content_type%3Adata
</a><a href="https://github.com/lhc70000/sankey/tree/master">https://github.com/lhc70000/sankey/tree/master</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9493c803e0c0c0c558ba6" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94d8b803e0c0c1f558cb4" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971484cf748115a055875" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90eb2803e0c0b03558c69" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>40 nodes, 85 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@navigating_numbers]</div><div class="col-8">Navigating the Numbers: Greenhouse Gas Data and International Climate Policy</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@zarate2018]</div><div class="col-4">Optimal Sankey Diagrams via Integer Programming</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/World%20Greenhouse%20Gas%20Emissions%20859aab42a55e43ac9dad1eae1a91a534/degree_distr.svg' width='80%'></div>

#### Descriptions from Literature

> We have tested our method on the “World Greenhouse Gas Emissions” data from the World Resources Institute [8]. After transforming the “long” edges of the graph into “short” edges and adding the corresponding dummy nodes, as described in Section 3, this example has 4 layers, 55 nodes and 100 edges. The node ordering in the layout of the Sankey diagram shown in Figure 1 has been computed using Sugiyama’s heuristic method [13].

#### Example Figures

From [Optimal Sankey Diagrams via Integer Linear Programming](https://doi.org/10.1109/PacificVis.2018.00025):

<div style='text-align: center'><img src='data/Benchmark datasets/World%20Greenhouse%20Gas%20Emissions%20859aab42a55e43ac9dad1eae1a91a534/Screen_Shot_2023-08-09_at_11.13.23_AM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets/World%20Greenhouse%20Gas%20Emissions%20859aab42a55e43ac9dad1eae1a91a534/Screen_Shot_2023-01-21_at_2.59.58_PM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets/World%20Greenhouse%20Gas%20Emissions%20859aab42a55e43ac9dad1eae1a91a534/Screen_Shot_2023-01-21_at_3.00.19_PM.png' width='80%'></div>
127.0.0.1:5501:150:21

::: 

<a name="Chess_Games"></a>

::: {.callout-note title="Chess Games" collapse=true appearance="minimal"}

20,058 chess openings from games in a database of played online chess games. The authors of “Sequence Braiding: Visual Overviews of Temporal Event Sequences and Attributes” collected the dataset online from the data science platform kaggle. The dataset was collected by user Mitchell J. and collects data from the chess website Lichess.org. The data used in the literature focuses on the 200 most common openings. These are all sequences of 6 moves and are topologically equivalent. It is a layered graph with <a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a>and <a href="#N-layers"><span class="pill-tag pill_color_N-layers">Layers</span></a> and can be seen as a <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Temporal event sequence</span></a>

<div><b>Originally found at: </b><a href="https://www.kaggle.com/datasets/datasnaek/chess?resource=download
">https://www.kaggle.com/datasets/datasnaek/chess?resource=download
</a><br><a href="https://github.com/VisDunneRight/sequence_braiding/blob/master/data/chess.json">https://github.com/VisDunneRight/sequence_braiding/blob/master/data/chess.json</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948ae4cf74810580556b8" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96e1b0c2b4d0f65386312" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9705494a6be112912e9d0" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90eed4cf7480eef055740" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>The data consists of 20058 sequences, which result in a disconnected graph of 118164 nodes, and  98106 edges.</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Jolly_2017]</div><div class="col-8">Chess Game Dataset (Lichess)</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Bartolomeo2021]</div><div class="col-4">Sequence Braiding: Visual Overviews of Temporal Event Sequences and Attributes</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div><br>

#### Descriptions from Literature

From “[Sequence Braiding: Visual Overviews of Temporal Event Sequences and Attributes](https://doi.org/10.1109/TVCG.2020.3030442)”:

> 200 Chess openings displayed with Sequence Braiding. Each line represents a sequence of moves of the white player, each group is a chess piece type. Most openings start with a pawn, and very little with the knight.

#### Example Figures

From “[Sequence Braiding: Visual Overviews of Temporal Event Sequences and Attributes](https://doi.org/10.1109/TVCG.2020.3030442)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Chess%20Games%20023a47d6ae914567a05132ac1dfbe972/Screen_Shot_2023-01-21_at_2.15.02_PM.png' width='80%'></div>

**Fig. 7.** 200 Chess openings displayed with Sequence Braiding. Each line represents a sequence of moves of the white player, each group is a chess piece type. Most openings start with a pawn, and very little with the knight. After moving a pawn, it is common to move a knight or a pawn, it is a little less common to move a bishop, and only a little number of openings move the queen on the second move.

::: 

<a name="Tree_ofLife"></a>

::: {.callout-note title="Tree of Life" collapse=true appearance="minimal"}

Part of the <a href="http://tolweb.org/tree/to ">http://tolweb.org/tree/to </a>characterize information about biodiversity and their evolutionary genealogy. It is a tree <a href="#trees"><span class="pill-tag pill_color_trees">tree</span></a>with <a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a>

<div><b>Originally found at: </b><a href="https://www.kaggle.com/datasets/konivat/tree-of-life?resource=download">https://www.kaggle.com/datasets/konivat/tree-of-life?resource=download</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9492294a6be103312e71d" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96dfb4cf748115a0556b0" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971350c2b4d0f65386558" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e404cf7480eec0555fd" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>35,960 nodes, 35,959 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@gkab301]</div><div class="col-8">Interactive Tree Of Life (iTOL) v5: an online tool for phylogenetic tree display and annotation</div></div>
<div class="row"><div class="col-4">[@maddison2007]</div><div class="col-8">The Tree of Life Web Project</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@gray2023]</div><div class="col-4">Visualizing Evolving Trees</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a></div></div><br>

#### Descriptions from Literature

From “[Visualizing Evolving Trees](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_23)”:

> **The Tree of Life:** captures the evolutionary progression of life on Earth [[37](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_23#ref-CR37)]. The underlying data is a tree structure with a natural time component. As a new species evolves, a new node in the tree is added. The edges give the parent-child relation of the nodes, where the parent is the original species, and the child is the new species. We use a subset of this graph with 500 nodes. The maximum node degree of this tree is 5, and the radius is 24

#### Example Figures

From “[Visualizing Evolving Trees](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_23)”:

<div style='text-align: center'><img src='data/Benchmark datasets/Tree%20of%20Life%20cb0493d6b6da4a73a979f06225983011/Untitled.png' width='80%'></div>

**Fig. 4.** Layouts obtained by the seven methods for the tree of life dataset.

::: 

<a name="World_BankTradeData"></a>

::: {.callout-note title="World Bank Trade Data" collapse=true appearance="minimal"}

Bilateral trade value in 1999 (total imports+exports), from [wits.worldbank.org](https://wits.worldbank.org/module/ALL/sub-module/ALL/reporter/ALL/year/ALL/tradeflow/ALL/pagesize/50/page/1). It is <a href="#dense"><span class="pill-tag pill_color_dense">dense</span></a>and has <a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a>

<div><b>Originally found at: </b><a href="https://wits.worldbank.org/module/ALL/sub-module/ALL/reporter/ALL/year/ALL/tradeflow/ALL/pagesize/50/page/1">https://wits.worldbank.org/module/ALL/sub-module/ALL/reporter/ALL/year/ALL/tradeflow/ALL/pagesize/50/page/1</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d949494cf7481075055615" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96d610c2b4d0f6438622a" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970654cf748115a0557d4" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e390c2b4d0d2e386256" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<br>
<div><b>Size: </b>194 nodes, 10080 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@SUBRAMANIAN2007151]</div><div class="col-8">The WTO promotes trade strongly but unevenly</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@noack2004]</div><div class="col-4">Energy Models for Graph Clustering</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@nocaj2015]</div><div class="col-4">Untangling the Hairballs of Multi-Centered Small-World Online Social Media Networks</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div><br> 


#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/World%20Bank%20Trade%20Data%20e6e54a00bc574c639cfa165458c71232/degree_distr.svg' width='80%'></div>

#### Descriptions from Literature

From “[Energy Models for Graph Clustering](https://doi.org/10.1007/978-3-540-24595-7_40)”:

> The difference between conventional energy models, node-repulsion LinLog, and edge-repulsion LinLog can be illustrated with a model of the trade between ten North American and European countries. The nodes of the graph correspond to the countries, and the edge weights specify the trade volume between each pair of countries. Because of geographical closeness and free trade agreements, countries on the same continent trade more intensively than countries on different continents. Figure 1 shows the minimum energy layouts of the trade graph for the three force and energy models. The layout of the widely used Fruchterman-Reingold model [20] does not show any clear groups at all. The layout of the node-repulsion LinLog energy model groups the countries (nodes) primarily according to their total trade volume (degree). Only the layout of the edge-repulsion LinLog energy model shows the expected grouping according to continents.

#### Example Figures

From “[Untangling the Hairballs of Multi-Centered Small-World Online Social Media Networks](https://doi.org/10.7155/jgaa.00370)”:

<div style='text-align: center'><img src='data/Benchmark datasets/World%20Bank%20Trade%20Data%20e6e54a00bc574c639cfa165458c71232/Screen_Shot_2023-08-17_at_5.17.54_PM.png' width='80%'></div>

From “[Energy Models for Graph Clustering](https://doi.org/10.1007/978-3-540-24595-7_40)”:

<div style='text-align: center'><img src='data/Benchmark datasets/World%20Bank%20Trade%20Data%20e6e54a00bc574c639cfa165458c71232/Screen_Shot_2023-08-17_at_5.13.41_PM.png' width='80%'></div>

::: 

<a name="Investment_Interdependence"></a>

::: {.callout-note title="Investment Interdependence" collapse=true appearance="minimal"}

Data collected in a survey of Ohio State University students by D. W. Malone. Students were presented with two potential obstacles to investment in Columbus, Ohio’s business district and asked, “does obstacle A aggravate or intensify obstacle B?”. Contains <a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a>and is <a href="#Hierarchical"><span class="pill-tag pill_color_Hierarchical">Hierarchical</span></a>

<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d949164cf7481076055631" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96e4d803e0c0caf558b9f" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d97042803e0c0cb3558c35" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e6794a6be0ebd12e705" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>25 nodes, 30 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@malone1975]</div><div class="col-8">An introduction to the application of interpretive structural modeling</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Sugiyama1981]</div><div class="col-4">Methods for Visual Understanding of Hierarchical System Structures</div><div class="col-4"><a href="#Hierarchical"><span class="pill-tag pill_color_Hierarchical">Hierarchical</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/Investment%20Interdependence%20141028dac1c34b6dbb69710ea5c7ee10/two_in_one.svg' width='80%'></div>

#### Description from Literature

From [Methods for Visual Understanding of Hierarchical System Structures](https://ieeexplore.ieee.org/document/4308636):

> Presented in Fig. 5 are drawings of the nine-level hierarchy which appeared in Malone [11] and represent the interdependence of obstacles to investment in the Columbus, Ohio, central business district.

#### Example Figures

From [Methods for Visual Understanding of Hierarchical System Structures](https://ieeexplore.ieee.org/document/4308636):

<div style='text-align: center'><img src='data/Benchmark datasets/Investment%20Interdependence%20141028dac1c34b6dbb69710ea5c7ee10/Untitled.png' width='80%'></div>

**Fig. 5. (cropped):** Maps of the nine-level hierarchy [11]. (a) Initial. (b) BC + QP
methods (c = 1.0). (c) BC + QP methods (cL= 0.5). (d) BC + QP methods
(c = 0.05). (e) BC + PR methods.

::: 

<a name="Protein_Interactions"></a>

::: {.callout-note title="Protein Interactions" collapse=true appearance="minimal"}

Protein Interaction Publications were collected from the [Biological Pathway Commons Database](http://www.pathwaycommons.org/).
Various types of protein interaction graphs are recorded in other network collections. We highlight two of them from the surveyed papers. First, we have the temporal Protein Interaction Publications, showing the history of how protein interactions were described in the literature. Second, the Protein Homology graph was provided by the Large Graph Layout project, their links are now broken and the dataset lost.  Nonetheless, [SNAP](@SNAP) and [Konect](http://konect.cc/networks/) both also have various dataset of human/other species protein interactions. 

<div><b>Originally found at: </b><a href="https://github.com/CreativeCodingLab/TimeArcs/tree/master/IndexCards">https://github.com/CreativeCodingLab/TimeArcs/tree/master/IndexCards
</a><a href="https://lgl.sourceforge.net/ ">https://lgl.sourceforge.net/ </a>(download link broken)</div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9487494a6be101c12e7a5" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96cd4803e0c0ca9558d2b" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971704cf748115a055882" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94abc0c2b4d0e8d38629c" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>2961 nodes, 5267 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@ADAI2004179]</div><div class="col-8">LGL: Creating a Map of Protein Function with an Algorithm for Visualizing Very Large Biological Networks</div></div>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@muelder2008]</div><div class="col-4">Rapid Graph Layout Using Space Filling Curves</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@dang2016]</div><div class="col-4">TimeArcs: Visualizing Fluctuations in Dynamic Networks</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div><br>

#### Protein Interaction Publications

#### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets/Protein%20Interactions%20(Publications)%20fb5bc3bb0c5d40468da36d279a114a78/degree_distr.svg' width='80%'></div>

#### Description from the Literature

From [TimeArcs: Visualizing Fluctuations in Dynamic Networks](https://onlinelibrary.wiley.com/doi/10.1111/cgf.12882):

> The data contains the publication information (such as publication year, author, and textual evidence) of interactions between pairs of proteins, as well as their specific interaction type.

> When there are multiple arcs connecting two proteins, it falls into one of the two circumstances. If they have the same color, these arcs indicate that there are supporting evidences in different publications which *confirm* the interaction between two elements. On the other hand, if they have the different colors, the more recent appearance provides either more detailed knowledge about the interaction or shows a *conflict* between different articles regarding the way in which these proteins interact.

#### Example Figures

From [TimeArcs: Visualizing Fluctuations in Dynamic Networks](https://onlinelibrary.wiley.com/doi/10.1111/cgf.12882):

<div style='text-align: center'><img src='data/Benchmark datasets/Protein%20Interactions%20(Publications)%20fb5bc3bb0c5d40468da36d279a114a78/Untitled.png' width='80%'></div>

**Fig. 10**: TimeArcs visualization for interactions around PCAF protein. (1), (2), and (3) in the figure are supporting evidences in literature of “PCAF binds MAML”. 

#### Protein Homology (Lost)

#### Description from the Literature

From [Rapid Graph Layout Using Space Filling Curves:](https://ieeexplore.ieee.org/document/4658143\)

> The “pgraph” dataset (shown in Figures 2 and 6) is a protein homology graph, which is relatively dense [7].

Consists of 28, 854 vertices and 1,180, 816 edges, found in Table 1 of paper above. 

#### Example Figures

From [Rapid Graph Layout Using Space Filling Curves:](https://ieeexplore.ieee.org/document/4658143)

<div style='text-align: center'><img src='data/Benchmark datasets/Protein%20Interactions%20(Publications)%20fb5bc3bb0c5d40468da36d279a114a78/Untitled%201.png' width='80%'></div>

**Fig. 2.** *A protein homology graph laid out with our space filling curve based approach.* Color corresponds to depth in the clustering hierarchy. |*V*| = 28, 854,|*E*| = 1, 180, 816

From [LGL: Creating a Map of Protein Function with an Algorithm for Visualizing Very Large Biological Networks](https://www.sciencedirect.com/science/article/pii/S0022283604004851)

<div style='text-align: center'><img src='data/Benchmark datasets/Protein%20Interactions%20(Publications)%20fb5bc3bb0c5d40468da36d279a114a78/Untitled%202.png' width='80%'></div>

**Fig. 3.** The complete protein homology map. A layout of the entire protein homology map; a total of 11,516 connected sets containing 111,604 proteins (vertices) with 1,912,684 edges. The largest connected set is shown more clearly in the inset and is enlarged further in [Figure 4](https://www.sciencedirect.com/science/article/pii/S0022283604004851?via%3Dihub#FIG4).

::: 

### Aggregate Collections {#sec-aggregate-collections}

Many papers use graphs from specific domains that contain particular characteristics, such as geographical coordinates often found in airline data. Instead of collecting each of these individual, contextual datasets, we aggregated them into subcategories called **Aggregate collections**. These collections group together datasets from the same real-life context, which may have multiple sources. Real-life contexts are distinguishable by specific properties or requirements found in graphs from those sources; for instance, collaboration networks can be represented as hypergraphs, while air traffic routes have nodes (airports) with fixed spatial coordinates and numerous edges connecting the nodes, making them suitable for edge bundling algorithms. Individual information about each aggregate collection can be found in the papers that contain them.

<a name="Assorted_Collaboration_Network"></a>

::: {.callout-note title="Assorted Collaboration Network" collapse=true appearance="minimal"}

Contains IEEEVis Publication Data, DBLP collaborations, and CPAN, which contains collaboration information among developers using Perl.
The VIS publication data was found online in the following website: <a href="https://sites.google.com/site/vispubdata. ">https://sites.google.com/site/vispubdata. </a>However, we also downloaded the text file fromhttps://www.cc.gatech.edu/gvu/ii/citevis/, a tool/poster associated to the publication: http://vispubdata.org/: A Metadata Collection about IEEE Visualization (VIS) Publications. 

Assorted collaboration networks contain <a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a> <a href="#directed_edges"><span class="pill-tag pill_color_directed_edges">directed</span></a>edges, and <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a>graphs.
 
<div><b>Originally found at: </b><a href="https://www.cc.gatech.edu/gvu/ii/citevis/
">https://www.cc.gatech.edu/gvu/ii/citevis/
</a><a href="https://sites.google.com/site/vispubdata/home?authuser=0
">https://sites.google.com/site/vispubdata/home?authuser=0
</a><a href="https://dblp.uni-trier.de/
">https://dblp.uni-trier.de/
</a><a href="https://github.com/csuvis/MCGS/tree/master/dataset">https://github.com/csuvis/MCGS/tree/master/dataset</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948ba94a6be101d12e880" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96d7d0c2b4d0f65386287" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971834cf748115b055998" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e6f4cf7480eef0556cd" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>3503-7102 nodes, 2112-25677 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Isenberg:2017:VMC]</div><div class="col-8">vispubdata.org: A Metadata Collection about IEEE Visualization VIS Publications</div></div>
<div class="row"><div class="col-4">[@heymanncpan2009]</div><div class="col-8">CPAN-explorer</div></div>
<div class="row"><div class="col-4">[link]</div><div class="col-8">an interactive exploration of the Perl Ecosystem</div></div>
<div class="row"><div class="col-4">[@Zhao2021]</div><div class="col-8">Preserving Minority Structures in Graph Sampling</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Angori2019]</div><div class="col-4">ChordLink: A New Hybrid Visualization Model0</div><div class="col-4"><a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a><a href="#Other"><span class="pill-tag pill_color_Other">High degree</span></a><a href="#Labeled_nodes"><span class="pill-tag pill_color_Labeled_nodes">Labeled nodes</span></a></div></div>
<div class="row"><div class="col-4">[@minghim2006]</div><div class="col-4">Content-based text mapping using multi-dimensional projections for exploration of document collections</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Ogawa2010]</div><div class="col-4">Software evolution storylines</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Bach2014]</div><div class="col-4">GraphDiaries: Animated Transitions and Temporal Navigation for Dynamic Networks</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a></div></div>
<div class="row"><div class="col-4">[@Simonetto2018]</div><div class="col-4">Drawing Dynamic Graphs Without Timeslices</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (continuous)</span></a></div></div>
<div class="row"><div class="col-4">[@Henry2007]</div><div class="col-4">NodeTrix: a Hybrid Visualization of Social Networks</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Other"><span class="pill-tag pill_color_Other">High degree</span></a></div></div>
<div class="row"><div class="col-4">[@DiGiacomo2020]</div><div class="col-4">Storyline Visualizations with Ubiquitous Actors</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a></div></div>
<div class="row"><div class="col-4">[@dang2016]</div><div class="col-4">TimeArcs: Visualizing Fluctuations in Dynamic Networks</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Qu2022]</div><div class="col-4">Automatic Polygon Layout for Primal-Dual Visualization of Hypergraphs</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a></div></div>
<div class="row"><div class="col-4">[@diBartolomeo2022]</div><div class="col-4">Six methods for transforming layered hypergraphs to apply layered graph layout algorithms</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#hypergraph"><span class="pill-tag pill_color_hypergraph">hypergraph</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@Gansner2013]</div><div class="col-4">A Maxent-Stress Model for Graph Layout</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Zhao2021]</div><div class="col-4">Preserving Minority Structures in Graph Sampling</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Grabowicz2014]</div><div class="col-4">Fast filtering and animation of large dynamic
networks</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (continuous)</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@mizuno2019]</div><div class="col-4">Optimizing Stepwise Animation in Dynamic Set Diagrams</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">A Random Sampling O</div><div class="col-4"></div></div>
<div class="row"><div class="col-4">[@arleo2022]</div><div class="col-4">Event-based Dynamic Graph Drawing without the Agonizing Pain</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a></div></div>
<div class="row"><div class="col-4">[@burch2011]</div><div class="col-4">Parallel Edge Splatting for Scalable Dynamic Graph Visualization</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a><a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a></div></div>
<div class="row"><div class="col-4">[@Lin2010]</div><div class="col-4">ContexTour: Contextual Contour Visual Analysis on Dynamic Multi-
Relational Clustering</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (continuous)</span></a><a href="#Bipartite"><span class="pill-tag pill_color_Bipartite">Tripartite</span></a></div></div>
<div class="row"><div class="col-4">[@saket2016]</div><div class="col-4">Comparing Node-Link and Node-Link-Group Visualizations From An Enjoyment Perspective</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='./data/Benchmark datasets/Assorted%20Collaboration%20Network%206062ff126f474a50b5f3dc9b945d43da/four_in_one.svg' width='80%'></div>

#### Description from papers

From “[Drawing Dynamic Graphs Without Timeslices](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_31)”

> *InfoVis Co-Authorship (Discrete):* a co-authorship network for papers published in the InfoVis conference from 1995 to 2015 [[1](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_31#ref-CR1)]. Authors collaborating on a paper are connected in a clique at the time of publication of the paper. Note this is not a cumulative network as authors can appear, disappear, and appear again. The data is of discrete nature with exactly 21 timeslices (one per year).

From “[Event-based Dynamic Graph Drawing without the Agonizing Pain](https://onlinelibrary.wiley.com/doi/10.1111/cgf.14615)”

> InfoVis is a co-authorship network for papers published in the InfoVis conference from 1995 to 2015 [[IHK*16](https://onlinelibrary.wiley.com/doi/10.1111/cgf.14615#cgf14615-bib-0035)]. Authors on a paper are connected in a clique at the time of publication. This is not a cumulative network as authors can appear, disappear and appear again. The dataset has 21 timeslices (one per year).

#### Example Figures

From “[Six methods for transforming layered hypergraphs to apply layered graph layout algorithms](https://onlinelibrary.wiley.com/doi/10.1111/cgf.14538)”

<div style='text-align: center'><img src='./data/Benchmark datasets/Assorted%20Collaboration%20Network%206062ff126f474a50b5f3dc9b945d43da/Untitled.png' width='80%'></div>

**Fig. 7.** Collaborations in papers published at VIS between a set of universities—in particular, these are the collaborators of Harvard University and the collaborators of the collaborators (up to 2 degrees of separation). This figure shows the result of the application of  aggregate-collapse.

From “[TimeArcs: Visualizing Fluctuations in Dynamic Networks](https://onlinelibrary.wiley.com/doi/10.1111/cgf.12882)”

<div style='text-align: center'><img src='./data/Benchmark datasets/Assorted%20Collaboration%20Network%206062ff126f474a50b5f3dc9b945d43da/Untitled%201.png' width='80%'></div>

**Figure 5.** The TimeArcs visualization applied to the IEEE VIS publication co-authorship network of the top 50 researchers from 2010 to 2014 (i.e., the same data in Fig. [4](https://onlinelibrary.wiley.com/doi/10.1111/cgf.12882#cgf12882-fig-0004)). 

#### CPAN Graph Dataset

#### Descriptions from Literature

From [**Preserving Minority Structures in Graph Sampling**](https://ieeexplore.ieee.org/document/9222065)

> **6.3.2 Cpan Graph Data Set**
> The Cpan data set is a collaboration network with 839 nodes and 2,127 edges [1]. It depicts the relationships between the developers using the same Perl modules. The original graph and samples obtained by FF, TIES, and MCGS are shown in Figure 6. This case focused on the preservation of parachute-like rims at marginal areas.

#### Example Figures

From [**Preserving Minority Structures in Graph Sampling**](https://ieeexplore.ieee.org/document/9222065)

<div style='text-align: center'><img src='./data/Benchmark datasets/Assorted%20Collaboration%20Network%206062ff126f474a50b5f3dc9b945d43da/Untitled%202.png' width='80%'></div>

**Fig. 6.** Visual illustration of the cpan graph data set (a) and three samples generated by ff (b), ties (c), and mcgs (d) with a sampling rate of 30%.

#### DBLP

#### Descriptions from the Literature

From [ChordLink: A New Hybrid Visualization Model](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_22)

> The second case study considers co-authorship networks extracted from the DBLP dataset [[30](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_22#ref-CR30)], which contains publication data in computer science. Through a query consisting of keywords and Boolean operators, one can retrieve a set of publications on a desired topic. We use the results returned by DBLP to construct networks where nodes are authors and edges indicate co-authorships, weighted by the number of papers shared by their end-nodes. Nodes are labeled with authors’ names and edges with the titles of the corresponding publications. 
We performed the query “network AND visualization” and limited to 500 the number of search results (i.e., publications) to be returned. The resulting network consists of 1766 nodes, 3780 edges, and 382 connected components. The largest of these components contains 118 nodes and 322 edges.

#### Example Figures

From Parallel Edge Splatting for Scalable dynamic Graph Visualization

<div style='text-align: center'><img src='./data/Benchmark datasets/Assorted%20Collaboration%20Network%206062ff126f474a50b5f3dc9b945d43da/Untitled%203.png' width='80%'></div>

**Fig. 8.** The evolution of the word graph generated from paper titles containing the words “vis” and “web”. 21 graphs are shown for the years 1990 until 2010. A total of 264, 311 edges with weights of more than five are displayed.

From  [ChordLink: A New Hybrid Visualization Model](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_22)

<div style='text-align: center'><img src='./data/Benchmark datasets/Assorted%20Collaboration%20Network%206062ff126f474a50b5f3dc9b945d43da/Untitled%204.png' width='80%'></div>

**Fig. 1.** A CHORDLINK visualization of a co-authorship network. The drawing has four clusters, represented as chord diagrams. In each chord diagram, circular arcs of the same color are copies of the same author. For example, in the smallest cluster, F. Montecchiani has two (green) copies, each connected to some nodes external to the cluster.

From Automatic Polygon Layout for Primal-Dual Visualization of Hypergraphs

<div style='text-align: center'><img src='./data/Benchmark datasets/Assorted%20Collaboration%20Network%206062ff126f474a50b5f3dc9b945d43da/Untitled%205.png' width='80%'></div>

**Fig. 10.** Paper and authorship data from the online database DBLP [26] for publications from 2013 to 2015 in IEEE Transactions on Pattern Analysis and Machine Intelligence. Each N-ary relationship is either a paper with N authors (left: the primal view) or an author with N papers (right: the dual view).

::: 

<a name="Airlines_Migrations_and_Air_Traffic"></a>

::: {.callout-note title="Airlines, Migrations, and Air Traffic" collapse=true appearance="minimal"}

Airlines, migrations and air traffic data can be interesting for its <a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a>properties and <a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a> The data is often used for edge bundling algorithms, which group edges together to reduce visual clutter.

The data below was collected from the Edge-Path bundling paper by Markus Wallinger et al. They cite the Airlines dataset to Force Directed Edge Bundling for Graph Visualization and the migrations dataset to Geometry-Based Edge Clustering for Graph Visualization.

 <div><b>Originally found at: </b><a href="https://github.com/mwallinger-tu/edge-path-bundling/tree/master/data">https://github.com/mwallinger-tu/edge-path-bundling/tree/master/data</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9490a1101aa0dcf6a0ba5" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96d8c0c2b4d0f64386243" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971241101aa0e9f6a0c0b" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e774cf7480ef0055631" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>235-1702 nodes, 2101-16494 edges</div><br>
<div><b>Number of Graphs: </b>3</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@holten2009]</div><div class="col-8">Force-Directed Edge Bundling for Graph Visualization</div></div>
<div class="row"><div class="col-4">[@cui2008]</div><div class="col-8">Geometry-Based Edge Clustering for Graph Visualization</div></div>
<div class="row"><div class="col-4">[@Wallinger2022]</div><div class="col-8">Edge-Path Bundling: A Less Ambiguous Edge Bundling Approach</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Ersoy2011]</div><div class="col-4">Skeleton-Based Edge Bundling for Graph Visualization</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@Holten2009]</div><div class="col-4">Force-directed edge bundling for graph visualization</div><div class="col-4"><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@vonLandesberger2016]</div><div class="col-4">MobilityGraphs: Visual Analysis of Mass Mobility Dynamics via Spatio-Temporal Graphs and Clustering</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@cui2008]</div><div class="col-4">Geometry-Based Edge Clustering for Graph Visualization</div><div class="col-4"><a href="#bundled_edges_generated"><span class="pill-tag pill_color_bundled_edges_generated">bundled edges (generated)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Wu2018]</div><div class="col-4">MLSEB: Edge Bundling Using Moving Least
Squares Approximation</div><div class="col-4"><a href="#bundled_edges_generated"><span class="pill-tag pill_color_bundled_edges_generated">bundled edges (generated)</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@Perri2020]</div><div class="col-4">HOTVis: Higher-Order Time-Aware
Visualisation of Dynamic Graphs</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a></div></div>
<div class="row"><div class="col-4">[@Wallinger2022]</div><div class="col-4">Edge-Path Bundling: A Less Ambiguous Edge Bundling Approach</div><div class="col-4"><a href="#bundled_edges_generated"><span class="pill-tag pill_color_bundled_edges_generated">bundled edges (generated)</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@wang2020]</div><div class="col-4">Interactive Structure-aware Blending of Diverse Edge Bundling Visualizations</div><div class="col-4"><a href="#bundled_edges_generated"><span class="pill-tag pill_color_bundled_edges_generated">bundled edges (generated)</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@wallinger2023]</div><div class="col-4">Faster Edge-Path Bundling through Graph Spanners</div><div class="col-4"><a href="#bundled_edges_generated"><span class="pill-tag pill_color_bundled_edges_generated">bundled edges (generated)</span></a><a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='./data/Benchmark datasets/Airlines,%20Migrations,%20and%20Air%20Traffic%2045ffa6caedd141b082e163d7da6eb895/four_in_one.svg' width='80%'></div>

#### Descriptions from Literature

From “[Skeleton-Based Edge Bundling for Graph Visualization](https://doi.org/10.1109/TVCG.2011.233)”:

> Figure 7 illustrates the SBEB and compares it with several existing bundling methods. Note that in all images here generated with our method, we used simple additive edge blending only, as our focus here is the layout, not the rendering. Images (a,b) show an air traffic graph (nodes are city locations, edges are interconnecting flights)… Images (e-h) show the US migrations graph bundled with the WR, GBEB, FDEB, and our method (SBEB) respectively. Overall, SBEB produces stronger bundling, due to the many iterations I = 10 being used), and emphasizes the structure of connections between groups of close cities (due to the skeleton layout cues). If less bundling is desired, fewer iterations can be used (Fig. 4). Adjusting the postprocessing smoothing and relaxation parameters, SBEB can create bundling styles similar to either GBEB (higher bundle curvatures, more emphasis on the graph structure) or FDEB (smoother bundles). Finally, images (i,j) show the US airlines graph bundled with the FDEB and SBEB respectively. SBEB generates stronger bundling (more overdraw) but arguably less clutter. Note also that SBEB generates treelike bundle structures which is useful when the exploration task at hand has an inherent (local) hierarchical nature, e.g. see how traffic connections merge into and/or split from main traffic routes.

#### Example Figures

From “[Edge-Path Bundling: A Less Ambiguous Edge Bundling Approach](https://ieeexplore.ieee.org/document/9552919)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Airlines,%20Migrations,%20and%20Air%20Traffic%2045ffa6caedd141b082e163d7da6eb895/Untitled.png' width='80%'></div>

**Fig. 1.** Edge bundling of the migrations dataset. (a) Straight line drawing. (b) Force-directed edge bundling aggregates edges well, but overaggregates at the centre of the drawing making it difficult to see patterns in the east-west flow (red bundle). (c) Cubu has a similar drawback at the centre of the map to a lesser degree. (d) Winding roads divides this structure into several smaller flows, but they may not be necessarily related to graph structure. (e) Edge-path bundling is able to distinguish between several flows that reflect paths in the underlying graph. (f) When edge direction is considered, the algorithm is able to further subdivide these flows based on direction. 

<div style='text-align: center'><img src='./data/Benchmark datasets/Airlines,%20Migrations,%20and%20Air%20Traffic%2045ffa6caedd141b082e163d7da6eb895/Untitled%201.png' width='80%'></div>

**Fig. 8.** Airlines (undirected). (a) Input drawing. (b) Force-directed bundling is able to cluster edges into the major flows, but some overaggregation prevents details from being visualised. (c) Cubu provides a good bundling, but also has overaggregation. (c) Confluent drawings can be imposed on the layout, but as the approach cannot layout the graph bicliques can be distantly located, resulting in suboptimal performance. (e) Winding roads divides the flows into many streams, but these streams can be unfaithful to graph structure. (f) Edge-path bundling aggregates edges using weighted paths. The four prominent bundle intersections on the east coast correspond to major airports: Atlanta, Detroit, Minneapolis, and Dallas.

<div style='text-align: center'><img src='./data/Benchmark datasets/Airlines,%20Migrations,%20and%20Air%20Traffic%2045ffa6caedd141b082e163d7da6eb895/Untitled%202.png' width='80%'></div>

**Fig. 10.** Results of four algorithms on the air traffic network. (a) Force-directed bundling is able to recover the major trajectories but does not strongly bundle the network. (b) Cubu strongly bundles the main flows of airtraffic, but can suffer from overaggregation. (c) Winding roads divides the traffic into many smaller bundles, but this may not be reflective of underlying graph structure. (d) With edge-path bundling, each bundle necessarily reflects a path in the network. There are separate flows across the atlantic and asia that correspond to paths through the network.

From “[Skeleton-Based Edge Bundling for Graph Visualization](https://doi.org/10.1109/TVCG.2011.233)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Airlines,%20Migrations,%20and%20Air%20Traffic%2045ffa6caedd141b082e163d7da6eb895/Screen_Shot_2023-08-14_at_3.42.37_PM.png' width='80%'></div>

::: 

<a name="Code_Dependency_Graphs"></a>

::: {.callout-note title="Code Dependency Graphs" collapse=true appearance="minimal"}

Various software call dependency graphs have been used in the literature. We provide the benchmarks used in [A Random Sampling O(n) Force-calculation Algorithm for Graph Layouts](https://onlinelibrary.wiley.com/doi/full/10.1111/cgf.13724), as these posed the most comprehensive and available collection. [Parallel Edge Splatting for Scalable Dynamic Graph Visualization](https://ieeexplore.ieee.org/document/6065001) used a software call graph from a device called a “Phillips Medical System Eindhoven medical scanner”, which is lost. Python and Eclipse subversion control logs are also currently lost. The authors of [Parallel Edge Splatting for Scalable Dynamic Graph Visualization](https://ieeexplore.ieee.org/document/6065001) used <a href="https://depfind.sourceforge.io/ ">https://depfind.sourceforge.io/</a> to extract the commit history.

<div><b>Originally found at: </b><a href="http://vis.cs.ucdavis.edu/~ogawa/datasets/ ">http://vis.cs.ucdavis.edu/~ogawa/datasets/ </a>(broken)
<a href="https://osf.io/dcz5h ">https://osf.io/dcz5h </a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94840803e0c0bf6558bd1" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96dc01101aa0ea66a0bee" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970111101aa0ea36a0c62" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90f0994a6be0ec112e76b" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>128-2956 nodes, 310-10845 edges</div><br>
<div><b>Number of Graphs: </b>11</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@gove2019]</div><div class="col-8">A Random Sampling O(n) Force-calculation Algorithm for Graph Layouts</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@burch2011]</div><div class="col-4">Parallel Edge Splatting for Scalable Dynamic Graph Visualization</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a><a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a></div></div>
<div class="row"><div class="col-4">[@Holten2006]</div><div class="col-4">Hierarchical Edge Bundles: Visualization of Adjacency Relations in Hierarchical Data</div><div class="col-4"><a href="#bundled_edges_generated"><span class="pill-tag pill_color_bundled_edges_generated">bundled edges (generated)</span></a><a href="#Other"><span class="pill-tag pill_color_other">Compound graphs</span></a><a href="#Hierarchical"><span class="pill-tag pill_color_Hierarchical">Hierarchical</span></a></div></div>
<div class="row"><div class="col-4">[@Tanahashi2015]</div><div class="col-4">An Efficient Framework for Generating Storyline Visualizations from Streaming Data</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@devkota2018]</div><div class="col-4">CFGExplorer: Designing a Visual Control Flow Analytics System around Basic Program Analysis Operations</div><div class="col-4"><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='./data/Benchmark datasets/Code%20Dependency%20Graphs%203b6beec0413c486184cee398056e6c87/four_in_one.svg' width='80%'></div>

#### Software Dependency Calls

#### Descriptions from Literature

From “[A Random Sampling O(n) Force-calculation Algorithm for Graph Layouts](https://onlinelibrary.wiley.com/doi/full/10.1111/cgf.13724)”:

> The software graphs show dependencies in several software packages [**[vB11](https://onlinelibrary.wiley.com/doi/full/10.1111/cgf.13724#cgf13724-bib-0076)**, **[vB02](https://onlinelibrary.wiley.com/doi/full/10.1111/cgf.13724#cgf13724-bib-0075)**, **[vB12](https://onlinelibrary.wiley.com/doi/full/10.1111/cgf.13724#cgf13724-bib-0077)**, **[vBB13](https://onlinelibrary.wiley.com/doi/full/10.1111/cgf.13724#cgf13724-bib-0078)**, **[vvBB14](https://onlinelibrary.wiley.com/doi/full/10.1111/cgf.13724#cgf13724-bib-0082)**].

From “[Parallel Edge Splatting for Scalable Dynamic Graph Visualization](https://ieeexplore.ieee.org/document/6065001)”:

> We collected the 21 available releases of JUnit as compiled Java bytecode and extracted the method call dependencies using *DependencyFinder* (depfind. sourceforge.net). The package and class structure provides a natural hierarchy on the methods of the system. The resulting dynamic graph consists of 2,817 vertices connected by 15,339 edges, where each edge is weighted by 1.

#### Example Figures

From [Parallel Edge Splatting for Scalable Dynamic Graph Visualization](https://ieeexplore.ieee.org/document/6065001):

<div style='text-align: center'><img src='./data/Benchmark datasets/Code%20Dependency%20Graphs%203b6beec0413c486184cee398056e6c87/Untitled.png' width='80%'></div>

**Fig. 6.** Call dependencies between methods in 21 releases of the JUnit project: all (top), added (left), and removed (right) dependencies.

#### Phillips Medical Software Call Graph (Lost)

#### Descriptions from Literature

From “[Hierarchical Edge Bundles: Visualization of Adjacency Relations in Hierarchical Data](https://ieeexplore.ieee.org/document/4015425)”:

> The software is part of a medical scanner and was provided by Philips Medical Systems Eindhoven. Three hierarchy levels – layers, units, and modules – consisting of 284 nodes are used together with the associated call graph for the elements at the lowest level of the hierarchy, i.e., 1,011 adjacency relations representing module-to-module calls.

#### Example Figures

From “[Hierarchical Edge Bundles: Visualization of Adjacency Relations in Hierarchical Data](https://ieeexplore.ieee.org/document/4015425)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Code%20Dependency%20Graphs%203b6beec0413c486184cee398056e6c87/Untitled%201.png' width='80%'></div>

**Fig. 13.** A software system and its associated call graph (caller = green, callee = red). (a) and (b) show the system with bundling strength β = 0.85 using a balloon layout (node labels disabled) and a radial layout, respectively. Bundling reduces visual clutter, making it easier to perceive the actual connections than when compared to the non-bundled versions (figures 2a and 11a). Bundled visualizations also show relations between sparsely connected systems more clearly (encircled regions); these are almost completely obscured in the non-bundled versions. The encircled regions highlight identical parts of the system for (a), (b), and figure 15.

#### Subversion Control Logs (Lost)

From “[An Efficient Framework for Generating Storyline Visualizations from Streaming Data”:](https://ieeexplore.ieee.org/document/7015617)

> The datasets we used for this study were:
…
*Python Subversion Control Logs* (*Python*) [30] 
E*clipse Subversion Control Logs* (*Eclipse*) [30]
…
These datasets all contained temporal logs of events in which entities interact.

::: 

<a name="Blogposts_Tweets_and_Forums"></a>

::: {.callout-note title="Blogposts, Tweets, and Forums" collapse=true appearance="minimal"}

In the surveyed papers we found various instances of blogposts, tweets, and forum posts. Many of these are timestamped posts that connect user mentions, textually derived entities, hashtags, or user actions on posts. We provide a selection of Blogposts, Tweets, and MOOC (a student forum) as found in the literature.
Time Arcs uses AMERICAblog, Huffington Post, and other sources (corpus_ner_geo) data which can be found at <a href="https://github.com/CreativeCodingLab/TimeArcs/tree/master/Text/data.">https://github.com/CreativeCodingLab/TimeArcs/tree/master/Text/data.</a>

Fast filtering uses the Twitter gardenhouse streaming API to collect data on the 2013 Super Bowl and the announcement of Osama Bin Laden’s death, both can be found <a href="https://github.com/WICI/fastviz/tree/master/data ">https://github.com/WICI/fastviz/tree/master/data </a>(shared hashtags).

Event-based Dynamic Graph Drawing without the Agonizing Pain uses the rugby tweet dataset (pro12_mentions) consisting of mentions among the members of the GuinessPro12 competition, and the MOOC dataset from the [KDD Cup 2015](http://moocdata.cn/challenges/kdd-cup-2015) (A data challenge).

This kind of data can be interesting because it might be interpreted as <a href="#hypergraph"><span class="pill-tag pill_color_hypergraph">hypergraph</span></a>data, where nodes are connected by multiple edges, or as <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a>data, where the edges change over time.

 <div><b>Originally found at: </b><a href="http://moocdata.cn/data/user-activity
">http://moocdata.cn/data/user-activity
</a><a href="https://github.com/CreativeCodingLab/TimeArcs
">https://github.com/CreativeCodingLab/TimeArcs
</a><a href="https://github.com/WICI/fastviz/tree/master/data
">https://github.com/WICI/fastviz/tree/master/data
</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9497a0c2b4d0e8c386228" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96da194a6be112a12e740" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971111101aa0ea36a0cb6" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94add4cf7481071055619" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>12-386412 nodes, 3151-556820 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@feng2019dropout]</div><div class="col-8">Understanding Dropouts in MOOCs</div></div>
<div class="row"><div class="col-4">[@dang2016]</div><div class="col-8">TimeArcs: Visualizing Fluctuations in Dynamic Networks</div></div>
<div class="row"><div class="col-4">[@Grabowicz2014]</div><div class="col-8">Fast filtering and animation of large dynamic networks</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Frishman2008]</div><div class="col-4">Online Dynamic Graph Drawing</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a></div></div>
<div class="row"><div class="col-4">[@Purchase2020]</div><div class="col-4">The Turing Test for Graph Drawing Algorithms</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Grabowicz2014]</div><div class="col-4">Fast filtering and animation of large dynamic
networks</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (continuous)</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@dang2016]</div><div class="col-4">TimeArcs: Visualizing Fluctuations in Dynamic Networks</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@arleo2022]</div><div class="col-4">Event-based Dynamic Graph Drawing without the Agonizing Pain</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a></div></div><br>

#### Statistics

<div style='text-align: center'><img src='./data/Benchmark datasets/Blogposts,%20Tweets,%20and%20Forums%20e315a82238dc40c5a3559c81ef7c57c8/four_in_one.svg' width='80%'></div>

#### Blogs/MOOC

#### Descriptions from Literature

From [TimeArcs: Visualizing Fluctuations in Dynamic Networks](https://doi.org/10.1111/cgf.12882):

> We collected 90,811 political blog posts over a ten-year period from 2005 to 2015 from seven different sources, including AMERICAblog, Huffington Post, and ProPublica. We then ran text analyses on these blogs and generated terms that were classified into four different categories. These terms were then input into *TimeArcs*.

From [Event-based Dynamic Graph Drawing without the Agonizing Pain](https://onlinelibrary.wiley.com/doi/full/10.1111/cgf.14615):

> MOOC represents the actions (e.g. viewing a video, submitting an answer, etc.) taken by users on a popular massive open online class platform [[KZL19](https://onlinelibrary.wiley.com/doi/full/10.1111/cgf.14615#cgf14615-bib-0037)]. The nodes represent users and course activities (targets), and temporal edges represent the actions by users on the targets. We pick and elaborate the first 15 thousands events.

#### Example Figures

From [TimeArcs: Visualizing Fluctuations in Dynamic Networks](https://doi.org/10.1111/cgf.12882):

<div style='text-align: center'><img src='./data/Benchmark datasets/Blogposts,%20Tweets,%20and%20Forums%20e315a82238dc40c5a3559c81ef7c57c8/Untitled.png' width='80%'></div>

**Fig. 7.** Overview of political events in the past 10 years using TimeArcs. The top 100 terms were selected based on their sudden attention and degree centrality. Terms are color-coded by category: green for person, red for location, blue for organization, yellow for miscellaneous category.

From [Event-based Dynamic Graph Drawing without the Agonizing Pain](https://onlinelibrary.wiley.com/doi/full/10.1111/cgf.14615):

<div style='text-align: center'><img src='./data/Benchmark datasets/Blogposts,%20Tweets,%20and%20Forums%20e315a82238dc40c5a3559c81ef7c57c8/Untitled%201.png' width='80%'></div>

**Table 2.** Flattened snapshots of the network evolution over time taken at regular intervals. Twenty artificial time slices were inserted for temporal graphs

#### Tweets

#### Descriptions from Literature

From  [Fast filtering and animation of large dynamic networks](https://epjdatascience.springeropen.com/articles/10.1140/epjds/s13688-014-0027-8):

> We use data obtained through the Twitter gardenhose streaming API, which covers around 10% of the tweet volume.We focus on two events: the announcement of Osama bin Laden’s death and the 2013 Super Bowl. We consider user mentions and hashtags as entities and their co-occurrence in the same tweet as interactions between them.

From [Event-based Dynamic Graph Drawing without the Agonizing Pain](https://onlinelibrary.wiley.com/doi/10.1111/cgf.14615):

> **Rugby** is a network derived from over 3000 tweets involving teams in the ‘Guinness Pro12’ rugby competition. The tweets were posted between 1 September 2014 and 23 October 2015. Each tweet contains information about the involved teams and the time of publication with a precision down to the second.

#### Example Figures

From  [Fast filtering and animation of large dynamic networks](https://epjdatascience.springeropen.com/articles/10.1140/epjds/s13688-014-0027-8)

<div style='text-align: center'><img src='./data/Benchmark datasets/Blogposts,%20Tweets,%20and%20Forums%20e315a82238dc40c5a3559c81ef7c57c8/Untitled%202.png' width='80%'></div>

::: 

<a name="Social_Networks"></a>

::: {.callout-note title="Social Networks" collapse=true appearance="minimal"}

Various social network datasets are used in the literature and here we provide a collection of some of the ones found in our survey. Namely, the Zachary Karate Club, Facebook100, Infectious SocioPatterns dynamic contact networks, and the Van De Brunt Fraternity Data. Note that Facebook1684 refers to the ego network for user 1684, and this along various other users can be found in SNAP. Unfortunately, we are unable to provide this dataset at this time. Social networks can be useful for their <a href="#clusters"><span class="pill-tag pill_color_clusters">clustering</span></a>opportunities and <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a>properties.

<div><b>Originally found at: </b><a href="https://snap.stanford.edu/data/ego-Facebook.html
">https://snap.stanford.edu/data/ego-Facebook.html
</a><a href="https://cs.swan.ac.uk/~dynnoslice/software.html
">https://cs.swan.ac.uk/~dynnoslice/software.html
</a><a href="https://archive.org/details/oxford-2005-facebook-matrix 
">https://archive.org/details/oxford-2005-facebook-matrix 
</a><a href="https://osf.io/dcz5h
">https://osf.io/dcz5h
</a><a href="http://www.sociopatterns.org/datasets/infectious-sociopatterns-dynamic-contact-networks/
">http://www.sociopatterns.org/datasets/infectious-sociopatterns-dynamic-contact-networks/
</a><a href="http://www-personal.umich.edu/~mejn/netdata/">http://www-personal.umich.edu/~mejn/netdata/</a></div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@zachary1977]</div><div class="col-8">An Information Flow Model for Conflict and Fission in Small Groups</div></div>
<div class="row"><div class="col-4">[@mcauley2012]</div><div class="col-8">Learning to discover social circles in ego networks</div></div>
<div class="row"><div class="col-4">[@ISELLA2011166]</div><div class="col-8">What’s in a crowd? analysis of face-to-face behavioral networks</div></div>
<div class="row"><div class="col-4">[@van_de_bunt_friendship_1999]</div><div class="col-8">Friendship Networks Through Time: An Actor-Oriented Dynamic Statistical Network Model</div></div>
<div class="row"><div class="col-4">[@facebooklong]</div><div class="col-8">Social Structure of Facebook Networks</div></div>
<div class="row"><div class="col-4">[@red2011]</div><div class="col-8">Comparing Community Structure to Characteristics in Online Collegiate Social Networks</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@nocaj2015]</div><div class="col-4">Untangling the Hairballs of Multi-Centered Small-World Online Social Media Networks</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Zhao2021]</div><div class="col-4">Preserving Minority Structures in Graph Sampling</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Simonetto2018]</div><div class="col-4">Drawing Dynamic Graphs Without Timeslices</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (continuous)</span></a></div></div>
<div class="row"><div class="col-4">[@Raj2018]</div><div class="col-4">Anisotropic Radial Layout for Visualizing Centrality and Structure in Graphs</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a></div></div>
<div class="row"><div class="col-4">[@Ni2018]</div><div class="col-4">Network Alignment by Discrete Ollivier-Ricci Flow</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Purchase2020]</div><div class="col-4">The Turing Test for Graph Drawing Algorithms</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@Hachul2006]</div><div class="col-4">An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Qu2022]</div><div class="col-4">Automatic Polygon Layout for Primal-Dual Visualization of Hypergraphs</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a></div></div>
<div class="row"><div class="col-4">[@hoffswell2018]</div><div class="col-4">SetCoLa: High-Level Constraints for Graph Layout</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Labeled_nodes"><span class="pill-tag pill_color_Labeled_nodes">Labeled nodes</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">A Random Sampling O</div><div class="col-4"></div></div>
<div class="row"><div class="col-4">[@fisheye2019]</div><div class="col-4">Structure-aware Fisheye Views for Efficient Large Graph Exploration</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@wang2018]</div><div class="col-4">Revisiting Stress Majorization as a Unified Framework for Interactive Constrained Graph Visualization</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a></div></div><br>

#### Zachary Karate Club Dataset

#### Descriptions from Literature

*[The Turing Test for Graph Drawing Algorithms](https://link.springer.com/chapter/10.1007/978-3-030-68766-3_36)*  describes the dataset simply as “social network” in their Table 1.

From [Anisotropic Radial Layout for Visualizing Centrality and Structure in Graphs](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_28):

> The Zachary’s karate club graph is a well known data set that is a social network of friendships in a karate club at a US university, as recorded during a study [[32](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_28#ref-CR32)]. This graph contains 34 nodes, each representing an individual, and 78 unweighted edges that represent a friendship between the associated individuals (Fig. [1](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_28#Fig1)). During the period of observation, a conflict between two key members, identified as the “administrator” and “instructor”, leads to a split in the club, giving it an interesting two cluster structure. In Fig. [1](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_28#Fig1), nodes representing members who are part of the instructor’s and administrator’s groups are drawn in green and blue, respectively.
> 

#### Example Figures

From “[The Turing Test for Graph Drawing Algorithms](https://arxiv.org/abs/2008.04869)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Social%20Networks%2090888b3285d042d49072985b05f95203/Untitled.png' width='80%'></div>

Figure from [supplementary materials](https://www.dcs.gla.ac.uk/~hcp/GD2020/) using a force directed layout. 

From “[Anisotropic Radial Layout for Visualizing Centrality and Structure in Graphs](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_28)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Social%20Networks%2090888b3285d042d49072985b05f95203/Untitled%201.png' width='80%'></div>

**Fig. 1.** Visualization of Zachary’s karate club social network using (a) MDS, (b) radial layout, and (c) anisotropic radial layout. Node sizes encode betweenness centrality.

 ****From “[Network Alignment by Discrete Ollivier-Ricci Flow](https://link.springer.com/chapter/10.1007/978-3-030-04414-5_32)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Social%20Networks%2090888b3285d042d49072985b05f95203/Untitled%202.png' width='80%'></div>

**Fig. 1.** An example of Ricci curvature on the karate club graph before and after Ricci flow. The colors represent the Ricci curvature while the thickness represents the edge weight. Ricci flow deformed the edge weights until Ricci curvatures converged (−0.0027 in this case).

#### Facebook100

#### Description from Literature

From [Untangling the Hairballs of Multi-Centered, Small-World Online Social Media Networks](https://jgaa.info/getPaper?id=370):

> As real world samples, we use the Facebook100 dataset [40], which contains social relations of 100 higher educational institutes in the US. The network size varies from 762 to 41K vertices and from 16K to 1.6M edges. Thedataset is directly from Facebook, not sampled, and thus very complete in terms of capturing the social relations according to a widely used service at that time. Additional attributes obtained from the Facebook profiles are gender, expected year of graduation, dormitory, etc. Due to incomplete profiles, a number of attribute values are missing.
> 

#### Example Figures

From [Untangling the Hairballs of Multi-Centered, Small-World Online Social Media Networks](https://jgaa.info/getPaper?id=370)

**Fig. 1.** Facebook friendships at California Institute of Technology (Caltech36). Vertex color corresponds to dormitory (gray for missing values), but has not been utilized by the layout algorithm. The layout in (a) is based on the entire graph, whereas (b)-(f) use edge embeddedness, which spreads the graph while keeping cohesive groups together. Embeddedness mapped to edge color; backbone edges dark gray.

<div style='text-align: center'><img src='./data/Benchmark datasets/Social%20Networks%2090888b3285d042d49072985b05f95203/Untitled%203.png' width='80%'></div>

#### Facebook Ego Networks (Facebook 1864)

#### Description from Literature

From ****[Preserving Minority Structures in Graph Sampling](https://ieeexplore.ieee.org/document/9222065)

> The Facebook1684 graph data set is an online social network with 775 nodes and 14,006 edges. The original graph and six samples are shown in Figure 4. This data set is an unbalanced graph in which two large communities include 705 nodes and two small communities/cliques contain only 70 nodes.
> 

The [supplemental](https://github.com/saibalmars/RicciFlow-SampleGraphs/tree/61f9c2c48d0de368369e232da959c4f996122e3a) material for *****[Network Alignment by Discrete Ollivier-Ricci Flow](https://link.springer.com/chapter/10.1007/978-3-030-04414-5_32)* also provides user 1864 of the Facebook ego networks in their repository. 

From [A Random Sampling O(n) Force-calculation Algorithm for Graph Layouts](https://osf.io/dcz5h):

> The ego graphs are Facebook ego graphs [**[ML12](https://onlinelibrary.wiley.com/doi/10.1111/cgf.13724#cgf13724-bib-0060)**] with the ego vertex re-added to the graph.

#### Example Figures

From Preserving Minority Structures in Graph Sampling](https://ieeexplore.ieee.org/document/9222065)

<div style='text-align: center'><img src='./data/Benchmark datasets/Social%20Networks%2090888b3285d042d49072985b05f95203/Untitled%204.png' width='80%'></div>

**Fig. 4.** Interface for subjective assessment experiment with the Facebook1684 data set (775 nodes and 14,006 edges). The leftmost graph is the original graph. The six randomly arranged samples are generated by SST (a), FF (b), MCGS (c), RW (d), TIES (e), and RDN (f) with a sampling rate of 30%.

#### Van De Bunt Fraternity

#### Description from the Literature

From [Preserving Minority Structures in Graph Sampling](https://ieeexplore.ieee.org/document/9222065)

> *Van De Bunt (Discrete):* shows the relationships between 32 freshmen at seven different time points. A discrete dynamic graph is built using the method of Brandes *et al.*  [[9](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_31#ref-CR9)], with an undirected edge inserted into a timeslice if the participants reciprocally report “best friendship” or “friendship” at that time.

#### **Syphilis Social Network**

#### Description from the Literature

From [SetCoLa: High-Level Constraints for Graph Layout](https://onlinelibrary.wiley.com/doi/10.1111/cgf.13440):

> Social networks can be a powerful way to understand inter-personal relationships and are useful for tracking the spread of diseases that result from personal contact [**[RST*98](https://onlinelibrary.wiley.com/doi/10.1111/cgf.13440#cgf13440-bib-0045)**, **[FHH*01](https://onlinelibrary.wiley.com/doi/10.1111/cgf.13440#cgf13440-bib-0022)**, **[MRV*03](https://onlinelibrary.wiley.com/doi/10.1111/cgf.13440#cgf13440-bib-0043)**, **[FHD*11](https://onlinelibrary.wiley.com/doi/10.1111/cgf.13440#cgf13440-bib-0021)**]. The ability to track and identify at risk individuals can lead to treatment and help manage the spread of the disease. In addition to the links between individuals, structuring the layout by node properties such as the social or ethnographically-identified group may reveal additional details about how the disease is spread.
> 

#### Example Figures

From [SetCoLa: High-Level Constraints for Graph Layout](https://onlinelibrary.wiley.com/doi/10.1111/cgf.13440):

<div style='text-align: center'><img src='./data/Benchmark datasets/Social%20Networks%2090888b3285d042d49072985b05f95203/Untitled%205.png' width='80%'></div>

**Fig. 4.** The layout for the syphilis social network from (a) Rothenberg et al. [[RST*98](https://onlinelibrary.wiley.com/doi/10.1111/cgf.13440#cgf13440-bib-0045)]. (b) We recreated and improved the layout in SetCoLa by introducing additional padding, alignment, and circle constraints to further highlight the relative number of interactions among the different groups. For both figures, the nodes are split into three groups, from left to right: young affluent white men, younger white women, and young African-American men. Individuals not associated with any of these “core” groups are positioned above the others. In both figures, individuals diagnosed with syphilis during the outbreak are labeled with an “S” on the node label.

::: 

<a name="Transportation_Networks"></a>

::: {.callout-note title="Transportation Networks" collapse=true appearance="minimal"}

Transportation networks are interesting because of their <a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a>nature, and feautre <a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a>
DIMACS USA Road Network source notes that the data has errors, namely missing major highways and bridges. We currently include only the subway layout networks in our files. 

<div><b>Originally found at: </b>http://www.diag.uniroma1.it//challenge9/download.shtml
<a href="https://osf.io/dcz5h">https://osf.io/dcz5h</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9498894a6be103212e712" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94d990c2b4d0e9c386231" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970f894a6be112a12ea21" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90f1394a6be0ec012e916" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>82-433 nodes, 158-950 edges</div><br>
<div><b>Number of Graphs: </b>15</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@gove2019]</div><div class="col-8">A Random Sampling O(n) Force-calculation Algorithm for Graph Layouts</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@muelder2008b]</div><div class="col-4">A Treemap Based Method for Rapid Layout of Large Graphs</div><div class="col-4"><a href="#Clusters_generated"><span class="pill-tag pill_color_Clusters_generated">Clusters (generated)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@muelder2008]</div><div class="col-4">Rapid Graph Layout Using Space Filling Curves</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Meulemans2013]</div><div class="col-4">KelpFusion: A Hybrid Set Visualization Technique</div><div class="col-4"><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@Nollenburg2011]</div><div class="col-4">Drawing and Labeling High-Quality Metro Maps by Mixed-Integer Programming</div><div class="col-4"><a href="#Labeled_nodes"><span class="pill-tag pill_color_Labeled_nodes">Labeled nodes</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@Huang2016]</div><div class="col-4">TrajGraph: A Graph-Based Visual Analytics Approach to Studying Urban Network Centralities Using Taxi Trajectory Data</div><div class="col-4"><a href="#Labeled_nodes"><span class="pill-tag pill_color_Labeled_nodes">Labeled nodes</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@greilich2009]</div><div class="col-4">Visualizing the evolution of compound digraphs with TimeArcTrees</div><div class="col-4"><a href="#Other"><span class="pill-tag pill_color_other">Compound graphs</span></a><a href="#Directed_edges"><span class="pill-tag pill_color_Directed_edges">Directed edges</span></a><a href="#Hierarchical"><span class="pill-tag pill_color_Hierarchical">Hierarchical</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a><a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a></div></div>
<div class="row"><div class="col-4">[@brandes1998]</div><div class="col-4">Using Graph Layout to Visualize Train Interconnection Data</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@zeng2019]</div><div class="col-4">Route-Aware Edge Bundling for Visualizing Origin-Destination Trails in Urban Traffic</div><div class="col-4"><a href="#bundled_edges_generated"><span class="pill-tag pill_color_bundled_edges_generated">bundled edges (generated)</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4"></div><div class="col-4">A Random Sampling O</div><div class="col-4"></div></div>
<div class="row"><div class="col-4">[@preiner2020]</div><div class="col-4">Augmenting Node-Link Diagrams with Topographic Attribute Maps</div><div class="col-4"><a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Other"><span class="pill-tag pill_color_Other">Topological</span></a><a href="#Trees"><span class="pill-tag pill_color_Trees">Trees</span></a><a href="#Weighted_edges"><span class="pill-tag pill_color_Weighted_edges">Weighted edges</span></a></div></div>
<div class="row"><div class="col-4">[@bast2020]</div><div class="col-4">Metro Maps on Octilinear Grid Graphs</div><div class="col-4"><a href="#Other"><span class="pill-tag pill_color_Other">Octilinear</span></a><a href="#Other"><span class="pill-tag pill_color_Other">Port constraints</span></a><a href="#Other"><span class="pill-tag pill_color_Other">Terminals</span></a></div></div>
<div class="row"><div class="col-4">[@zheng2019]</div><div class="col-4">Graph Drawing by Stochastic Gradient Descent</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div>
<div class="row"><div class="col-4">[@fisheye2019]</div><div class="col-4">Structure-aware Fisheye Views for Efficient Large Graph Exploration</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div>
<div class="row"><div class="col-4">[@wang2018]</div><div class="col-4">Revisiting Stress Majorization as a Unified Framework for Interactive Constrained Graph Visualization</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a></div></div>
<div class="row"><div class="col-4">[@batik2022]</div><div class="col-4">Shape-Guided Mixed Metro Map Layout</div><div class="col-4"><a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a></div></div><br>

#### Subways

#### Statistics

<div style='text-align: center'><img src='./data/Benchmark datasets/Transportation%20Networks%20720a658bb1914b51910c480d86943e80/four_in_one.svg' width='80%'></div>

#### Description from Literature

> Apart from the example of Sydney presented in Section 6, we have evaluated our method for two additional real-world networks: Vienna, which is a rather small network, and London, the oldest and still one of the most complex metro systems in the world. These networks have not been used as examples for previous metro map layout methods, so we can compare only against the official maps of Vienna and London. The size of the metro graphs (including Sydney) is given in Table 3 and ranges from 84 vertices and 8 faces (Vienna) to 308 vertices and 55 faces (London). The table further shows how the removal of degree-2 vertices described in Section 5.1 effectively reduces the number of vertices and edges.

<div style='text-align: center'><img src='./data/Benchmark datasets/Transportation%20Networks%20720a658bb1914b51910c480d86943e80/Untitled.png' width='80%'></div>

#### Example Figures

From “[Drawing and Labeling High-Quality Metro Maps by Mixed-Integer Programming](https://ieeexplore.ieee.org/document/5473229)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Transportation%20Networks%20720a658bb1914b51910c480d86943e80/Untitled%201.png' width='80%'></div>

**Fig. 16.** Unlabeled layout of the London Underground network produced by our method.

#### DIMACS USA Road Networks

#### Description from Literature

From “[A Treemap Based Method for Rapid Layout of Large Graphs](https://ieeexplore.ieee.org/document/4475481)”:

> The other graphs used in this paper are: a graph of network scans, which is a complete graph with edge weights between 0 and 1, but for clarity, edges with weights less than a certain threshold are not shown (Figures 3 and 4, |V|=878,|E|=385003, [19]), a small artificial graph of a grid topology (Figure 5, |V|=16,|E|=24), a large graph of streets in the San Francisco Bay Area (Figure 7, |V|=321,270,|E|=800,172, [8]).

From “[Rapid Graph Layout Using Space Filling Curves](https://ieeexplore.ieee.org/document/4658143)”:

> Finally, the “usafla” dataset (shown in Figure 7) is of the intersections and the streets between them in the state of Florida

#### Example Figures

From “[A Treemap Based Method for Rapid Layout of Large Graphs](https://ieeexplore.ieee.org/document/4475481)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Transportation%20Networks%20720a658bb1914b51910c480d86943e80/Untitled%202.png' width='80%'></div>

**Fig. 7.** *Scalability*. Our approach can scale to very large networks while still maintaining interactivity. |V|=321,270,|E|=800,172

From “[Rapid Graph Layout Using Space Filling Curves](https://ieeexplore.ieee.org/document/4658143)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Transportation%20Networks%20720a658bb1914b51910c480d86943e80/Untitled%203.png' width='80%'></div>

**Fig. 7.** Scalability. Our approach can scale to large graphs. This graph
is of the streets in the state of Florida, |V| = 1,070,376,|E| = 2,712,798
One small region is expanded to show detail.

::: 

### Lost and unavailable datasets {#sec-lost}

Unfortunately, some of the datasets that were used in the papers in our corpus are lost, or not available anymore. A dataset that is not accessible anymore renders all the papers using it unfortunately not reproducible. Most of the instances we found became lost because of lack of maintenance of the original storage locations: websites, servers, or repositories. This is, unfortunately, a significant issue in science, which is now hopefully gaining more attention.

"Loss" of a dataset does not exclusively mean that the entire, original dataset became lost, but also that a paper using a dataset with particular edits---such as interpreting a debate as a graph between the participants---has not documented well enough their process and did not link to the edited dataset. This makes it impossible to reproduce the results of the paper, and is further discussed in @sec-custom-made-datasets.

While we did go through the effort, for each one of them, to recover them and store them on OSF, we could not find anywhere the following list of datasets:

<a name="GION"></a>

::: {.callout-note title="GION" collapse=true appearance="minimal"}

The data was originally collected for a Bioinformatics paper, [Graph-based clustering and characterization of repetitive sequences in next-generation sequencing data](https://doi.org/10.1186/1471-2105-11-378). It was then used in [GION: Interactively Untangling Large Graphs on Wall-Sized Displays](https://link.springer.com/chapter/10.1007/978-3-662-45803-7_10) as a benchmark for their layout and experiment. However, the links to the original data no longer work. It had <a href="#Sparse"><span class="pill-tag pill_color_Sparse">Sparse</span></a> <a href="#dense"><span class="pill-tag pill_color_dense">dense</span></a>and <a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a>graphs.

<div><b>Originally found at: </b><a href="http://wcl.ml.unisa.edu.au/graph-untangling/graphs.zip">http://wcl.ml.unisa.edu.au/graph-untangling/graphs.zip</a></div><br>
<div><b>Number of Graphs: </b>8</div><br>
<div><b>Size: </b>8 graphs, 1159-7885 nodes, 6424-427406 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@Marner2014]</div><div class="col-8">GION: Interactively Untangling Large Graphs on Wall-Sized Displays</div></div>
<div class="row"><div class="col-4">[@novak_graph-based_2010]</div><div class="col-8">Graph-based clustering and characterization of repetitive sequences in next-generation sequencing data</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Eades2018]</div><div class="col-4">Drawing Big Graphs Using Spectral
Sparsification</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div>
<div class="row"><div class="col-4">[@Marner2014]</div><div class="col-4">GION: Interactively Untangling Large Graphs on Wall-Sized Displays</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div><br>

#### Descriptions from Literature

From “[Drawing Big Graphs Using Spectral Sparsification](https://doi.org/10.1007/978-3-319-73915-1_22)”:

> this consists of RNA sequence graphs that are used for the analysis of repetitive sequences in sequencing data; these graphs have been used in previous experiments. They are locally dense and globally sparse, and generally have distinctive shapes.

From “[GION: Interactively Untangling Large Graphs on Wall-Sized Displays](https://link.springer.com/chapter/10.1007/978-3-662-45803-7_10)”:

> We selected graphs that come from a real world application where graph visualization is used for data analysis and the graph size and layout quality requirements pose a challenge for state-of-the-art layout methods. Our graph set consists of RNA sequence graphs that are used for the analysis of repetitive sequences in sequencing data [11].

> Graph properties are provided in Table 1. The set of graphs can be downloaded from http://wcl.ml.unisa.edu.au/graph-untangling/graphs.zip. All graphs have high local density, and a sparse global structure that allows to create layouts far from hairballs that are showing the structure well.

<div style='text-align: center'><img src='./data/Benchmark datasets/GION%20fb235f160e504395a884f5a18fca6f17/Untitled.png' width='80%'></div>

#### Example Figures

From “[GION: Interactively Untangling Large Graphs on Wall-Sized Displays](https://link.springer.com/chapter/10.1007/978-3-662-45803-7_10)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/GION%20fb235f160e504395a884f5a18fca6f17/Untitled%201.png' width='80%'></div>

From “[Graph-based clustering and characterization of repetitive sequences in next-generation sequencing data](https://link.springer.com/article/10.1186/1471-2105-11-378)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/GION%20fb235f160e504395a884f5a18fca6f17/Untitled%202.png' width='80%'></div>

**Fig. 4. Examples of graph layouts derived from clusters of repetitive sequences**. Graph layouts were calculated using the 3D version of Fruchterman and Reingold algorithm from which a 2D projection is shown. Individual reads are represented by vertices and similar reads are connected by edges. Individual clusters are described further in Table 1.

::: 

<a name="FM3"></a>

::: {.callout-note title="FM3" collapse=true appearance="minimal"}

FM3 contains trees, path graphs, cycle graphs, scale-free graphs, caterpillar graphs, planar graphs, and generic graphs (connected simple graphs, generated with uniform probability distribution). Nonetheless, download links to data are broken.

<div><b>Originally found at: </b><a href="http://www.felicedeluca.com/ply/data.html ">http://www.felicedeluca.com/ply/data.html </a>(broken)</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@felice2017]</div><div class="col-8">An Experimental Study on the Ply Number of Straight-Line Drawings”</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Heinsohn2018]</div><div class="col-4">An Interactive Tool to Explore and Improve the Ply Number of Drawings</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a></div></div><br>


#### Descriptions from Literature

From “[An Experimental Study on the Ply Number of Straight-Line Drawings](https://doi.org/10.1007/978-3-319-53925-6_11)”:

> **Graph Datasets.** To understand whether the experimental results are influenced by the structure of the graph we considered several graph families. All graphs are of small or medium size, expressed as the number of their vertices. In some cases, the size and the number of instances used for each graph family depends on the type of question we want to answer (see Sect. 5 for details). We used the following datasets:
**Trees.** Generated with uniform probability distribution using Pru ̈fer sequences [28].
**Planar.** Connected simple planar graphs, generated with the OGDF library [6].
**General.** Connected simple graphs, generated with uniform probability distribution.
**Scale-free.** Scale-free graphs, generated according to the Barabasi-Albert model [2].
**Caterpillars.** Each caterpillar of n vertices is generated by first creating a path (spine of the caterpillar) of length $k\in [ \frac{n}{4} , \frac{n}{2} ]$ (randomly chosen), and attaching each remaining vertex to a randomly selected vertex of the spine.
**Paths, Cycles.** For each desired number of vertices n, there is only one (unlabeled) path and one (unlabeled) cycle of n vertices.
**k-ary Trees.** Rooted trees where each node has either 0 or k children. Each tree is generated by starting with a single vertex and then creating k children of a randomly selected leaf, until the desired number n of vertices is achieved. When n cannot be obtained, we use a value close to it.

From “[An Interactive Tool to Explore and Improve the Ply Number of Drawings](https://doi.org/10.1007/978-3-319-73915-1_4)”:

> **FM3data** contains 50 caterpillars with 250 to 450 vertices… **FM3data** also contains planar graphs ranging from 250 to 400 vertices and a density ranging from 1.5 to 2… The remaining subset of **FM3data** consists of general graphs with 250 to 450 vertices and the densities 1.5 and 2.5.

#### Example Figures

From “[An Experimental Study on the Ply Number of Straight-Line Drawings](https://doi.org/10.1007/978-3-319-53925-6_11)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/FM3%20b3dc638f5d7541b8b01105483c356e11/Screen_Shot_2023-08-16_at_3.26.01_PM.png' width='80%'></div>

::: 

<a name="Padia_Stories"></a>

::: {.callout-note title="Padia Stories" collapse=true appearance="minimal"}

These consist of fabricated narratives for characters of popular culture franchises, namely “The Witcher” and “Friends”. They were proposed by Kapesh Padia et al. as case studies for [Yarn: Generating Storyline Visualizations Using HTN Planning](https://doi.org/10.20380/GI2018.05). It had <a href="#temporal_event_sequence"><span class="pill-tag pill_color_temporal_event_sequence">temporal event sequences</span></a>and <a href="#layered_graphs"><span class="pill-tag pill_color_layered_graphs">layered</span></a>graphs.

<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@padia2018]</div><div class="col-8">Yarn: Generating Storyline Visualizations Using HTN Planning</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@padia2018]</div><div class="col-4">Yarn: generating storyline visualizations using HTN planning</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div>
<div class="row"><div class="col-4">[@padia2019]</div><div class="col-4">A system for generating storyline visualizations using hierarchical task network planning</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div><br>


#### Descriptions from Literature

From ‘’[Yarn: Generating Storyline Visualizations Using HTN Planning](https://doi.org/10.20380/GI2018.05)”:

> For our first example we use a narrative adapted from the video game Witcher 2 to show the capabilities of Yarn. In our example narrative, the hero, Geralt of Rivia needs to rescue his friend, Triss Merigold, who has mysteriously disappeared. On his journey to find her he must first determine where she was seen last, talk to multiple friends, and resolve a conflict between a troll couple before he can meet her.
There are two choice points in this narrative: first, Margot can either choose to help Geralt or refuse to provide help; second, the troll couple can either accept or reject Geralt’s solution to their conflict. Each of these choices affects the outcome of the narrative creating three possible timelines.
The first timeline contains events favorable to Geralt. In this timeline, Margot agrees to help Geralt and the troll couple accept Geralt’s solution leading him to find Triss. Fig. 5 shows a visualization of this outcome as the reality timeline for our narrative. We can see that Geralt was able to successfully track Triss’s last known location, gather information from friends, resolve a conflict between the trolls, and meet Triss. Note that in this visualization we are showing the default, reality timeline and all links are drawn with 100% opacity. We can also observe all single-entity events in the narrative in this visualization.
In the second timeline, the trolls reject Geralt’s solution to their conflict. Fig. 6 shows a visualization of this unfavorable outcome as diegetic timeline overlaid on top of the reality timeline. While most of the events are same in both timelines, the diegetic timeline ends at the event “Speak to She-Troll.” The reduced opacity of the reality timeline allows the user to compare common sections of the two timelines, even when one of them is smaller than the other.
In the third timeline, Margot refuses to help Geralt preventing him from progressing further on his quest. This is the shortest timeline in our narrative.

From ‘’[Yarn: Generating Storyline Visualizations Using HTN Planning](https://doi.org/10.20380/GI2018.05)”:

> For our second example we use a fictional narrative scenario based on the popular sitcom Friends.
In this narrative, Ross’s plan is to take Rachel on a date. To do so, he must acquire more information about her, find some way of talking to her, ensure she is positively disposed towards him, and eventually ask her out. He can acquire more information about her in a number of ways including calling her mother, or asking Phoebe about her by either call or text. To ensure she is in a positive mood, he can either give her a gift or say nice things to her, and finally he can either ask her out himself or ask for Phoebe’s help. To illustrate causality of events in the narrative timeline, we have set up the operator functions for Rachel such that she is more inclined to say yes to Ross if he talks to her mother rather than requesting Phoebe’s help. Additionally, Rachel’s probability of accepting Ross’s proposal is also dependent on how impressed she is by him when he asks her.
There are four choice points in this narrative: three for Ross, and one for Rachel. The choices made by Ross create 12 alternate timelines, each illustrating a different way in which he can ask Rachel out. Towards the end of each timeline Rachel can decide to either reply yes to Ross, or reply no, creating a total of 24 timelines.
Fig. 7 shows a visualization where Rachel agrees to go out with Ross in both timelines. While the timelines result in the same outcome, and visually look the same, we can inspect the labels on top of the events in Ross’s timeline to identify the differences. Lighter labels correspond to the reality timeline, while darker labels correspond to the diegetic timeline. In the reality timeline, Ross decided to give a gift to Rachel after talking to her mom, while in the diegetic timeline he decided to act friendly with her.
Fig. 8 shows another visualization for the same narrative. In this example we can see the effect of causal conditions set in the operator functions for Rachel. In the reality timeline, Rachel decided not to go out with Ross because he asked Phoebe for help by messaging her. On the other hand, she agreed to go out with him in the diegetic timeline because in this case Ross decided to talk to her mother.

#### Example Figures

From ‘’[Yarn: Generating Storyline Visualizations Using HTN Planning](https://doi.org/10.20380/GI2018.05)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Padia%20Stories%20c02a38b9ea5e40bfb682ae77e2ac23af/Untitled.png' width='80%'></div>

::: 

::: {.callout-note title="Internet Mapping Project" collapse=true appearance="minimal"}

The original Internet Mapping Project started at Bell lab in 1998. It was then transferred to the Lumeta Corporation, however, links to this corporation are broken.  A gallery of images still remains publicly available, hosted by Bill Cheswick on this personal website.

<div><b>Originally found at: </b><a href="http://www.cheswick.com/ches/map/
">http://www.cheswick.com/ches/map/
</a><a href="http://www.lumeta.com/company/mapping.html ">http://www.lumeta.com/company/mapping.html </a>(broken)</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@burch1999]</div><div class="col-8">Mapping the Internet</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Gansner2005b]</div><div class="col-4">Topological fisheye views for visualizing large graphs</div><div class="col-4"><a href="#Generic"><span class="pill-tag pill_color_Generic">Generic</span></a><a href="#Other"><span class="pill-tag pill_color_Other">High degree</span></a><a href="#Large"><span class="pill-tag pill_color_Large">Large</span></a></div></div><br>

#### Description from Literature

From “[Topological fisheye views for visualizing large graphs](https://doi.org/10.1109/TVCG.2005.66)”:

> Fig. 7 shows two topological fisheye views of a published Internet map [4]. It is a large tree (|V|=87,931, |E|=87,930) made by tracing connections from a central probe to all reachable IP subnets. The full layout of this graph in Fig. 7a is too dense to read. In contrast, our approach, seen in Fig. 7b and Fig. 7c, yields useful views by focusing on different portions of the graph.

#### Example Figures

From “[Internet Mapping Project: Map Gallery](http://www.cheswick.com/ches/map/gallery/index.html)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Internet%20Mapping%20Project%20fe59286f353d4841a2a328fdd6160b2f/isp-ss.gif' width='80%'></div>

Layout showing the major ISPs.

<div style='text-align: center'><img src='./data/Benchmark datasets/Internet%20Mapping%20Project%20fe59286f353d4841a2a328fdd6160b2f/Untitled.png' width='80%'></div>

From “[Topological fisheye views for visualizing large graphs](https://doi.org/10.1109/TVCG.2005.66)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Internet%20Mapping%20Project%20fe59286f353d4841a2a328fdd6160b2f/Untitled%201.png' width='80%'></div>

**Fig. 7.** This Internet map ((|V|=87,931, |E|=87,930)) is too large to visualize as a flat structure. Two topological fisheye views are shown. The focused sections in orange are the original graph. Peripheral areas, in blue, are simplified.

::: 

::: {.callout-note title="Medical Patient Records" collapse=true appearance="minimal"}

Dataset was not found. It contained <a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a> <a href="#Other"><span class="pill-tag pill_color_Other">Multivariate</span></a>data and <a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Pre-existing clusters</span></a> 

<div><b>Download formatted data: </b></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@NanCao2011]</div><div class="col-4">DICON: Interactive Visual Analysis of Multidimensional Clusters</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Other"><span class="pill-tag pill_color_Other">Multivariate</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div><br>


#### Description from Literature

From “[DICON: Interactive Visual Analysis of Multidimensional Clusters](https://doi.org/10.1109/TVCG.2011.188)”:

> We also applied DICON within the healthcare domain to visualize a dataset containing more than 10,000 patient records. The data includes claims, labs, pharmacy, and patient profile information. To augment this data, we applied a patient similarity algorithm to compute patient similarity scores across multiple dimensions (e.g., diagnoses, lab results, etc.). We also indexed the patient records to make the data searchable.

#### Example Figures

From “[DICON: Interactive Visual Analysis of Multidimensional Clusters](https://doi.org/10.1109/TVCG.2011.188)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Medical%20Patient%20Records%209bb4f4fc1e8242b2905eb286a0e00143/Untitled.png' width='80%'></div>

<div style='text-align: center'><img src='./data/Benchmark datasets/Medical%20Patient%20Records%209bb4f4fc1e8242b2905eb286a0e00143/Untitled%201.png' width='80%'></div>

::: 

<a name="Assorted_Fiscal_Network"></a>

::: {.callout-note title="Assorted Fiscal Network" collapse=true appearance="minimal"}

The dataset is cited as being from an evaluation of TaxNet from Didimo et al. The authors claim how this system was adopted by the Italian Revenue Agency on a pilot program in Tuscany, where all the evaluations happened. The dataset is implied to be internal, with nodes corresponding to individual tax payers and the authors mentioning anonymizing data themselves for security reasons. It contained <a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a> <a href="#Other"><span class="pill-tag pill_color_Other">High degree</span></a>and <a href="#Labeled_nodes"><span class="pill-tag pill_color_Labeled_nodes">Labeled nodes</span></a>

<div><b>Originally found at: </b>cannot find</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@DIDIMO201871]</div><div class="col-8">A visual analytics system to support tax evasion discovery</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@Angori2019]</div><div class="col-4">ChordLink: A New Hybrid Visualization Model0</div><div class="col-4"><a href="#Categorical_nodes"><span class="pill-tag pill_color_Categorical_nodes">Categorical nodes</span></a><a href="#Other"><span class="pill-tag pill_color_Other">High degree</span></a><a href="#Labeled_nodes"><span class="pill-tag pill_color_Labeled_nodes">Labeled nodes</span></a></div></div><br>

#### Descriptions from the Literature

From “[CHORDLINK: A New Hybrid Visualization Model](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_22)”:

> We considered a real network of taxpayers and their economic transactions. The network is provided by the IRV (Italian Revenue Agency) and refers to a portion of data for the fiscal year 2014, consisting of 174 subjects with high fiscal risk and 200 economic transactions between them [[11](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_22#ref-CR11)].

From “[A visual analytics system to support tax evasion discovery](https://www.sciencedirect.com/science/article/pii/S0167923618300563?via%3Dihub#s0015)”:

> The data sources queried by the IRV officers are modeled in TaxNet as a unified network *G*. Each node *v* of *G* is a single taxpayer, which can be either an individual or a legal person, like a private company or a public institution. Many attributes are associated with *v*, including the type of economic activity, the geographic location and territorial scope, the declared income, the amount of VAT credits/debts and of VAT refunded/paid, and the amount of economic exchange within the European Union. The edges of *G* are directed edges. An edge (*u*,*v*) can model different types of relationships between *u* and *v*.

#### Example Figures

From [CHORDLINK: A New Hybrid Visualization Model](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_22)

<div style='text-align: center'><img src='./data/Benchmark datasets/Assorted%20Fiscal%20Network%206610534d6d3b48c5a119b04659153258/Untitled.png' width='80%'></div>

**Fig. 4.** A visualization obtained by selecting some communities in a node-link diagram.

::: 

<a name="Car_Features"></a>

::: {.callout-note title="Car Features" collapse=true appearance="minimal"}

The origin of this dataset is not disclosed by the author. It is <a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a> has <a href="#clusters"><span class="pill-tag pill_color_clusters">pre-existing clusters</span></a>and it is <a href="#Other"><span class="pill-tag pill_color_Other">Multivariate</span></a>

<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@NanCao2011]</div><div class="col-4">DICON: Interactive Visual Analysis of Multidimensional Clusters</div><div class="col-4"><a href="#Clusters_pre-existing"><span class="pill-tag pill_color_Clusters_pre-existing">Clusters (pre-existing)</span></a><a href="#Other"><span class="pill-tag pill_color_Other">Multivariate</span></a><a href="#Spatial"><span class="pill-tag pill_color_Spatial">Spatial</span></a></div></div><br>


#### Descriptions from Literature

From “[DICON: Interactive Visual Analysis of Multidimensional Clusters](https://doi.org/10.1109/TVCG.2011.188)”:

> We applied DICON to a cars dataset which has also been used to evaluate both parallel coordinates (PCP) and scatter plot matrices (SPM) (see Fig. 8(a) and (b)). The cars dataset contains 407 cars described by 7 different dimensions from which we selected 5 quantitative dimensions as features. The two remaining dimensions, year and origin, were used as additional attributes.

#### Example Figures

From “[DICON: Interactive Visual Analysis of Multidimensional Clusters](https://doi.org/10.1109/TVCG.2011.188)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Car%20Features%203365100498bc4a1eb77bcadcace2b2fa/IMG_0010.jpeg' width='80%'></div>

::: 

<a name="Business Processes"></a>

::: {.callout-note title="Business Processes" collapse=true appearance="minimal"}

The Origin Paper collects various graphs from a few of sources. Some of these datasets are from international business process intelligence challenges, and others are specific processes from companies in a certain domain (hospital, road traffic management, pay processes, etc.). Dataset links in supplemental materials are broken. After contacting the author, they mentioned that the other datasets were internal and could not be shared. It had <a href="#Labeled_nodes"><span class="pill-tag pill_color_Labeled_nodes">Labeled nodes</span></a>and <a href="#layered-graphs"><span class="pill-tag pill_color_layered-graphs">layered graphs</span></a>

<div><b>Originally found at: </b><a href="https://robinmennens.github.io/Portfolio/stableprocessgraphs.html">https://robinmennens.github.io/Portfolio/stableprocessgraphs.html</a></div><br>
<div><b>Size: </b>13 graphs from 11 to 50 nodes and up to 772 edges</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@mennens2019]</div><div class="col-8">A Stable Graph Layout Algorithm for Processes</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@mennens2019]</div><div class="col-4">A stable graph layout algorithm for processes</div><div class="col-4"><a href="#Labeled_nodes"><span class="pill-tag pill_color_Labeled_nodes">Labeled nodes</span></a><a href="#Layered_graphs"><span class="pill-tag pill_color_Layered_graphs">Layered graphs</span></a><a href="#N-layers"><span class="pill-tag pill_color_N-layers">N-layers</span></a></div></div><br>

#### Description From Literature

From [A stable graph layout algorithm for processes](https://onlinelibrary.wiley.com/doi/10.1111/cgf.13723):

> We use 13 datasets (see supplementary material), which represent real-world processes. For every dataset, we ran 500 tests on both methods. Each test involved a pair of randomly generated graphs  $G_1, G_2 \subseteq \bar{G}$  , which were obtained by randomly removing a subset of the edges $\bar{E}$ and then removing all nodes $n \in \bar{V}$ that became disconnected. Consequently, $G_1$ and $G_2$ are random sub-graphs of $\bar{G}$ .
> 

Table from Supplementary Materials:

<div style='text-align: center'><img src='./data/Benchmark datasets/Business%20Processes%209d09430927704fcf8fdf1ee4e00cabbc/Untitled.png' width='80%'></div>

#### Example Figures

From [A stable graph layout algorithm for processes](https://onlinelibrary.wiley.com/doi/10.1111/cgf.13723):

<div style='text-align: center'><img src='./data/Benchmark datasets/Business%20Processes%209d09430927704fcf8fdf1ee4e00cabbc/Untitled%201.png' width='80%'></div>

::: 

This last one is not available as an individual download, but still navigable on the internet and could potentially be crawled:

<a name="Mathematics Genealogy"></a>

::: {.callout-note title="Mathematics Genealogy" collapse=true appearance="minimal"}

Database from a project started by Harry Coonce and now supported by the North Dakota State University. Refer to the <a href="https://mathgenealogy.org/contact.php ">https://mathgenealogy.org/contact.php</a> for the data, which consists of doctoral graduates in mathematics and some adjacent fields, alongside properties like the degree granting institution and tittle of thesis. Entries also have relations based on advisors. It has <a href="#Nonplanar"><span class="pill-tag pill_color_Nonplanar">Non-planar</span></a> <a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a>and <a href="#Trees"><span class="pill-tag pill_color_Trees">Tree-like</span></a>graphs.

<div><b>Originally found at: </b><a href="https://genealogy.math.ndsu.nodak.edu/">https://genealogy.math.ndsu.nodak.edu/</a></div><br>
<div><b>Size: </b>291014 records as of May 2023. In 2016 the graph consisted of 200037 nodes with 3.8% percent of them being isolated, and 1962 components of size two. The largest component contained 180094 nodes.</div><br>
<div><b>Origin paper: </b></div>
<div class="row"><div class="col-4">[@math2006-mw]</div><div class="col-8">The Mathematics Genealogy Project</div></div><br>
<div><b>Usage examples: </b></div>
<div class="row"><div class="col-4">[@gray2023]</div><div class="col-4">Visualizing Evolving Trees</div><div class="col-4"><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic</span></a><a href="#Dynamic"><span class="pill-tag pill_color_Dynamic">Dynamic (discrete)</span></a></div></div><br>

#### Description from Literature

From “[Visualizing Evolving Trees](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_23)”:

> **The Mathematics Genealogy:** shows advisor-advisee relationships in the world of mathematics, stretching back to the middle ages [[36](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_23#ref-CR36)]. The dataset includes the thesis titles, students, advisors, dates, and number of descendants. The total number of nodes is around 260,000 and is continuously updated. While this data is not quite a tree (or even connected, or planar), we extract a subset to create a tree with 500 nodes. The maximum node degree of this tree is 5 and the radius is 14.

#### Example Figures

From [The Mathematics Genealogy Project](https://genealogy.math.ndsu.nodak.edu/):

<div style='text-align: center'><img src='./data/Benchmark datasets/Mathematics%20Genealogy%20081ba4645aac48c19719b16033c637f3/Untitled.png' width='80%'></div>

From “[Visualizing Evolving Trees](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_23)”:

<div style='text-align: center'><img src='./data/Benchmark datasets/Mathematics%20Genealogy%20081ba4645aac48c19719b16033c637f3/Untitled%201.png' width='80%'></div>

**Fig. 4:** Layouts from DynNoSlice, DynaGraph, Dagre, Radial, ImPrEd, DynaCola and DynaSafe of the same evolving math genealogy tree; each row adds six new nodes.

::: 

### Custom-made Datasets {#sec-custom-made-datasets}
In the data we collected, we also found several instances of custom-made datasets. We consider custom-made datasets either edits to pre-existing datasets, where the authors found it necessary to either split or modify the dataset in a particular way, or datasets completely made up from scratch using random generators or custom-made code. This can happen in cases where the authors of a paper needed a dataset containing particular characteristics which was not easy to find in the wild, so a new dataset was crafted.

For instance, consider the case where the authors of a paper develop an algorithm that works on hypergraphs. They want to test that the algorithm works, and test its performance on hypergraphs of various sizes, but datasets containing hypergraphs are difficult to find. For this reason, the authors craft one dataset synthetically, or take a pre-existing dataset and edit it so that it now contains hyperedges. 

We split custom-made datasets in three categories, with their occurrences in the corpus of papers illustrated below:


```{ojs}
//| echo: false
//| fig-cap: "The chart shows what type of edits were made to datasets, or how they were generated. Non-Replicable edits or generation of datasets where the majority in the corpus of papers we collected."
{ 
  let d = []
  
  let allbenchmarkdatasets = [...new Set(literature.map(l => l["Dataset tag clean"].split(",").map(d => d.trim())).flat())].filter(a => a != "")

  for (let dataset of allbenchmarkdatasets){
    if (!dataset.includes("Custom")) continue;
    let literature_entries_with_this_dataset = literature.filter(l => l["Dataset tag clean"].includes(dataset))

    d.push({"dataset": dataset, "count": literature_entries_with_this_dataset.length})
  }
  
  return Plot.plot({
    color: {
      // legend: true,
      type: "categorical",
      // domain: d3.range(10).map((d, i) => `Category ${i + 1}`),
      scheme: "Tableau10" // use the "accent" scheme
    },
    y: {
      // tickFormat: "s"
    },
    marks: [
      Plot.barX(d, {x: "count", y: "dataset", fill: "dataset",inset: 2, sort: {y: "x", reverse: true}}),
      Plot.axisY({label: null, lineWidth: 12, marginLeft: 150}),
    ]
  })
}
```


**Replicable** datasets indicate cases where the authors have given enough information so that the experiment can be replicated exactly as it was run by the authors of a paper, or closely enough that the results obtained reflect the published ones very closely. This includes cases where either the authors published the entire dataset they used, they published the code they used to generate the dataset, or include an exact description of the steps they took to generate it.

**Reproducible** datasets are cases where the authors described the steps they took to generate and/or edit their datasets, but not in-depth enough so that the exact same graphs can be reproduced, and did not redistribute it. Results can still be reproduces somewhat closely if the authors took care to report enough information about their graphs.

For **non-replicable** datasets, we indicate cases where the authors did not distribute their datasets and did not include enough information in the paper so that their results could be replicated. 

This information is closely tied to the distribution of supplemental material in papers, that is shown in the chart below:

```{ojs}
//| echo: false
//| fig-cap: What is distributed as supplemental material with papers? Most papers just distribute an extended version of their content, while another large chunk in our analysis did not distribute any. 
{ 
  let d = []
  
  let allbenchmarkdatasets = [...new Set(literature.map(l => l["Supplemental material (Multi-select)"].split(",").map(d => d.trim())).flat())].filter(a => a != "")

  for (let dataset of allbenchmarkdatasets){
    let literature_entries_with_this_dataset = literature.filter(l => l["Supplemental material (Multi-select)"].includes(dataset))

    if (dataset == "Yes") continue;
    // capitalize first letter
    dataset = dataset.charAt(0).toUpperCase() + dataset.slice(1)

    d.push({"dataset": dataset, "count": literature_entries_with_this_dataset.length})
  }
  
  return Plot.plot({
    color: {
      // legend: true,
      type: "categorical",
      // domain: d3.range(10).map((d, i) => `Category ${i + 1}`),
      scheme: "Tableau10" // use the "accent" scheme
    },
    y: {
      // tickFormat: "s"
    },
    marks: [
      Plot.barX(d, {x: "count", y: "dataset", fill: "dataset",inset: 2, sort: {y: "x", reverse: true}}),
      Plot.axisY({label: null, lineWidth: 12, marginLeft: 150}),
    ]
  })
}
```



This discussion is part of a larger discourse on research replicability, that is gaining traction in the scientific community. The ACM, for instance, has a policy on artifact review and badging, where authors are encouraged to submit their artifacts for review, and if they pass, they receive a badge that indicates the artifact is available for review. This is a step towards making research more replicable and reproducible, and we hope that our work will contribute to this effort. 

See, e.g., ACM's definitions at [https://www.acm.org/publications/policies/artifact-review-and-badging-current](https://www.acm.org/publications/policies/artifact-review-and-badging-current).